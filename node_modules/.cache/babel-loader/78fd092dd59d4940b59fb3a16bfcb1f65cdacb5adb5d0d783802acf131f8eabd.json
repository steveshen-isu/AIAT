{"ast":null,"code":"import { nearlyEqual } from './number.js';\n\n/**\r\n * Test whether two complex values are equal provided a given relTol and absTol.\r\n * Does not use or change the global Complex.EPSILON setting\r\n * @param {Complex} x - The first complex number for comparison.\r\n * @param {Complex} y - The second complex number for comparison.\r\n * @param {number} relTol - The relative tolerance for comparison.\r\n * @param {number} absTol - The absolute tolerance for comparison.\r\n * @returns {boolean} - Returns true if the two complex numbers are equal within the given tolerances, otherwise returns false.\r\n */\nexport function complexEquals(x, y, relTol, absTol) {\n  return nearlyEqual(x.re, y.re, relTol, absTol) && nearlyEqual(x.im, y.im, relTol, absTol);\n}","map":{"version":3,"names":["nearlyEqual","complexEquals","x","y","relTol","absTol","re","im"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/utils/complex.js"],"sourcesContent":["import { nearlyEqual } from './number.js';\r\n\r\n/**\r\n * Test whether two complex values are equal provided a given relTol and absTol.\r\n * Does not use or change the global Complex.EPSILON setting\r\n * @param {Complex} x - The first complex number for comparison.\r\n * @param {Complex} y - The second complex number for comparison.\r\n * @param {number} relTol - The relative tolerance for comparison.\r\n * @param {number} absTol - The absolute tolerance for comparison.\r\n * @returns {boolean} - Returns true if the two complex numbers are equal within the given tolerances, otherwise returns false.\r\n */\r\nexport function complexEquals(x, y, relTol, absTol) {\r\n  return nearlyEqual(x.re, y.re, relTol, absTol) && nearlyEqual(x.im, y.im, relTol, absTol);\r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,aAAa;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,MAAM,EAAE;EAClD,OAAOL,WAAW,CAACE,CAAC,CAACI,EAAE,EAAEH,CAAC,CAACG,EAAE,EAAEF,MAAM,EAAEC,MAAM,CAAC,IAAIL,WAAW,CAACE,CAAC,CAACK,EAAE,EAAEJ,CAAC,CAACI,EAAE,EAAEH,MAAM,EAAEC,MAAM,CAAC;AAC3F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}