{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\TopicSelector.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\nimport katex from 'katex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderLatex(latex) {\n  try {\n    const sanitizedLatex = latex.replace(/\\\\\\(|\\\\\\)|\\\\\\[|\\\\\\]/g, '');\n    const lines = sanitizedLatex.split('\\n');\n    return katex.renderToString(latex, {\n      throwOnError: false,\n      displayMode: true\n    });\n  } catch (e) {\n    return `<span class=\"error\">Error rendering LaTeX: ${e.message}</span>`;\n  }\n}\nconst typewriterEffect = async (content, setDisplayContent) => {\n  content = content.replace(/\\\\\\[\\s*/g, '\\\\['); // Replace \\[ with \\( and remove leading spaces\n  content = content.replace(/\\s*\\\\\\]/g, '\\\\]'); // Replace \\] with \\) and remove trailing spaces\n\n  const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[.*?\\\\\\])/g;\n  const parts = content.split(regex).filter(Boolean);\n  let displayContent = '';\n  for (const part of parts) {\n    if (part.startsWith('\\\\(') || part.startsWith('\\\\[')) {\n      // Process LaTeX content\n      try {\n        const isDisplayMode = part.startsWith('\\\\[');\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, ''); // Strip the delimiters\n        const renderedMath = katex.renderToString(mathContent, {\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n\n        // Simulate typing the LaTeX\n        for (let i = 0; i < renderedMath.length; i++) {\n          displayContent += renderedMath[i];\n          setDisplayContent(displayContent);\n          /*                     await delayRandomTime(); \r\n           */\n        }\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n        setDisplayContent(displayContent);\n      }\n    } else {\n      // Process plain text content\n      for (let i = 0; i < part.length; i++) {\n        displayContent += part[i] === '\\n' ? '<br />' : part[i];\n        setDisplayContent(displayContent);\n        await textdelayRandomTime();\n      }\n    }\n  }\n};\n\n// Function to create random delay\n/* const delayRandomTime = () => {\r\n    return new Promise(resolve => {\r\n        const randomDelay = Math.floor(Math.random() * 1) + 0; // Delay between 50ms to 250ms\r\n        setTimeout(resolve, randomDelay);\r\n    });\r\n};  */\n\nconst textdelayRandomTime = () => {\n  return new Promise(resolve => {\n    const randomDelay = Math.floor(Math.random() * 100) + 10; // Delay between 50ms to 250ms\n    setTimeout(resolve, randomDelay);\n  });\n};\n\n// Main component to handle the content rendering\nconst TypewriterRenderer = ({\n  content\n}) => {\n  _s();\n  const [displayContent, setDisplayContent] = useState('');\n  useEffect(() => {\n    // Start the typewriter effect when the component loads\n    typewriterEffect(content, setDisplayContent);\n  }, [content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left',\n        // Align text to the left\n        margin: '0 auto',\n        // Center the div horizontally\n        padding: '10px',\n        // Add padding\n        maxWidth: '800px',\n        // Set a max width for the container\n        marginLeft: '20px',\n        // Add some space from the left\n        border: '2px solid gray',\n        // Gray border\n        backgroundColor: 'black',\n        // Black background\n        color: 'white' // Set text color to white for visibility\n      },\n      dangerouslySetInnerHTML: {\n        __html: displayContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(TypewriterRenderer, \"CWF/jOCr/6dzKRDifOVVHM2M7Es=\");\n_c = TypewriterRenderer;\nfunction escapeBackslashes(str) {\n  return str.replace(/\\\\/g, '\\\\\\\\');\n}\nconst renderContentWithLatex = content => {\n  // Regular expression to match LaTeX math mode delimiters \\( ... \\) or \\[ ... \\]\n  content = content.replace(/\\\\\\[\\s*/g, '\\\\['); // Replace \\[ with \\( and remove leading spaces\n  content = content.replace(/\\s*\\\\\\]/g, '\\\\]'); // Replace \\] with \\) and remove trailing spaces\n\n  const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[.*?\\\\\\])|(\\\\\\[\\\\\\n.*?\\\\\\]\\\\\\n)/g;\n\n  // Split content into plain text and LaTeX parts\n  const parts = content.split(regex).filter(Boolean);\n  console.log('parts in rendercontent function', parts);\n\n  // Process each part and return a string of HTML\n  const htmlContent = parts.map((part, index) => {\n    if (!part) return ''; // Skip undefined or empty parts\n\n    // If part starts with a LaTeX delimiter, render it with KaTeX\n    if (part.startsWith('\\\\(') || part.startsWith('\\\\[')) {\n      try {\n        const isDisplayMode = part.startsWith('['); // Use display mode for \\[ \\]\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');\n        return katex.renderToString(mathContent, {\n          delimiters: [{\n            left: '$$',\n            right: '$$',\n            display: true\n          }, {\n            left: '$',\n            right: '$',\n            display: false\n          }, {\n            left: '\\\\(',\n            right: '\\\\)',\n            display: false\n          }, {\n            left: '\\\\[',\n            right: '\\\\]',\n            display: true\n          }],\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        return `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n      }\n    } else {\n      // Render plain text, replacing newlines with <br> tags for line breaks\n      return part.replace(/\\n/g, '<br />');\n    }\n  });\n\n  // Join all parts into a single HTML string and return it\n  return htmlContent.join('');\n};\nfunction Typewriter({\n  text,\n  speed = 50\n}) {\n  _s2();\n  const [displayedText, setDisplayedText] = useState('');\n  useEffect(() => {\n    let index = 0;\n    const timer = setInterval(() => {\n      if (index < text.length) {\n        setDisplayedText(prev => prev + text[index]);\n        index++;\n      } else {\n        clearInterval(timer);\n      }\n    }, speed);\n    return () => clearInterval(timer);\n  }, [text, speed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: displayedText\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 12\n  }, this);\n}\n_s2(Typewriter, \"PLbRMeWiJa2NBtcoy3qeXvmWyJg=\");\n_c2 = Typewriter;\nfunction TopicSelector() {\n  _s3();\n  const [subjects, setSubjects] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [chapters, setChapters] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTextbook, setSelectedTextbook] = useState('');\n  const [selectedChapter, setSelectedChapter] = useState('');\n  const [latexCode, setLatexCode] = useState('');\n  const [userQuestion, setUserQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  console.log('Fetching from URL:', '/api/subjects');\n\n  // Fetch subjects on component mount\n  useEffect(() => {\n    fetch('http://localhost:200/api/subjects').then(response => response.json()).then(data => setSubjects(data)).catch(error => console.error('Error fetching subjects:', error));\n  }, []);\n\n  // Fetch textbooks when a subject is selected\n  useEffect(() => {\n    if (selectedSubject) {\n      fetch(`http://localhost:200/api/textbooks?subjectId=${selectedSubject}`).then(response => response.json()).then(setTextbooks).catch(error => console.error('Error fetching textbooks:', error));\n    } else {\n      setTextbooks([]); // Clear textbooks when no subject is selected\n    }\n  }, [selectedSubject]);\n\n  // Fetch chapters when a textbook is selected\n  useEffect(() => {\n    if (selectedTextbook) {\n      fetch(`http://localhost:200/api/chapters?textbookId=${selectedTextbook}`).then(response => response.json()).then(setChapters).catch(error => console.error('Error fetching chapters:', error));\n    } else {\n      setChapters([]); // Clear chapters when no textbook is selected\n    }\n  }, [selectedTextbook]);\n\n  // Fetch LaTeX code when a chapter is selected\n  useEffect(() => {\n    if (selectedChapter) {\n      fetch(`http://localhost:200/api/latex-code?chapterId=${selectedChapter}`).then(response => response.json()).then(data => setLatexCode(data.latexCode)).catch(error => console.error('Error fetching LaTeX code:', error));\n    }\n  }, [selectedChapter]);\n\n  /* const latexCodetest = `\r\n  \\\\begin{equation}\r\n  x + y = z\r\n  \\\\end{equation}\r\n  \\\\begin{equation}\r\n  x + y = z\r\n  \\\\end{equation}\r\n  `; */\n  /* const escapedLatexCode = escapeBackslashes(latexCode); */\n\n  console.log('Latex Code on render:', latexCode);\n  console.log('html on render:', renderContentWithLatex(latexCode));\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('http://localhost:200/api/chatgpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: userQuestion,\n          latexCode: latexCode\n        })\n      });\n      const data = await res.json();\n      setResponse(data.response);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const renderedresoponse = renderLatex(escapeBackslashes(response));\n  console.log('response from openai', response);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select a Chapter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSubject,\n      onChange: e => setSelectedSubject(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: subject.id,\n        children: subject.name\n      }, subject.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTextbook,\n      onChange: e => setSelectedTextbook(e.target.value),\n      disabled: !selectedSubject,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a textbook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), textbooks.map(textbook => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: textbook.id,\n        children: textbook.name\n      }, textbook.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedChapter,\n      onChange: e => setSelectedChapter(e.target.value),\n      disabled: !selectedTextbook,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: chapter.id,\n        children: chapter.title\n      }, chapter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterRenderer, {\n          content: latexCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ask a Question about the content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          children: \"Your Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"question\",\n          value: userQuestion,\n          onChange: e => setUserQuestion(e.target.value),\n          rows: \"4\",\n          cols: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response from Aisolver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterRenderer, {\n          content: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 9\n  }, this);\n}\n_s3(TopicSelector, \"KdeWd+8v7GCzQadBY5GgbJ/ECv4=\");\n_c3 = TopicSelector;\nexport default TopicSelector;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TypewriterRenderer\");\n$RefreshReg$(_c2, \"Typewriter\");\n$RefreshReg$(_c3, \"TopicSelector\");","map":{"version":3,"names":["React","useState","useEffect","katex","jsxDEV","_jsxDEV","renderLatex","latex","sanitizedLatex","replace","lines","split","renderToString","throwOnError","displayMode","e","message","typewriterEffect","content","setDisplayContent","regex","parts","filter","Boolean","displayContent","part","startsWith","isDisplayMode","mathContent","renderedMath","i","length","console","error","textdelayRandomTime","Promise","resolve","randomDelay","Math","floor","random","setTimeout","TypewriterRenderer","_s","children","style","textAlign","margin","padding","maxWidth","marginLeft","border","backgroundColor","color","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","escapeBackslashes","str","renderContentWithLatex","log","htmlContent","map","index","delimiters","left","right","display","join","Typewriter","text","speed","_s2","displayedText","setDisplayedText","timer","setInterval","prev","clearInterval","_c2","TopicSelector","_s3","subjects","setSubjects","textbooks","setTextbooks","chapters","setChapters","selectedSubject","setSelectedSubject","selectedTextbook","setSelectedTextbook","selectedChapter","setSelectedChapter","latexCode","setLatexCode","userQuestion","setUserQuestion","response","setResponse","fetch","then","json","data","catch","handleSubmit","preventDefault","res","method","headers","body","JSON","stringify","question","renderedresoponse","value","onChange","target","subject","id","name","disabled","textbook","chapter","title","onSubmit","htmlFor","rows","cols","type","_c3","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/TopicSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\r\nimport katex from 'katex';\r\n\r\nfunction renderLatex(latex) {\r\n    try {\r\n        const sanitizedLatex = latex.replace(/\\\\\\(|\\\\\\)|\\\\\\[|\\\\\\]/g, '');\r\n        const lines = sanitizedLatex.split('\\n');\r\n        return katex.renderToString(latex, {\r\n            throwOnError: false,\r\n            displayMode: true \r\n        });\r\n    } catch (e) {\r\n        return `<span class=\"error\">Error rendering LaTeX: ${e.message}</span>`;\r\n    }\r\n}\r\n\r\nconst typewriterEffect = async (content, setDisplayContent) => {\r\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\[');  // Replace \\[ with \\( and remove leading spaces\r\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]');  // Replace \\] with \\) and remove trailing spaces\r\n    \r\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[.*?\\\\\\])/g;\r\n    const parts = content.split(regex).filter(Boolean);\r\n    let displayContent = '';\r\n    \r\n    for (const part of parts) {\r\n        if (part.startsWith('\\\\(') || part.startsWith('\\\\[')) {\r\n            // Process LaTeX content\r\n            try {\r\n                const isDisplayMode = part.startsWith('\\\\[');\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');  // Strip the delimiters\r\n                const renderedMath = katex.renderToString(mathContent, { throwOnError: false, displayMode: isDisplayMode });\r\n                \r\n                // Simulate typing the LaTeX\r\n                for (let i = 0; i < renderedMath.length; i++) {\r\n                    displayContent += renderedMath[i];\r\n                    setDisplayContent(displayContent);\r\n/*                     await delayRandomTime(); \r\n */                }\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n                setDisplayContent(displayContent); \r\n            }\r\n        } else {\r\n            // Process plain text content\r\n            for (let i = 0; i < part.length; i++) {\r\n                displayContent += part[i] === '\\n' ? '<br />' : part[i];\r\n                setDisplayContent(displayContent);\r\n                await textdelayRandomTime();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// Function to create random delay\r\n/* const delayRandomTime = () => {\r\n    return new Promise(resolve => {\r\n        const randomDelay = Math.floor(Math.random() * 1) + 0; // Delay between 50ms to 250ms\r\n        setTimeout(resolve, randomDelay);\r\n    });\r\n};  */\r\n\r\nconst textdelayRandomTime = () => {\r\n    return new Promise(resolve => {\r\n        const randomDelay = Math.floor(Math.random() * 100) + 10; // Delay between 50ms to 250ms\r\n        setTimeout(resolve, randomDelay);\r\n    });\r\n};\r\n\r\n// Main component to handle the content rendering\r\nconst TypewriterRenderer = ({ content }) => {\r\n    const [displayContent, setDisplayContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Start the typewriter effect when the component loads\r\n        typewriterEffect(content, setDisplayContent);\r\n    }, [content]);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    textAlign: 'left',         // Align text to the left\r\n                    margin: '0 auto',          // Center the div horizontally\r\n                    padding: '10px',           // Add padding\r\n                    maxWidth: '800px',         // Set a max width for the container\r\n                    marginLeft: '20px',        // Add some space from the left\r\n                    border: '2px solid gray',  // Gray border\r\n                    backgroundColor: 'black',  // Black background\r\n                    color: 'white'             // Set text color to white for visibility\r\n                }}\r\n                dangerouslySetInnerHTML={{ __html: displayContent }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction escapeBackslashes(str) {\r\n    return str.replace(/\\\\/g, '\\\\\\\\');\r\n}\r\n\r\nconst renderContentWithLatex = (content) => {\r\n    // Regular expression to match LaTeX math mode delimiters \\( ... \\) or \\[ ... \\]\r\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\[');  // Replace \\[ with \\( and remove leading spaces\r\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]');  // Replace \\] with \\) and remove trailing spaces\r\n    \r\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[.*?\\\\\\])|(\\\\\\[\\\\\\n.*?\\\\\\]\\\\\\n)/g;\r\n    \r\n    // Split content into plain text and LaTeX parts\r\n    const parts = content.split(regex).filter(Boolean);\r\n\r\n    console.log('parts in rendercontent function', parts);\r\n    \r\n    // Process each part and return a string of HTML\r\n    const htmlContent = parts.map((part, index) => {\r\n        if (!part) return '';  // Skip undefined or empty parts\r\n\r\n\r\n        // If part starts with a LaTeX delimiter, render it with KaTeX\r\n        if (part.startsWith('\\\\(') || part.startsWith('\\\\[')) {\r\n            try {\r\n                const isDisplayMode = part.startsWith('[');  // Use display mode for \\[ \\]\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '')\r\n                return katex.renderToString(mathContent, {delimiters: [\r\n              {left: '$$', right: '$$', display: true},\r\n              {left: '$', right: '$', display: false},\r\n              {left: '\\\\(', right: '\\\\)', display: false},\r\n              {left: '\\\\[', right: '\\\\]', display: true}\r\n          ], throwOnError: false, displayMode: isDisplayMode });\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                return `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n            }\r\n        } else {\r\n            // Render plain text, replacing newlines with <br> tags for line breaks\r\n            return part.replace(/\\n/g, '<br />');\r\n        }\r\n    });\r\n\r\n    // Join all parts into a single HTML string and return it\r\n    return htmlContent.join('');\r\n};\r\n\r\nfunction Typewriter({ text, speed = 50 }) {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        let index = 0;\r\n        const timer = setInterval(() => {\r\n            if (index < text.length) {\r\n                setDisplayedText(prev => prev + text[index]);\r\n                index++;\r\n            } else {\r\n                clearInterval(timer);\r\n            }\r\n        }, speed);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [text, speed]);\r\n\r\n    return <span dangerouslySetInnerHTML={{ __html: displayedText }} />;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction TopicSelector() {\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [textbooks, setTextbooks] = useState([]);\r\n    const [chapters, setChapters] = useState([]);\r\n    const [selectedSubject, setSelectedSubject] = useState('');\r\n    const [selectedTextbook, setSelectedTextbook] = useState('');\r\n    const [selectedChapter, setSelectedChapter] = useState('');\r\n    const [latexCode, setLatexCode] = useState('');\r\n    const [userQuestion, setUserQuestion] = useState('');\r\n    const [response, setResponse] = useState('');\r\n\r\n\r\n\r\n    console.log('Fetching from URL:', '/api/subjects');\r\n    \r\n    \r\n    // Fetch subjects on component mount\r\n    useEffect(() => {\r\n        fetch('http://localhost:200/api/subjects')\r\n            .then(response => response.json())\r\n            .then(data => setSubjects(data))\r\n            .catch(error => console.error('Error fetching subjects:', error));\r\n    }, []);\r\n\r\n    // Fetch textbooks when a subject is selected\r\n    useEffect(() => {\r\n        if (selectedSubject) {\r\n            fetch(`http://localhost:200/api/textbooks?subjectId=${selectedSubject}`)\r\n                .then(response => response.json())\r\n                .then(setTextbooks)\r\n                .catch(error => console.error('Error fetching textbooks:', error));\r\n        } else {\r\n            setTextbooks([]); // Clear textbooks when no subject is selected\r\n        }\r\n    }, [selectedSubject]);\r\n\r\n    // Fetch chapters when a textbook is selected\r\n    useEffect(() => {\r\n        if (selectedTextbook) {\r\n            fetch(`http://localhost:200/api/chapters?textbookId=${selectedTextbook}`)\r\n                .then(response => response.json())\r\n                .then(setChapters)\r\n                .catch(error => console.error('Error fetching chapters:', error));\r\n        } else {\r\n            setChapters([]); // Clear chapters when no textbook is selected\r\n        }\r\n    }, [selectedTextbook]);\r\n\r\n    // Fetch LaTeX code when a chapter is selected\r\n    useEffect(() => {\r\n        if (selectedChapter) {\r\n            fetch(`http://localhost:200/api/latex-code?chapterId=${selectedChapter}`)\r\n                .then(response => response.json())\r\n                .then(data => setLatexCode(data.latexCode))\r\n                .catch(error => console.error('Error fetching LaTeX code:', error));\r\n        }\r\n    }, [selectedChapter]);\r\n    \r\n    /* const latexCodetest = `\r\n\\\\begin{equation}\r\nx + y = z\r\n\\\\end{equation}\r\n\\\\begin{equation}\r\nx + y = z\r\n\\\\end{equation}\r\n`; */\r\n    /* const escapedLatexCode = escapeBackslashes(latexCode); */\r\n\r\n    console.log('Latex Code on render:', latexCode);\r\n    console.log('html on render:', renderContentWithLatex(latexCode));\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            const res = await fetch('http://localhost:200/api/chatgpt', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    question: userQuestion,\r\n                    latexCode: latexCode\r\n                })\r\n            });\r\n            const data = await res.json();\r\n            setResponse(data.response);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const renderedresoponse = renderLatex(escapeBackslashes(response));\r\n    console.log('response from openai', response);\r\n    return (\r\n        <div>\r\n            <h1>Select a Chapter</h1>\r\n            <select value={selectedSubject} onChange={e => setSelectedSubject(e.target.value)}>\r\n                <option value=\"\">Select a subject</option>\r\n                {subjects.map(subject => (\r\n                    <option key={subject.id} value={subject.id}>{subject.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={selectedTextbook} onChange={e => setSelectedTextbook(e.target.value)} disabled={!selectedSubject}>\r\n                <option value=\"\">Select a textbook</option>\r\n                {textbooks.map(textbook => (\r\n                    <option key={textbook.id} value={textbook.id}>{textbook.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={selectedChapter} onChange={e => setSelectedChapter(e.target.value)} disabled={!selectedTextbook}>\r\n                <option value=\"\">Select a chapter</option>\r\n                {chapters.map(chapter => (\r\n                    <option key={chapter.id} value={chapter.id}>{chapter.title}</option>\r\n                ))}\r\n            </select>\r\n            <div>\r\n            <div>\r\n        <TypewriterRenderer content={latexCode} />\r\n    </div>\r\n            </div>\r\n            {/* {latexCode && <div dangerouslySetInnerHTML={{__html: renderLatex(latexCode)}} />} */}\r\n           {/*  <span dangerouslySetInnerHTML={{ __html: renderLatex(escapedLatexCode) }} />\r\n            <span dangerouslySetInnerHTML={{ __html: renderLatex('\\\\theta') }} /> */}\r\n            \r\n     \r\n        <h1>Ask a Question about the content</h1>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"question\">Your Question:</label>\r\n                <textarea\r\n                    id=\"question\"\r\n                    value={userQuestion}\r\n                    onChange={(e) => setUserQuestion(e.target.value)}\r\n                    rows=\"4\"\r\n                    cols=\"50\"\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    \r\n    \r\n        {response && (\r\n            <div>\r\n                <h2>Response from Aisolver</h2>\r\n                <div>\r\n                <TypewriterRenderer content={response} />\r\n                </div>\r\n            </div>\r\n            \r\n        )}\r\n    </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TopicSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}