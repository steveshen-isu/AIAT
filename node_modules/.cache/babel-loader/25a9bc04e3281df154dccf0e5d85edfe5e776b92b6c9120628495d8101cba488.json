{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createSubset } from '../../function/matrix/subset.js';\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix', 'zeros', 'add'];\nexport var createSubsetTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    zeros,\n    add\n  } = _ref;\n  var subset = createSubset({\n    typed,\n    matrix,\n    zeros,\n    add\n  });\n\n  /**\r\n   * Attach a transform function to math.subset\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\n  return typed('subset', {\n    '...any': function any(args) {\n      try {\n        return subset.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","errorTransform","createSubset","name","dependencies","createSubsetTransform","_ref","typed","matrix","zeros","add","subset","any","args","apply","err","isTransformFunction"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/expression/transform/subset.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { errorTransform } from './utils/errorTransform.js';\r\nimport { createSubset } from '../../function/matrix/subset.js';\r\nvar name = 'subset';\r\nvar dependencies = ['typed', 'matrix', 'zeros', 'add'];\r\nexport var createSubsetTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    matrix,\r\n    zeros,\r\n    add\r\n  } = _ref;\r\n  var subset = createSubset({\r\n    typed,\r\n    matrix,\r\n    zeros,\r\n    add\r\n  });\r\n\r\n  /**\r\n   * Attach a transform function to math.subset\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\r\n  return typed('subset', {\r\n    '...any': function any(args) {\r\n      try {\r\n        return subset.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,IAAIC,IAAI,GAAG,QAAQ;AACnB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC;AACtD,OAAO,IAAIC,qBAAqB,GAAG,eAAeL,OAAO,CAACG,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACpF,IAAI;IACFC,KAAK;IACLC,MAAM;IACNC,KAAK;IACLC;EACF,CAAC,GAAGJ,IAAI;EACR,IAAIK,MAAM,GAAGT,YAAY,CAAC;IACxBK,KAAK;IACLC,MAAM;IACNC,KAAK;IACLC;EACF,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;EACE,OAAOH,KAAK,CAAC,QAAQ,EAAE;IACrB,QAAQ,EAAE,SAASK,GAAGA,CAACC,IAAI,EAAE;MAC3B,IAAI;QACF,OAAOF,MAAM,CAACG,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZ,MAAMd,cAAc,CAACc,GAAG,CAAC;MAC3B;IACF;EACF,CAAC,CAAC;AACJ,CAAC,EAAE;EACDC,mBAAmB,EAAE;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}