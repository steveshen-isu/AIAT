{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createMax } from '../../function/statistics/max.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'max';\nvar dependencies = ['typed', 'config', 'numeric', 'larger'];\nexport var createMaxTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    numeric,\n    larger\n  } = _ref;\n  var max = createMax({\n    typed,\n    config,\n    numeric,\n    larger\n  });\n\n  /**\r\n   * Attach a transform function to math.max\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform changed the last `dim` parameter of function max\r\n   * from one-based to zero based\r\n   */\n  return typed('max', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n      try {\n        return max.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","errorTransform","createMax","lastDimToZeroBase","name","dependencies","createMaxTransform","_ref","typed","config","numeric","larger","max","any","args","apply","err","isTransformFunction"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/expression/transform/max.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { errorTransform } from './utils/errorTransform.js';\r\nimport { createMax } from '../../function/statistics/max.js';\r\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\r\nvar name = 'max';\r\nvar dependencies = ['typed', 'config', 'numeric', 'larger'];\r\nexport var createMaxTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    config,\r\n    numeric,\r\n    larger\r\n  } = _ref;\r\n  var max = createMax({\r\n    typed,\r\n    config,\r\n    numeric,\r\n    larger\r\n  });\r\n\r\n  /**\r\n   * Attach a transform function to math.max\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform changed the last `dim` parameter of function max\r\n   * from one-based to zero based\r\n   */\r\n  return typed('max', {\r\n    '...any': function any(args) {\r\n      args = lastDimToZeroBase(args);\r\n      try {\r\n        return max.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,SAAS,QAAQ,kCAAkC;AAC5D,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,IAAIC,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;AAC3D,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACjF,IAAI;IACFC,KAAK;IACLC,MAAM;IACNC,OAAO;IACPC;EACF,CAAC,GAAGJ,IAAI;EACR,IAAIK,GAAG,GAAGV,SAAS,CAAC;IAClBM,KAAK;IACLC,MAAM;IACNC,OAAO;IACPC;EACF,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;EACE,OAAOH,KAAK,CAAC,KAAK,EAAE;IAClB,QAAQ,EAAE,SAASK,GAAGA,CAACC,IAAI,EAAE;MAC3BA,IAAI,GAAGX,iBAAiB,CAACW,IAAI,CAAC;MAC9B,IAAI;QACF,OAAOF,GAAG,CAACG,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZ,MAAMf,cAAc,CAACe,GAAG,CAAC;MAC3B;IACF;EACF,CAAC,CAAC;AACJ,CAAC,EAAE;EACDC,mBAAmB,EAAE;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}