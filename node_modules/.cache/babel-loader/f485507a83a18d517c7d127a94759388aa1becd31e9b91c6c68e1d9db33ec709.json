{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZHEREN\\\\ai-solver\\\\src\\\\components\\\\TopicSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopicSelector() {\n  _s();\n  const [subjects, setSubjects] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [chapters, setChapters] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTextbook, setSelectedTextbook] = useState('');\n  const [selectedChapter, setSelectedChapter] = useState('');\n  const [latexCode, setLatexCode] = useState('');\n  console.log('Fetching from URL:', '/api/subjects');\n\n  // Fetch subjects on component mount\n  useEffect(() => {\n    fetch('api/subjects').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Subjects:', data);\n    }).catch(error => {\n      console.error('Error fetching subjects:', error);\n    });\n  }, []);\n\n  // Fetch textbooks when a subject is selected\n  useEffect(() => {\n    if (selectedSubject) {\n      fetch(`/api/textbooks?subjectId=${selectedSubject}`).then(response => response.json()).then(setTextbooks).catch(error => console.error('Error fetching textbooks:', error));\n    } else {\n      setTextbooks([]); // Clear textbooks when no subject is selected\n    }\n  }, [selectedSubject]);\n\n  // Fetch chapters when a textbook is selected\n  useEffect(() => {\n    if (selectedTextbook) {\n      fetch(`/api/chapters?textbookId=${selectedTextbook}`).then(response => response.json()).then(setChapters).catch(error => console.error('Error fetching chapters:', error));\n    } else {\n      setChapters([]); // Clear chapters when no textbook is selected\n    }\n  }, [selectedTextbook]);\n\n  // Fetch LaTeX code when a chapter is selected\n  useEffect(() => {\n    if (selectedChapter) {\n      fetch(`/api/latex-code?chapterId=${selectedChapter}`).then(response => response.json()).then(data => setLatexCode(data.latexCode)).catch(error => console.error('Error fetching LaTeX code:', error));\n    }\n  }, [selectedChapter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select a Chapter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSubject,\n      onChange: e => setSelectedSubject(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: subject.id,\n        children: subject.name\n      }, subject.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTextbook,\n      onChange: e => setSelectedTextbook(e.target.value),\n      disabled: !selectedSubject,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a textbook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), textbooks.map(textbook => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: textbook.id,\n        children: textbook.name\n      }, textbook.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedChapter,\n      onChange: e => setSelectedChapter(e.target.value),\n      disabled: !selectedTextbook,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: chapter.id,\n        children: chapter.title\n      }, chapter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), latexCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: latexCode\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(TopicSelector, \"LoGSRGfq2f4V+ibRAXHfYYOc0BY=\");\n_c = TopicSelector;\nexport default TopicSelector;\nvar _c;\n$RefreshReg$(_c, \"TopicSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TopicSelector","_s","subjects","setSubjects","textbooks","setTextbooks","chapters","setChapters","selectedSubject","setSelectedSubject","selectedTextbook","setSelectedTextbook","selectedChapter","setSelectedChapter","latexCode","setLatexCode","console","log","fetch","then","response","ok","Error","json","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","subject","id","name","disabled","textbook","chapter","title","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/ZHEREN/ai-solver/src/components/TopicSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TopicSelector() {\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [textbooks, setTextbooks] = useState([]);\r\n    const [chapters, setChapters] = useState([]);\r\n    const [selectedSubject, setSelectedSubject] = useState('');\r\n    const [selectedTextbook, setSelectedTextbook] = useState('');\r\n    const [selectedChapter, setSelectedChapter] = useState('');\r\n    const [latexCode, setLatexCode] = useState('');\r\n    console.log('Fetching from URL:', '/api/subjects');\r\n    \r\n    \r\n    // Fetch subjects on component mount\r\n    useEffect(() => {\r\n        fetch('api/subjects')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log('Subjects:', data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching subjects:', error);\r\n            });\r\n    }, []);\r\n    \r\n\r\n    // Fetch textbooks when a subject is selected\r\n    useEffect(() => {\r\n        if (selectedSubject) {\r\n            fetch(`/api/textbooks?subjectId=${selectedSubject}`)\r\n                .then(response => response.json())\r\n                .then(setTextbooks)\r\n                .catch(error => console.error('Error fetching textbooks:', error));\r\n        } else {\r\n            setTextbooks([]); // Clear textbooks when no subject is selected\r\n        }\r\n    }, [selectedSubject]);\r\n\r\n    // Fetch chapters when a textbook is selected\r\n    useEffect(() => {\r\n        if (selectedTextbook) {\r\n            fetch(`/api/chapters?textbookId=${selectedTextbook}`)\r\n                .then(response => response.json())\r\n                .then(setChapters)\r\n                .catch(error => console.error('Error fetching chapters:', error));\r\n        } else {\r\n            setChapters([]); // Clear chapters when no textbook is selected\r\n        }\r\n    }, [selectedTextbook]);\r\n\r\n    // Fetch LaTeX code when a chapter is selected\r\n    useEffect(() => {\r\n        if (selectedChapter) {\r\n            fetch(`/api/latex-code?chapterId=${selectedChapter}`)\r\n                .then(response => response.json())\r\n                .then(data => setLatexCode(data.latexCode))\r\n                .catch(error => console.error('Error fetching LaTeX code:', error));\r\n        }\r\n    }, [selectedChapter]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Select a Chapter</h1>\r\n            <select value={selectedSubject} onChange={e => setSelectedSubject(e.target.value)}>\r\n                <option value=\"\">Select a subject</option>\r\n                {subjects.map(subject => (\r\n                    <option key={subject.id} value={subject.id}>{subject.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={selectedTextbook} onChange={e => setSelectedTextbook(e.target.value)} disabled={!selectedSubject}>\r\n                <option value=\"\">Select a textbook</option>\r\n                {textbooks.map(textbook => (\r\n                    <option key={textbook.id} value={textbook.id}>{textbook.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={selectedChapter} onChange={e => setSelectedChapter(e.target.value)} disabled={!selectedTextbook}>\r\n                <option value=\"\">Select a chapter</option>\r\n                {chapters.map(chapter => (\r\n                    <option key={chapter.id} value={chapter.id}>{chapter.title}</option>\r\n                ))}\r\n            </select>\r\n            {latexCode && <div dangerouslySetInnerHTML={{__html: latexCode}} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopicSelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9CoB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,eAAe,CAAC;;EAGlD;EACApB,SAAS,CAAC,MAAM;IACZqB,KAAK,CAAC,cAAc,CAAC,CAChBC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVR,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEO,IAAI,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZV,OAAO,CAACU,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA7B,SAAS,CAAC,MAAM;IACZ,IAAIW,eAAe,EAAE;MACjBU,KAAK,CAAE,4BAA2BV,eAAgB,EAAC,CAAC,CAC/CW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCJ,IAAI,CAACd,YAAY,CAAC,CAClBoB,KAAK,CAACC,KAAK,IAAIV,OAAO,CAACU,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;IAC1E,CAAC,MAAM;MACHrB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB;EACJ,CAAC,EAAE,CAACG,eAAe,CAAC,CAAC;;EAErB;EACAX,SAAS,CAAC,MAAM;IACZ,IAAIa,gBAAgB,EAAE;MAClBQ,KAAK,CAAE,4BAA2BR,gBAAiB,EAAC,CAAC,CAChDS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCJ,IAAI,CAACZ,WAAW,CAAC,CACjBkB,KAAK,CAACC,KAAK,IAAIV,OAAO,CAACU,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;IACzE,CAAC,MAAM;MACHnB,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB;EACJ,CAAC,EAAE,CAACG,gBAAgB,CAAC,CAAC;;EAEtB;EACAb,SAAS,CAAC,MAAM;IACZ,IAAIe,eAAe,EAAE;MACjBM,KAAK,CAAE,6BAA4BN,eAAgB,EAAC,CAAC,CAChDO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCJ,IAAI,CAACK,IAAI,IAAIT,YAAY,CAACS,IAAI,CAACV,SAAS,CAAC,CAAC,CAC1CW,KAAK,CAACC,KAAK,IAAIV,OAAO,CAACU,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;IAC3E;EACJ,CAAC,EAAE,CAACd,eAAe,CAAC,CAAC;EAErB,oBACIb,OAAA;IAAA4B,QAAA,gBACI5B,OAAA;MAAA4B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhC,OAAA;MAAQiC,KAAK,EAAExB,eAAgB;MAACyB,QAAQ,EAAEC,CAAC,IAAIzB,kBAAkB,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBAC9E5B,OAAA;QAAQiC,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzC7B,QAAQ,CAACkC,GAAG,CAACC,OAAO,iBACjBtC,OAAA;QAAyBiC,KAAK,EAAEK,OAAO,CAACC,EAAG;QAAAX,QAAA,EAAEU,OAAO,CAACE;MAAI,GAA5CF,OAAO,CAACC,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACThC,OAAA;MAAQiC,KAAK,EAAEtB,gBAAiB;MAACuB,QAAQ,EAAEC,CAAC,IAAIvB,mBAAmB,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACQ,QAAQ,EAAE,CAAChC,eAAgB;MAAAmB,QAAA,gBAC5G5B,OAAA;QAAQiC,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC1C3B,SAAS,CAACgC,GAAG,CAACK,QAAQ,iBACnB1C,OAAA;QAA0BiC,KAAK,EAAES,QAAQ,CAACH,EAAG;QAAAX,QAAA,EAAEc,QAAQ,CAACF;MAAI,GAA/CE,QAAQ,CAACH,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CACxE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACThC,OAAA;MAAQiC,KAAK,EAAEpB,eAAgB;MAACqB,QAAQ,EAAEC,CAAC,IAAIrB,kBAAkB,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACQ,QAAQ,EAAE,CAAC9B,gBAAiB;MAAAiB,QAAA,gBAC3G5B,OAAA;QAAQiC,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzCzB,QAAQ,CAAC8B,GAAG,CAACM,OAAO,iBACjB3C,OAAA;QAAyBiC,KAAK,EAAEU,OAAO,CAACJ,EAAG;QAAAX,QAAA,EAAEe,OAAO,CAACC;MAAK,GAA7CD,OAAO,CAACJ,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CACtE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACRjB,SAAS,iBAAIf,OAAA;MAAK6C,uBAAuB,EAAE;QAACC,MAAM,EAAE/B;MAAS;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEd;AAAC9B,EAAA,CAvFQD,aAAa;AAAA8C,EAAA,GAAb9C,aAAa;AAyFtB,eAAeA,aAAa;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}