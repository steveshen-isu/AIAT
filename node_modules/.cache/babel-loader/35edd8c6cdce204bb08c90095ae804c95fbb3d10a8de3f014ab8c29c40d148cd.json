{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\TopicSelector.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\nimport katex from 'katex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentUrl = window.location.href;\nconsole.log(currentUrl); // Example: \"https://example.com/page\"\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\nconsole.log(ipAddress);\nfunction renderLatex(latex) {\n  try {\n    const sanitizedLatex = latex.replace(/\\\\\\(|\\\\\\)|\\\\\\[|\\\\\\]/g, '');\n    const lines = sanitizedLatex.split('\\n');\n    return katex.renderToString(latex, {\n      throwOnError: false,\n      displayMode: true\n    });\n  } catch (e) {\n    return `<span class=\"error\">Error rendering LaTeX: ${e.message}</span>`;\n  }\n}\nconst typewriterEffect = async (content, setDisplayContent) => {\n  content = content.replace(/\\\\\\[\\s*/g, '\\\\['); // Replace \\[ with \\( and remove leading spaces\n  content = content.replace(/\\s*\\\\\\]/g, '\\\\]'); // Replace \\] with \\) and remove trailing spaces\n  console.log(content);\n  const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[[\\s\\S]*?\\\\\\])|(\\\\begin\\{array\\}[\\s\\S]*?\\\\end\\{array\\})|(\\\\textit\\{.*?\\})|(\\\\textbf\\{.*?\\})/g;\n  const parts = content.split(regex).filter(part => part !== null && part !== undefined && part !== '');\n  let displayContent = '';\n  console.log(parts);\n  for (const part of parts) {\n    if (part.startsWith('\\\\(') || part.startsWith('\\\\begin') || part.startsWith('\\\\textit') || part.startsWith('\\\\textbf')) {\n      // Process LaTeX content\n\n      try {\n        const isDisplayMode = part.startsWith('\\\\[');\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, ''); // Strip the delimiters\n        const renderedMath = katex.renderToString(mathContent, {\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n\n        // Simulate typing the LaTeX\n        for (let i = 0; i < renderedMath.length; i++) {\n          displayContent += renderedMath[i];\n          setDisplayContent(displayContent);\n          /*                     await delayRandomTime(); \r\n           */\n        }\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n        setDisplayContent(displayContent);\n      }\n    } else if (part.startsWith('\\\\[')) {\n      // Process LaTeX content\n\n      try {\n        const isDisplayMode = part.startsWith('\\\\[');\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, ''); // Strip the delimiters\n        const renderedMath = katex.renderToString(mathContent, {\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n\n        // Simulate typing the LaTeX\n        for (let i = 0; i < renderedMath.length; i++) {\n          displayContent += renderedMath[i];\n          setDisplayContent(displayContent);\n          /*                     await delayRandomTime(); \r\n           */\n        }\n        const buttonsHTML = `\n <button onclick=\"handleEquationQuestion('${mathContent}', 'what')\">What is the equation?</button>\n <button onclick=\"handleEquationQuestion('${mathContent}', 'how')\">How to use the equation?</button>\n`;\n        displayContent += buttonsHTML;\n        /* console.log(displayContent); */\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n        setDisplayContent(displayContent);\n      }\n    } else {\n      // Process plain text content\n      for (let i = 0; i < part.length; i++) {\n        displayContent += part[i] === '\\n' ? '<br />' : part[i];\n        setDisplayContent(displayContent);\n        await textdelayRandomTime();\n      }\n    }\n  }\n};\nconst typewriterEffectExample = async (content, setDisplayContent) => {\n  content = content.replace(/\\\\\\[\\s*/g, '\\\\['); // Replace \\[ with \\( and remove leading spaces\n  content = content.replace(/\\s*\\\\\\]/g, '\\\\]'); // Replace \\] with \\) and remove trailing spaces\n  console.log(content);\n  const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[[\\s\\S]*?\\\\\\])|(\\\\begin\\{array\\}[\\s\\S]*?\\\\end\\{array\\})|(\\\\textit\\{.*?\\})|(\\\\textbf\\{.*?\\})/g;\n  const parts = content.split(regex).filter(part => part !== null && part !== undefined && part !== '');\n  let displayContent = '';\n  console.log(parts);\n  for (const part of parts) {\n    if (part.startsWith('\\\\(') || part.startsWith('\\\\begin') || part.startsWith('\\\\textit') || part.startsWith('\\\\textbf')) {\n      // Process LaTeX content\n\n      try {\n        const isDisplayMode = part.startsWith('\\\\[');\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, ''); // Strip the delimiters\n        const renderedMath = katex.renderToString(mathContent, {\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n\n        // Simulate typing the LaTeX\n        for (let i = 0; i < renderedMath.length; i++) {\n          displayContent += renderedMath[i];\n          setDisplayContent(displayContent);\n          /*                     await delayRandomTime(); \r\n           */\n        }\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n        setDisplayContent(displayContent);\n      }\n    } else if (part.startsWith('\\\\[')) {\n      // Process LaTeX content\n\n      try {\n        const isDisplayMode = part.startsWith('\\\\[');\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, ''); // Strip the delimiters\n        const renderedMath = katex.renderToString(mathContent, {\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n\n        // Simulate typing the LaTeX\n        for (let i = 0; i < renderedMath.length; i++) {\n          displayContent += renderedMath[i];\n          setDisplayContent(displayContent);\n          /*                     await delayRandomTime(); \r\n           */\n        }\n        const buttonsHTML = `\n <button onclick=\"handleExampleQuestion('${mathContent}')\">I don't understand this step</button>\n`;\n        displayContent += buttonsHTML;\n        /* console.log(displayContent); */\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n        setDisplayContent(displayContent);\n      }\n    } else {\n      // Process plain text content\n      for (let i = 0; i < part.length; i++) {\n        displayContent += part[i] === '\\n' ? '<br />' : part[i];\n        setDisplayContent(displayContent);\n        await textdelayRandomTime();\n      }\n    }\n  }\n};\nconst typewriterEffectResponse = async (content, setDisplayContent) => {\n  content = content.replace(/\\\\\\[\\s*/g, '\\\\['); // Replace \\[ with \\( and remove leading spaces\n  content = content.replace(/\\s*\\\\\\]/g, '\\\\]'); // Replace \\] with \\) and remove trailing spaces\n  console.log(content);\n  const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[[\\s\\S]*?\\\\\\])|(\\\\begin\\{array\\}[\\s\\S]*?\\\\end\\{array\\})|(\\\\textit\\{.*?\\})|(\\\\textbf\\{.*?\\})/g;\n  const parts = content.split(regex).filter(part => part !== null && part !== undefined && part !== '');\n  let displayContent = '';\n  console.log(parts);\n  for (const part of parts) {\n    if (part.startsWith('\\\\(') || part.startsWith('\\\\[') || part.startsWith('\\\\begin') || part.startsWith('\\\\textit') || part.startsWith('\\\\textbf')) {\n      // Process LaTeX content\n\n      try {\n        const isDisplayMode = part.startsWith('\\\\[');\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, ''); // Strip the delimiters\n        const renderedMath = katex.renderToString(mathContent, {\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n\n        // Simulate typing the LaTeX\n        for (let i = 0; i < renderedMath.length; i++) {\n          displayContent += renderedMath[i];\n          setDisplayContent(displayContent);\n          /*                     await delayRandomTime(); \r\n           */\n        }\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n        setDisplayContent(displayContent);\n      }\n    } else {\n      // Process plain text content\n      for (let i = 0; i < part.length; i++) {\n        displayContent += part[i] === '\\n' ? '<br />' : part[i];\n        setDisplayContent(displayContent);\n        await textdelayRandomTime();\n      }\n    }\n  }\n};\n// Function to create random delay\n/* const delayRandomTime = () => {\r\n    return new Promise(resolve => {\r\n        const randomDelay = Math.floor(Math.random() * 1) + 0; // Delay between 50ms to 250ms\r\n        setTimeout(resolve, randomDelay);\r\n    });\r\n};  */\n\nconst textdelayRandomTime = () => {\n  return new Promise(resolve => {\n    const randomDelay = Math.floor(Math.random() * 20) + 5; // Delay between 50ms to 250ms\n    setTimeout(resolve, randomDelay);\n  });\n};\n\n// Main component to handle the content rendering\nconst TypewriterRenderer = ({\n  content\n}) => {\n  _s();\n  const [displayContent, setDisplayContent] = useState('');\n  useEffect(() => {\n    // Start the typewriter effect when the component loads\n    typewriterEffect(content, setDisplayContent);\n  }, [content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left',\n        // Align text to the left\n        width: '42vw',\n        margin: '0 auto',\n        // Center the div horizontally\n        padding: '10px',\n        // Add padding\n        maxWidth: '900px',\n        // Set a max width for the container\n        marginLeft: '1vw',\n        // Add some space from the left\n        border: '0px solid gray',\n        // Gray border\n        backgroundColor: 'black',\n        // Black background\n        color: 'white',\n        // White text color for contrast\n        fontFamily: 'Segoe UI, sans-serif',\n        // Font family\n        fontSize: '18px',\n        // Font size\n        fontWeight: 'lighter',\n        // Bold text\n        fontStyle: 'normal',\n        // Italic text\n        lineHeight: '1.6',\n        // Line height for readability\n        letterSpacing: '1px' // Space between letters\n      },\n      dangerouslySetInnerHTML: {\n        __html: displayContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n};\n_s(TypewriterRenderer, \"CWF/jOCr/6dzKRDifOVVHM2M7Es=\");\n_c = TypewriterRenderer;\nconst TypewriterRendererResponse = ({\n  content\n}) => {\n  _s2();\n  const [displayContent, setDisplayContent] = useState('');\n  useEffect(() => {\n    // Start the typewriter effect when the component loads\n    typewriterEffectResponse(content, setDisplayContent);\n  }, [content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left',\n        // Align text to the left\n        width: '42vw',\n        margin: '0 auto',\n        // Center the div horizontally\n        padding: '10px',\n        // Add padding\n        maxWidth: '900px',\n        // Set a max width for the container\n        marginLeft: '1vw',\n        // Add some space from the left\n        border: '0px solid gray',\n        // Gray border\n        backgroundColor: 'black',\n        // Black background\n        color: 'white',\n        // White text color for contrast\n        fontFamily: 'Segoe UI, sans-serif',\n        // Font family\n        fontSize: '18px',\n        // Font size\n        fontWeight: 'lighter',\n        // Bold text\n        fontStyle: 'normal',\n        // Italic text\n        lineHeight: '1.6',\n        // Line height for readability\n        letterSpacing: '1px' // Space between letters\n      },\n      dangerouslySetInnerHTML: {\n        __html: displayContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n};\n_s2(TypewriterRendererResponse, \"CWF/jOCr/6dzKRDifOVVHM2M7Es=\");\n_c2 = TypewriterRendererResponse;\nconst TypewriterRendererExample = ({\n  content\n}) => {\n  _s3();\n  const [displayContent, setDisplayContent] = useState('');\n  useEffect(() => {\n    // Start the typewriter effect when the component loads\n    typewriterEffectExample(content, setDisplayContent);\n  }, [content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left',\n        // Align text to the left\n        width: '42vw',\n        margin: '0 auto',\n        // Center the div horizontally\n        padding: '10px',\n        // Add padding\n        maxWidth: '900px',\n        // Set a max width for the container\n        marginLeft: '1vw',\n        // Add some space from the left\n        border: '0px solid gray',\n        // Gray border\n        backgroundColor: 'black',\n        // Black background\n        color: 'white',\n        // White text color for contrast\n        fontFamily: 'Segoe UI, sans-serif',\n        // Font family\n        fontSize: '18px',\n        // Font size\n        fontWeight: 'lighter',\n        // Bold text\n        fontStyle: 'normal',\n        // Italic text\n        lineHeight: '1.6',\n        // Line height for readability\n        letterSpacing: '1px' // Space between letters\n      },\n      dangerouslySetInnerHTML: {\n        __html: displayContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 9\n  }, this);\n};\n_s3(TypewriterRendererExample, \"CWF/jOCr/6dzKRDifOVVHM2M7Es=\");\n_c3 = TypewriterRendererExample;\nfunction escapeBackslashes(str) {\n  return str.replace(/\\\\/g, '\\\\\\\\');\n}\nconst renderContentWithLatex = content => {\n  // Regular expression to match LaTeX math mode delimiters \\( ... \\) or \\[ ... \\]\n  content = content.replace(/\\\\\\[\\s*/g, '\\\\['); // Replace \\[ with \\( and remove leading spaces\n  content = content.replace(/\\s*\\\\\\]/g, '\\\\]'); // Replace \\] with \\) and remove trailing spaces\n\n  const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[.*?\\\\\\])|(\\\\\\[\\\\\\n.*?\\\\\\]\\\\\\n)/g;\n\n  // Split content into plain text and LaTeX parts\n  const parts = content.split(regex).filter(Boolean);\n  console.log('parts in rendercontent function', parts);\n\n  // Process each part and return a string of HTML\n  const htmlContent = parts.map((part, index) => {\n    if (!part) return ''; // Skip undefined or empty parts\n\n    // If part starts with a LaTeX delimiter, render it with KaTeX\n    if (part.startsWith('\\\\(') || part.startsWith('\\\\[') || part.include('\\\\')) {\n      try {\n        const isDisplayMode = part.startsWith('['); // Use display mode for \\[ \\]\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');\n        return katex.renderToString(mathContent, {\n          delimiters: [{\n            left: '$$',\n            right: '$$',\n            display: true\n          }, {\n            left: '$',\n            right: '$',\n            display: false\n          }, {\n            left: '\\\\(',\n            right: '\\\\)',\n            display: false\n          }, {\n            left: '\\\\[',\n            right: '\\\\]',\n            display: true\n          }],\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        return `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n      }\n    } else {\n      // Render plain text, replacing newlines with <br> tags for line breaks\n      return part.replace(/\\n/g, '<br />');\n    }\n  });\n\n  // Join all parts into a single HTML string and return it\n  return htmlContent.join('');\n};\nfunction Typewriter({\n  text,\n  speed = 50\n}) {\n  _s4();\n  const [displayedText, setDisplayedText] = useState('');\n  useEffect(() => {\n    let index = 0;\n    const timer = setInterval(() => {\n      if (index < text.length) {\n        setDisplayedText(prev => prev + text[index]);\n        index++;\n      } else {\n        clearInterval(timer);\n      }\n    }, speed);\n    return () => clearInterval(timer);\n  }, [text, speed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: displayedText\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 12\n  }, this);\n}\n_s4(Typewriter, \"PLbRMeWiJa2NBtcoy3qeXvmWyJg=\");\n_c4 = Typewriter;\nfunction TopicSelector() {\n  _s5();\n  const [subjects, setSubjects] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [chapters, setChapters] = useState([]);\n  const [topics, setTopics] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTextbook, setSelectedTextbook] = useState('');\n  const [selectedChapter, setSelectedChapter] = useState('');\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [chapterSummary, setChapterSummary] = useState('');\n  const [topicSummary, setTopicSummary] = useState('');\n  const [questionSolution, setQuestionSolution] = useState('');\n  const [userQuestion, setUserQuestion] = useState('');\n  const [response, setResponse] = useState('Hello! How may I help you today?');\n  const [responseEquations, setResponseEquations] = useState('');\n  const [responseExample, setResponseExample] = useState('');\n  const [showChapterSummary, setShowChapterSummary] = useState(false);\n  const [showTopicSummary, setShowTopicSummary] = useState(false);\n  const [showQuestionSolution, setShowQuestionSolution] = useState(false);\n  console.log('Fetching from URL:', '/api/subjects');\n  window.handleEquationQuestion = async (equation, action) => {\n    try {\n      setResponse('');\n      setResponseEquations('');\n      setResponseExample('');\n      const res = await fetch('http://localhost:200/api/query-equation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          equation,\n          action // \"what\" or \"how\"\n        })\n      });\n      const data = await res.json();\n      setResponseEquations(data.responseEquations);\n      /*             console.log(data.responseEquations);  // Do something with the response\r\n       */\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  console.log(responseEquations);\n  window.handleExampleQuestion = async questionpart => {\n    try {\n      setResponse('');\n      setResponseEquations('');\n      setResponseExample('');\n      const res = await fetch('http://localhost:200/api/query-example', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          example: questionpart,\n          questionSolution: questionSolution\n        })\n      });\n      const data = await res.json();\n      setResponseExample(data.responseExample);\n      /*             console.log(data.responseEquations);  // Do something with the response\r\n       */\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  // Fetch subjects on component mount\n  /* useEffect(() => {\r\n      fetch('http://localhost:200/api/subjects')\r\n          .then(response => response.json())\r\n          .then(data => setSubjects(data))\r\n          .catch(error => console.error('Error fetching subjects:', error));\r\n  }, []);\r\n    // Fetch textbooks when a subject is selected\r\n  useEffect(() => {\r\n      if (selectedSubject) {\r\n          fetch(`http://localhost:200/api/textbooks?subjectId=${selectedSubject}`)\r\n              .then(response => response.json())\r\n              .then(setTextbooks)\r\n              .catch(error => console.error('Error fetching textbooks:', error));\r\n      } else {\r\n          setTextbooks([]); // Clear textbooks when no subject is selected\r\n      }\r\n  }, [selectedSubject]);\r\n    // Fetch chapters when a textbook is selected\r\n  useEffect(() => {\r\n      if (selectedTextbook) {\r\n          fetch(`http://localhost:200/api/chapters?textbookId=${selectedTextbook}`)\r\n              .then(response => response.json())\r\n              .then(setChapters)\r\n              .catch(error => console.error('Error fetching chapters:', error));\r\n      } else {\r\n          setChapters([]); // Clear chapters when no textbook is selected\r\n      }\r\n  }, [selectedTextbook]);\r\n    // Fetch LaTeX code when a chapter is selected\r\n  useEffect(() => {\r\n      if (selectedChapter) {\r\n          fetch(`http://localhost:200/api/latex-code?chapterId=${selectedChapter}`)\r\n              .then(response => response.json())\r\n              .then(data => setLatexCode(data.latexCode))\r\n              .catch(error => console.error('Error fetching LaTeX code:', error));\r\n      }\r\n  }, [selectedChapter]); */\n\n  useEffect(() => {\n    // Fetch subjects using the fetch API\n    fetch('http://' + ipAddress + ':200/api/subjects').then(response => response.json()).then(data => setSubjects(data)).catch(error => console.error('Error fetching subjects:', error));\n  }, []);\n  const handleSubjectChange = subjectId => {\n    setSelectedSubject(subjectId);\n    setTextbooks([]);\n    setChapters([]);\n    setTopics([]);\n    setQuestions([]);\n    // Fetch textbooks based on subjectId\n    fetch('http://' + ipAddress + `:200/api/textbooks/${subjectId}`).then(response => response.json()).then(data => setTextbooks(data)).catch(error => console.error('Error fetching textbooks:', error));\n  };\n  const handleTextbookChange = textbookId => {\n    setSelectedTextbook(textbookId);\n    setChapters([]);\n    setTopics([]);\n    setQuestions([]);\n    // Fetch chapters based on textbookId\n    fetch('http://' + ipAddress + `:200/api/chapters/${textbookId}`).then(response => response.json()).then(data => setChapters(data)).catch(error => console.error('Error fetching chapters:', error));\n  };\n  const handleChapterChange = chapterId => {\n    setSelectedChapter(chapterId);\n    // Fetch chapter summary\n    fetch('http://' + ipAddress + `:200/api/chapter-summary/${chapterId}`).then(response => response.json()).then(data => setChapterSummary(data.summary)).catch(error => console.error('Error fetching chapter summary:', error));\n\n    // Fetch topics based on chapterId\n    fetch('http://' + ipAddress + `:200/api/topics/${chapterId}`).then(response => response.json()).then(data => setTopics(data)).catch(error => console.error('Error fetching topics:', error));\n  };\n  const handleTopicChange = topicId => {\n    setSelectedTopic(topicId);\n    // Fetch topic summary\n    fetch('http://' + ipAddress + `:200/api/topic-summary/${topicId}`).then(response => response.json()).then(data => setTopicSummary(data.summary)).catch(error => console.error('Error fetching topic summary:', error));\n\n    // Fetch questions based on topicId\n    fetch('http://' + ipAddress + `:200/api/questions/${topicId}`).then(response => response.json()).then(data => setQuestions(data)).catch(error => console.error('Error fetching questions:', error));\n  };\n  const handleQuestionChange = questionId => {\n    setSelectedQuestion(questionId);\n    // Fetch question and solution\n    fetch('http://' + ipAddress + `:200/api/question/${questionId}`).then(response => response.json()).then(data => setQuestionSolution(data.solution)).catch(error => console.error('Error fetching question solution:', error));\n  };\n\n  /* const latexCodetest = `\r\n  \\\\begin{equation}\r\n  x + y = z\r\n  \\\\end{equation}\r\n  \\\\begin{equation}\r\n  x + y = z\r\n  \\\\end{equation}\r\n  `; */\n  /* const escapedLatexCode = escapeBackslashes(latexCode); */\n\n  console.log('Latex Code on render:', questionSolution);\n  /*     console.log('html on render:', renderContentWithLatex(latexCode)); */\n\n  let latexCodeSent = ''; // Declare latexCodeSent outside the conditions\n\n  if (showChapterSummary) {\n    latexCodeSent = chapterSummary;\n  } else if (showTopicSummary) {\n    latexCodeSent = topicSummary;\n  } else if (showQuestionSolution) {\n    latexCodeSent = questionSolution;\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResponse('');\n    setResponseEquations('');\n    try {\n      const res = await fetch('http://' + ipAddress + ':200/api/chatgpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: userQuestion,\n          latexCode: latexCodeSent\n        })\n      });\n      const data = await res.json();\n      setResponse(data.response);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const renderedresoponse = renderLatex(escapeBackslashes(response));\n  console.log('response from openai', response);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.left,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'white',\n            // Use camelCase for CSS properties\n            fontSize: '32px',\n            // font-size becomes fontSize\n            textAlign: 'center',\n            // text-align becomes textAlign\n            fontFamily: 'Segoe UI, sans-serif',\n            // font-family becomes fontFamily\n            fontWeight: 'lighter',\n            // Bold text\n            fontStyle: 'normal' // Italic text\n          },\n          children: \"Select a Chapter you are interested in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select-modern\",\n          value: selectedSubject,\n          onChange: e => handleSubjectChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 25\n          }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subject.id,\n            children: subject.name\n          }, subject.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select-modern\",\n          value: selectedTextbook,\n          onChange: e => handleTextbookChange(e.target.value),\n          disabled: !selectedSubject,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Textbook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 25\n          }, this), textbooks.map(textbook => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: textbook.id,\n            children: textbook.name\n          }, textbook.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"custom-select-modern\",\n            value: selectedChapter,\n            onChange: e => handleChapterChange(e.target.value),\n            disabled: !selectedTextbook,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Chapter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 29\n            }, this), chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: chapter.id,\n              children: chapter.name\n            }, chapter.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"custom-button-modern\",\n            onClick: () => {\n              setShowChapterSummary(true);\n              setShowTopicSummary(false);\n              setShowQuestionSolution(false);\n            },\n            disabled: !selectedChapter,\n            children: \"Show Chapter Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"custom-select-modern\",\n            value: selectedTopic,\n            onChange: e => handleTopicChange(e.target.value),\n            disabled: !selectedChapter,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 29\n            }, this), topics.map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: topic.id,\n              children: topic.name\n            }, topic.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"custom-button-modern\",\n            onClick: () => {\n              setShowChapterSummary(false);\n              setShowTopicSummary(true);\n              setShowQuestionSolution(false);\n            },\n            disabled: !selectedTopic,\n            children: \"Show Topic Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select-modern\",\n          value: selectedQuestion,\n          onChange: e => handleQuestionChange(e.target.value),\n          disabled: !selectedTopic,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 25\n          }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: question.id,\n            children: question.question\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-button-modern\",\n          onClick: () => {\n            setShowChapterSummary(false);\n            setShowTopicSummary(false);\n            setShowQuestionSolution(true);\n          },\n          disabled: !selectedQuestion,\n          children: \"Show Question and Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 21\n        }, this), showChapterSummary && chapterSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'white',\n              // Use camelCase for CSS properties\n              fontSize: '32px',\n              // font-size becomes fontSize\n              textAlign: 'center',\n              // text-align becomes textAlign\n              fontFamily: 'Segoe UI, sans-serif',\n              // font-family becomes fontFamily\n              fontWeight: 'lighter',\n              // Bold text\n              fontStyle: 'normal' // Italic text\n            },\n            children: \"Chapter Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(TypewriterRenderer, {\n            content: chapterSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 25\n        }, this), showTopicSummary && topicSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'white',\n              // Use camelCase for CSS properties\n              fontSize: '32px',\n              // font-size becomes fontSize\n              textAlign: 'center',\n              // text-align becomes textAlign\n              fontFamily: 'Segoe UI, sans-serif',\n              // font-family becomes fontFamily\n              fontWeight: 'lighter',\n              // Bold text\n              fontStyle: 'normal' // Italic text\n            },\n            children: \"Topic Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(TypewriterRendererResponse, {\n            content: topicSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 25\n        }, this), showQuestionSolution && questionSolution && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'white',\n              // Use camelCase for CSS properties\n              fontSize: '32px',\n              // font-size becomes fontSize\n              textAlign: 'center',\n              // text-align becomes textAlign\n              fontFamily: 'Segoe UI, sans-serif',\n              // font-family becomes fontFamily\n              fontWeight: 'lighter',\n              // Bold text\n              fontStyle: 'normal' // Italic text\n            },\n            children: \"Question and Solution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(TypewriterRendererExample, {\n            content: questionSolution\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.right,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'white',\n          // Use camelCase for CSS properties\n          fontSize: '32px',\n          // font-size becomes fontSize\n          textAlign: 'center',\n          // text-align becomes textAlign\n          fontFamily: 'Segoe UI, sans-serif',\n          // font-family becomes fontFamily\n          fontWeight: 'lighter',\n          // Bold text\n          fontStyle: 'normal' // Italic text\n        },\n        children: \"Ask your question about the content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"                        \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"custom-textarea\",\n              id: \"question\",\n              value: userQuestion,\n              onChange: e => setUserQuestion(e.target.value),\n              rows: \"4\",\n              cols: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              type: \"submit\",\n              children: \"\\u25BA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 17\n      }, this), !response && !responseEquations && !responseExample && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loading-animation\",\n        className: \"loading-animation\",\n        style: {\n          display: response ? 'none' : 'inline-block'\n        } // Dynamically control visibility\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot\",\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot\",\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot\",\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 21\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'white',\n            // Use camelCase for CSS properties\n            fontSize: '32px',\n            // font-size becomes fontSize\n            textAlign: 'center',\n            // text-align becomes textAlign\n            fontFamily: 'Segoe UI, sans-serif',\n            // font-family becomes fontFamily\n            fontWeight: 'lighter',\n            // Bold text\n            fontStyle: 'normal' // Italic text\n          },\n          children: \"Response from Ai Solver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TypewriterRenderer, {\n            content: response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 21\n      }, this), responseEquations && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'white',\n            // Use camelCase for CSS properties\n            fontSize: '32px',\n            // font-size becomes fontSize\n            textAlign: 'center',\n            // text-align becomes textAlign\n            fontFamily: 'Segoe UI, sans-serif',\n            // font-family becomes fontFamily\n            fontWeight: 'lighter',\n            // Bold text\n            fontStyle: 'normal' // Italic text\n          },\n          children: \"Response from Ai Solver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TypewriterRendererResponse, {\n            content: responseEquations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 21\n      }, this), responseExample && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'white',\n            // Use camelCase for CSS properties\n            fontSize: '32px',\n            // font-size becomes fontSize\n            textAlign: 'center',\n            // text-align becomes textAlign\n            fontFamily: 'Segoe UI, sans-serif',\n            // font-family becomes fontFamily\n            fontWeight: 'lighter',\n            // Bold text\n            fontStyle: 'normal' // Italic text\n          },\n          children: \"Response from Ai Solver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TypewriterRendererResponse, {\n            content: responseExample\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 642,\n    columnNumber: 9\n  }, this);\n}\n_s5(TopicSelector, \"SgoQw4DaJyJAVjexFNDbiOQbYxA=\");\n_c5 = TopicSelector;\nconst styles = {\n  container: {\n    display: 'flex',\n    // Enable Flexbox\n    height: '150vh',\n    // Full viewport height\n    justifyContent: 'space-between',\n    // Space between the two sections\n    padding: '0px',\n    // Padding for the container\n    borderRadius: '20px',\n    // Rounded corners\n    overflow: 'auto',\n    border: '30px solid rgb(28, 38, 48)',\n    boxShadow: '0px 0px 10px 10px rgb(28, 38, 48, 0.9)',\n    /* Optional: Add shadow for better separation */\n    width: '93vw'\n  },\n  left: {\n    width: '50%',\n    // Left section width\n    backgroundColor: '#36454F',\n    // Light gray background for the left section\n    padding: '0vw',\n    borderRadius: '0px',\n    // Rounded corners\n    overflow: 'auto',\n    border: '3px solid rgb(38, 48, 58)',\n    boxShadow: '0px 0px 0px 8px #36454F',\n    /* Optional: Add shadow for better separation */\n    margin: '3px'\n  },\n  right: {\n    width: '50%',\n    // Right section width\n    backgroundColor: '#3f4043',\n    // Light gray background for the right section\n    padding: '0vw',\n    borderRadius: '0px',\n    // Rounded corners\n    textAlign: 'left',\n    // Left align text in the typewriter\n    overflow: 'auto',\n    border: '3px solid #2e2f31',\n    boxShadow: '0px 0px 0px 3px #3f4043',\n    /* Optional: Add shadow for better separation */\n    margin: '3px'\n  }\n};\nconst globalStyles = {\n  body: {\n    margin: 0,\n    padding: 0,\n    boxSizing: 'border-box' // Ensures consistent box model behavior\n  }\n};\n\n// Apply these styles globally (e.g., useEffect or directly in CSS):\ndocument.body.style.margin = '0';\ndocument.body.style.padding = '0';\ndocument.body.style.boxSizing = 'border-box';\nexport default TopicSelector;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TypewriterRenderer\");\n$RefreshReg$(_c2, \"TypewriterRendererResponse\");\n$RefreshReg$(_c3, \"TypewriterRendererExample\");\n$RefreshReg$(_c4, \"Typewriter\");\n$RefreshReg$(_c5, \"TopicSelector\");","map":{"version":3,"names":["React","useState","useEffect","katex","jsxDEV","_jsxDEV","currentUrl","window","location","href","console","log","ipAddress","split","renderLatex","latex","sanitizedLatex","replace","lines","renderToString","throwOnError","displayMode","e","message","typewriterEffect","content","setDisplayContent","regex","parts","filter","part","undefined","displayContent","startsWith","isDisplayMode","mathContent","renderedMath","i","length","error","buttonsHTML","textdelayRandomTime","typewriterEffectExample","typewriterEffectResponse","Promise","resolve","randomDelay","Math","floor","random","setTimeout","TypewriterRenderer","_s","children","style","textAlign","width","margin","padding","maxWidth","marginLeft","border","backgroundColor","color","fontFamily","fontSize","fontWeight","fontStyle","lineHeight","letterSpacing","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","TypewriterRendererResponse","_s2","_c2","TypewriterRendererExample","_s3","_c3","escapeBackslashes","str","renderContentWithLatex","Boolean","htmlContent","map","index","include","delimiters","left","right","display","join","Typewriter","text","speed","_s4","displayedText","setDisplayedText","timer","setInterval","prev","clearInterval","_c4","TopicSelector","_s5","subjects","setSubjects","textbooks","setTextbooks","chapters","setChapters","topics","setTopics","questions","setQuestions","selectedSubject","setSelectedSubject","selectedTextbook","setSelectedTextbook","selectedChapter","setSelectedChapter","selectedTopic","setSelectedTopic","selectedQuestion","setSelectedQuestion","chapterSummary","setChapterSummary","topicSummary","setTopicSummary","questionSolution","setQuestionSolution","userQuestion","setUserQuestion","response","setResponse","responseEquations","setResponseEquations","responseExample","setResponseExample","showChapterSummary","setShowChapterSummary","showTopicSummary","setShowTopicSummary","showQuestionSolution","setShowQuestionSolution","handleEquationQuestion","equation","action","res","fetch","method","headers","body","JSON","stringify","data","json","handleExampleQuestion","questionpart","example","then","catch","handleSubjectChange","subjectId","handleTextbookChange","textbookId","handleChapterChange","chapterId","summary","handleTopicChange","topicId","handleQuestionChange","questionId","solution","latexCodeSent","handleSubmit","preventDefault","question","latexCode","renderedresoponse","styles","container","className","value","onChange","target","subject","id","name","disabled","textbook","chapter","onClick","topic","onSubmit","rows","cols","type","_c5","height","justifyContent","borderRadius","overflow","boxShadow","globalStyles","boxSizing","document","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/TopicSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\r\nimport katex from 'katex';\r\n\r\nconst currentUrl = window.location.href;\r\nconsole.log(currentUrl); // Example: \"https://example.com/page\"\r\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\r\nconsole.log(ipAddress);\r\n\r\n\r\nfunction renderLatex(latex) {\r\n    try {\r\n        const sanitizedLatex = latex.replace(/\\\\\\(|\\\\\\)|\\\\\\[|\\\\\\]/g, '');\r\n        const lines = sanitizedLatex.split('\\n');\r\n        return katex.renderToString(latex, {\r\n            throwOnError: false,\r\n            displayMode: true\r\n        });\r\n    } catch (e) {\r\n        return `<span class=\"error\">Error rendering LaTeX: ${e.message}</span>`;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst typewriterEffect = async (content, setDisplayContent) => {\r\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\[');  // Replace \\[ with \\( and remove leading spaces\r\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]');  // Replace \\] with \\) and remove trailing spaces\r\n    console.log(content);\r\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[[\\s\\S]*?\\\\\\])|(\\\\begin\\{array\\}[\\s\\S]*?\\\\end\\{array\\})|(\\\\textit\\{.*?\\})|(\\\\textbf\\{.*?\\})/g;\r\n    const parts = content.split(regex).filter(part => part !== null && part !== undefined && part !== '');\r\n    let displayContent = '';\r\n    console.log(parts);\r\n    for (const part of parts) {\r\n        if (part.startsWith('\\\\(') || part.startsWith('\\\\begin') || part.startsWith('\\\\textit') || part.startsWith('\\\\textbf')) {\r\n            // Process LaTeX content\r\n\r\n            try {\r\n                const isDisplayMode = part.startsWith('\\\\[');\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');  // Strip the delimiters\r\n                const renderedMath = katex.renderToString(mathContent, { throwOnError: false, displayMode: isDisplayMode });\r\n\r\n                // Simulate typing the LaTeX\r\n                for (let i = 0; i < renderedMath.length; i++) {\r\n                    displayContent += renderedMath[i];\r\n\r\n\r\n                    setDisplayContent(displayContent);\r\n/*                     await delayRandomTime(); \r\n */                }\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n                setDisplayContent(displayContent);\r\n            }\r\n        } else if (part.startsWith('\\\\[')) {\r\n            // Process LaTeX content\r\n\r\n            try {\r\n                const isDisplayMode = part.startsWith('\\\\[');\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');  // Strip the delimiters\r\n                const renderedMath = katex.renderToString(mathContent, { throwOnError: false, displayMode: isDisplayMode });\r\n\r\n                // Simulate typing the LaTeX\r\n                for (let i = 0; i < renderedMath.length; i++) {\r\n                    displayContent += renderedMath[i];\r\n                    setDisplayContent(displayContent);\r\n/*                     await delayRandomTime(); \r\n */                }\r\n\r\n                const buttonsHTML = `\r\n <button onclick=\"handleEquationQuestion('${mathContent}', 'what')\">What is the equation?</button>\r\n <button onclick=\"handleEquationQuestion('${mathContent}', 'how')\">How to use the equation?</button>\r\n`; displayContent += buttonsHTML;\r\n                /* console.log(displayContent); */\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n                setDisplayContent(displayContent);\r\n            }\r\n        } else {\r\n            // Process plain text content\r\n            for (let i = 0; i < part.length; i++) {\r\n                displayContent += part[i] === '\\n' ? '<br />' : part[i];\r\n                setDisplayContent(displayContent);\r\n                await textdelayRandomTime();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst typewriterEffectExample = async (content, setDisplayContent) => {\r\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\[');  // Replace \\[ with \\( and remove leading spaces\r\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]');  // Replace \\] with \\) and remove trailing spaces\r\n    console.log(content);\r\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[[\\s\\S]*?\\\\\\])|(\\\\begin\\{array\\}[\\s\\S]*?\\\\end\\{array\\})|(\\\\textit\\{.*?\\})|(\\\\textbf\\{.*?\\})/g;\r\n    const parts = content.split(regex).filter(part => part !== null && part !== undefined && part !== '');\r\n    let displayContent = '';\r\n    console.log(parts);\r\n    for (const part of parts) {\r\n        if (part.startsWith('\\\\(') || part.startsWith('\\\\begin') || part.startsWith('\\\\textit') || part.startsWith('\\\\textbf')) {\r\n            // Process LaTeX content\r\n\r\n            try {\r\n                const isDisplayMode = part.startsWith('\\\\[');\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');  // Strip the delimiters\r\n                const renderedMath = katex.renderToString(mathContent, { throwOnError: false, displayMode: isDisplayMode });\r\n\r\n                // Simulate typing the LaTeX\r\n                for (let i = 0; i < renderedMath.length; i++) {\r\n                    displayContent += renderedMath[i];\r\n\r\n\r\n                    setDisplayContent(displayContent);\r\n/*                     await delayRandomTime(); \r\n */                }\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n                setDisplayContent(displayContent);\r\n            }\r\n        } else if (part.startsWith('\\\\[')) {\r\n            // Process LaTeX content\r\n\r\n            try {\r\n                const isDisplayMode = part.startsWith('\\\\[');\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');  // Strip the delimiters\r\n                const renderedMath = katex.renderToString(mathContent, { throwOnError: false, displayMode: isDisplayMode });\r\n\r\n                // Simulate typing the LaTeX\r\n                for (let i = 0; i < renderedMath.length; i++) {\r\n                    displayContent += renderedMath[i];\r\n                    setDisplayContent(displayContent);\r\n/*                     await delayRandomTime(); \r\n */                }\r\n\r\n                const buttonsHTML = `\r\n <button onclick=\"handleExampleQuestion('${mathContent}')\">I don't understand this step</button>\r\n`; displayContent += buttonsHTML;\r\n                /* console.log(displayContent); */\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n                setDisplayContent(displayContent);\r\n            }\r\n        } else {\r\n            // Process plain text content\r\n            for (let i = 0; i < part.length; i++) {\r\n                displayContent += part[i] === '\\n' ? '<br />' : part[i];\r\n                setDisplayContent(displayContent);\r\n                await textdelayRandomTime();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst typewriterEffectResponse = async (content, setDisplayContent) => {\r\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\[');  // Replace \\[ with \\( and remove leading spaces\r\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]');  // Replace \\] with \\) and remove trailing spaces\r\n    console.log(content);\r\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[[\\s\\S]*?\\\\\\])|(\\\\begin\\{array\\}[\\s\\S]*?\\\\end\\{array\\})|(\\\\textit\\{.*?\\})|(\\\\textbf\\{.*?\\})/g;\r\n    const parts = content.split(regex).filter(part => part !== null && part !== undefined && part !== '');\r\n    let displayContent = '';\r\n    console.log(parts);\r\n    for (const part of parts) {\r\n        if (part.startsWith('\\\\(') || part.startsWith('\\\\[') || part.startsWith('\\\\begin') || part.startsWith('\\\\textit') || part.startsWith('\\\\textbf')) {\r\n            // Process LaTeX content\r\n\r\n            try {\r\n                const isDisplayMode = part.startsWith('\\\\[');\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');  // Strip the delimiters\r\n                const renderedMath = katex.renderToString(mathContent, { throwOnError: false, displayMode: isDisplayMode });\r\n\r\n                // Simulate typing the LaTeX\r\n                for (let i = 0; i < renderedMath.length; i++) {\r\n                    displayContent += renderedMath[i];\r\n\r\n\r\n                    setDisplayContent(displayContent);\r\n/*                     await delayRandomTime(); \r\n */                }\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n                setDisplayContent(displayContent);\r\n            }\r\n        } else {\r\n            // Process plain text content\r\n            for (let i = 0; i < part.length; i++) {\r\n                displayContent += part[i] === '\\n' ? '<br />' : part[i];\r\n                setDisplayContent(displayContent);\r\n                await textdelayRandomTime();\r\n            }\r\n        }\r\n    }\r\n};\r\n// Function to create random delay\r\n/* const delayRandomTime = () => {\r\n    return new Promise(resolve => {\r\n        const randomDelay = Math.floor(Math.random() * 1) + 0; // Delay between 50ms to 250ms\r\n        setTimeout(resolve, randomDelay);\r\n    });\r\n};  */\r\n\r\nconst textdelayRandomTime = () => {\r\n    return new Promise(resolve => {\r\n        const randomDelay = Math.floor(Math.random() * 20) + 5; // Delay between 50ms to 250ms\r\n        setTimeout(resolve, randomDelay);\r\n    });\r\n};\r\n\r\n// Main component to handle the content rendering\r\nconst TypewriterRenderer = ({ content }) => {\r\n    const [displayContent, setDisplayContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Start the typewriter effect when the component loads\r\n        typewriterEffect(content, setDisplayContent);\r\n    }, [content]);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    textAlign: 'left',         // Align text to the left\r\n                    width: '42vw',\r\n                    margin: '0 auto',          // Center the div horizontally\r\n                    padding: '10px',           // Add padding\r\n                    maxWidth: '900px',         // Set a max width for the container\r\n                    marginLeft: '1vw',        // Add some space from the left\r\n                    border: '0px solid gray',  // Gray border\r\n                    backgroundColor: 'black',  // Black background\r\n                    color: 'white',            // White text color for contrast\r\n                    fontFamily: 'Segoe UI, sans-serif',  // Font family\r\n                    fontSize: '18px',          // Font size\r\n                    fontWeight: 'lighter',        // Bold text\r\n                    fontStyle: 'normal',       // Italic text\r\n                    lineHeight: '1.6',         // Line height for readability\r\n                    letterSpacing: '1px'       // Space between letters\r\n                }}\r\n                dangerouslySetInnerHTML={{ __html: displayContent }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst TypewriterRendererResponse = ({ content }) => {\r\n    const [displayContent, setDisplayContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Start the typewriter effect when the component loads\r\n        typewriterEffectResponse(content, setDisplayContent);\r\n    }, [content]);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    textAlign: 'left',         // Align text to the left\r\n                    width: '42vw',\r\n                    margin: '0 auto',          // Center the div horizontally\r\n                    padding: '10px',           // Add padding\r\n                    maxWidth: '900px',         // Set a max width for the container\r\n                    marginLeft: '1vw',        // Add some space from the left\r\n                    border: '0px solid gray',  // Gray border\r\n                    backgroundColor: 'black',  // Black background\r\n                    color: 'white',            // White text color for contrast\r\n                    fontFamily: 'Segoe UI, sans-serif',  // Font family\r\n                    fontSize: '18px',          // Font size\r\n                    fontWeight: 'lighter',        // Bold text\r\n                    fontStyle: 'normal',       // Italic text\r\n                    lineHeight: '1.6',         // Line height for readability\r\n                    letterSpacing: '1px'       // Space between letters\r\n                }}\r\n                dangerouslySetInnerHTML={{ __html: displayContent }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TypewriterRendererExample = ({ content }) => {\r\n    const [displayContent, setDisplayContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Start the typewriter effect when the component loads\r\n        typewriterEffectExample(content, setDisplayContent);\r\n    }, [content]);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    textAlign: 'left',         // Align text to the left\r\n                    width: '42vw',\r\n                    margin: '0 auto',          // Center the div horizontally\r\n                    padding: '10px',           // Add padding\r\n                    maxWidth: '900px',         // Set a max width for the container\r\n                    marginLeft: '1vw',        // Add some space from the left\r\n                    border: '0px solid gray',  // Gray border\r\n                    backgroundColor: 'black',  // Black background\r\n                    color: 'white',            // White text color for contrast\r\n                    fontFamily: 'Segoe UI, sans-serif',  // Font family\r\n                    fontSize: '18px',          // Font size\r\n                    fontWeight: 'lighter',        // Bold text\r\n                    fontStyle: 'normal',       // Italic text\r\n                    lineHeight: '1.6',         // Line height for readability\r\n                    letterSpacing: '1px'       // Space between letters\r\n                }}\r\n                dangerouslySetInnerHTML={{ __html: displayContent }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nfunction escapeBackslashes(str) {\r\n    return str.replace(/\\\\/g, '\\\\\\\\');\r\n}\r\n\r\nconst renderContentWithLatex = (content) => {\r\n    // Regular expression to match LaTeX math mode delimiters \\( ... \\) or \\[ ... \\]\r\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\[');  // Replace \\[ with \\( and remove leading spaces\r\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]');  // Replace \\] with \\) and remove trailing spaces\r\n\r\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[.*?\\\\\\])|(\\\\\\[\\\\\\n.*?\\\\\\]\\\\\\n)/g;\r\n\r\n    // Split content into plain text and LaTeX parts\r\n    const parts = content.split(regex).filter(Boolean);\r\n\r\n    console.log('parts in rendercontent function', parts);\r\n\r\n    // Process each part and return a string of HTML\r\n    const htmlContent = parts.map((part, index) => {\r\n        if (!part) return '';  // Skip undefined or empty parts\r\n\r\n\r\n        // If part starts with a LaTeX delimiter, render it with KaTeX\r\n        if (part.startsWith('\\\\(') || part.startsWith('\\\\[') || part.include('\\\\')) {\r\n\r\n            try {\r\n                const isDisplayMode = part.startsWith('[');  // Use display mode for \\[ \\]\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '')\r\n                return katex.renderToString(mathContent, {\r\n                    delimiters: [\r\n                        { left: '$$', right: '$$', display: true },\r\n                        { left: '$', right: '$', display: false },\r\n                        { left: '\\\\(', right: '\\\\)', display: false },\r\n                        { left: '\\\\[', right: '\\\\]', display: true }\r\n                    ], throwOnError: false, displayMode: isDisplayMode\r\n                });\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                return `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n            }\r\n        } else {\r\n            // Render plain text, replacing newlines with <br> tags for line breaks\r\n            return part.replace(/\\n/g, '<br />');\r\n        }\r\n    });\r\n\r\n    // Join all parts into a single HTML string and return it\r\n    return htmlContent.join('');\r\n};\r\n\r\nfunction Typewriter({ text, speed = 50 }) {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        let index = 0;\r\n        const timer = setInterval(() => {\r\n            if (index < text.length) {\r\n                setDisplayedText(prev => prev + text[index]);\r\n                index++;\r\n            } else {\r\n                clearInterval(timer);\r\n            }\r\n        }, speed);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [text, speed]);\r\n\r\n    return <span dangerouslySetInnerHTML={{ __html: displayedText }} />;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction TopicSelector() {\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [textbooks, setTextbooks] = useState([]);\r\n    const [chapters, setChapters] = useState([]);\r\n    const [topics, setTopics] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    const [selectedSubject, setSelectedSubject] = useState('');\r\n    const [selectedTextbook, setSelectedTextbook] = useState('');\r\n    const [selectedChapter, setSelectedChapter] = useState('');\r\n    const [selectedTopic, setSelectedTopic] = useState('');\r\n    const [selectedQuestion, setSelectedQuestion] = useState('');\r\n\r\n    const [chapterSummary, setChapterSummary] = useState('');\r\n    const [topicSummary, setTopicSummary] = useState('');\r\n    const [questionSolution, setQuestionSolution] = useState('');\r\n    const [userQuestion, setUserQuestion] = useState('');\r\n    const [response, setResponse] = useState('Hello! How may I help you today?');\r\n    const [responseEquations, setResponseEquations] = useState('');\r\n    const [responseExample, setResponseExample] = useState('');\r\n\r\n\r\n    const [showChapterSummary, setShowChapterSummary] = useState(false);\r\n    const [showTopicSummary, setShowTopicSummary] = useState(false);\r\n    const [showQuestionSolution, setShowQuestionSolution] = useState(false);\r\n\r\n    console.log('Fetching from URL:', '/api/subjects');\r\n\r\n    window.handleEquationQuestion = async (equation, action) => {\r\n        try {\r\n            setResponse('');\r\n            setResponseEquations('');\r\n            setResponseExample('');\r\n            const res = await fetch('http://localhost:200/api/query-equation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    equation,\r\n                    action, // \"what\" or \"how\"\r\n                }),\r\n            });\r\n\r\n            const data = await res.json();\r\n            setResponseEquations(data.responseEquations);\r\n/*             console.log(data.responseEquations);  // Do something with the response\r\n */        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n\r\n    };\r\n\r\n    console.log(responseEquations)\r\n\r\n\r\n    window.handleExampleQuestion = async (questionpart) => {\r\n        try {\r\n            setResponse('');\r\n            setResponseEquations('');\r\n            setResponseExample('');\r\n            const res = await fetch('http://localhost:200/api/query-example', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    example: questionpart,\r\n                    questionSolution: questionSolution,\r\n                }),\r\n            });\r\n\r\n            const data = await res.json();\r\n            setResponseExample(data.responseExample);\r\n/*             console.log(data.responseEquations);  // Do something with the response\r\n */        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n\r\n    };\r\n    // Fetch subjects on component mount\r\n    /* useEffect(() => {\r\n        fetch('http://localhost:200/api/subjects')\r\n            .then(response => response.json())\r\n            .then(data => setSubjects(data))\r\n            .catch(error => console.error('Error fetching subjects:', error));\r\n    }, []);\r\n\r\n    // Fetch textbooks when a subject is selected\r\n    useEffect(() => {\r\n        if (selectedSubject) {\r\n            fetch(`http://localhost:200/api/textbooks?subjectId=${selectedSubject}`)\r\n                .then(response => response.json())\r\n                .then(setTextbooks)\r\n                .catch(error => console.error('Error fetching textbooks:', error));\r\n        } else {\r\n            setTextbooks([]); // Clear textbooks when no subject is selected\r\n        }\r\n    }, [selectedSubject]);\r\n\r\n    // Fetch chapters when a textbook is selected\r\n    useEffect(() => {\r\n        if (selectedTextbook) {\r\n            fetch(`http://localhost:200/api/chapters?textbookId=${selectedTextbook}`)\r\n                .then(response => response.json())\r\n                .then(setChapters)\r\n                .catch(error => console.error('Error fetching chapters:', error));\r\n        } else {\r\n            setChapters([]); // Clear chapters when no textbook is selected\r\n        }\r\n    }, [selectedTextbook]);\r\n\r\n    // Fetch LaTeX code when a chapter is selected\r\n    useEffect(() => {\r\n        if (selectedChapter) {\r\n            fetch(`http://localhost:200/api/latex-code?chapterId=${selectedChapter}`)\r\n                .then(response => response.json())\r\n                .then(data => setLatexCode(data.latexCode))\r\n                .catch(error => console.error('Error fetching LaTeX code:', error));\r\n        }\r\n    }, [selectedChapter]); */\r\n\r\n\r\n    useEffect(() => {\r\n        // Fetch subjects using the fetch API\r\n        fetch('http://' + ipAddress + ':200/api/subjects')\r\n            .then((response) => response.json())\r\n            .then((data) => setSubjects(data))\r\n            .catch((error) => console.error('Error fetching subjects:', error));\r\n    }, []);\r\n\r\n    const handleSubjectChange = (subjectId) => {\r\n\r\n        setSelectedSubject(subjectId);\r\n        setTextbooks([]);\r\n        setChapters([]);\r\n        setTopics([]);\r\n        setQuestions([]);\r\n        // Fetch textbooks based on subjectId\r\n        fetch('http://' + ipAddress + `:200/api/textbooks/${subjectId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => setTextbooks(data))\r\n            .catch((error) => console.error('Error fetching textbooks:', error));\r\n    };\r\n\r\n    const handleTextbookChange = (textbookId) => {\r\n        setSelectedTextbook(textbookId);\r\n        setChapters([]);\r\n        setTopics([]);\r\n        setQuestions([]);\r\n        // Fetch chapters based on textbookId\r\n        fetch('http://' + ipAddress + `:200/api/chapters/${textbookId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => setChapters(data))\r\n            .catch((error) => console.error('Error fetching chapters:', error));\r\n    };\r\n\r\n    const handleChapterChange = (chapterId) => {\r\n        setSelectedChapter(chapterId);\r\n        // Fetch chapter summary\r\n        fetch('http://' + ipAddress + `:200/api/chapter-summary/${chapterId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => setChapterSummary(data.summary))\r\n            .catch((error) => console.error('Error fetching chapter summary:', error));\r\n\r\n        // Fetch topics based on chapterId\r\n        fetch('http://' + ipAddress + `:200/api/topics/${chapterId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => setTopics(data))\r\n            .catch((error) => console.error('Error fetching topics:', error));\r\n    };\r\n\r\n    const handleTopicChange = (topicId) => {\r\n        setSelectedTopic(topicId);\r\n        // Fetch topic summary\r\n        fetch('http://' + ipAddress + `:200/api/topic-summary/${topicId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => setTopicSummary(data.summary))\r\n            .catch((error) => console.error('Error fetching topic summary:', error));\r\n\r\n        // Fetch questions based on topicId\r\n        fetch('http://' + ipAddress + `:200/api/questions/${topicId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => setQuestions(data))\r\n            .catch((error) => console.error('Error fetching questions:', error));\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleQuestionChange = (questionId) => {\r\n        setSelectedQuestion(questionId);\r\n        // Fetch question and solution\r\n        fetch('http://' + ipAddress + `:200/api/question/${questionId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => setQuestionSolution(data.solution))\r\n            .catch((error) => console.error('Error fetching question solution:', error));\r\n    };\r\n\r\n    /* const latexCodetest = `\r\n\\\\begin{equation}\r\nx + y = z\r\n\\\\end{equation}\r\n\\\\begin{equation}\r\nx + y = z\r\n\\\\end{equation}\r\n`; */\r\n    /* const escapedLatexCode = escapeBackslashes(latexCode); */\r\n\r\n    console.log('Latex Code on render:', questionSolution);\r\n    /*     console.log('html on render:', renderContentWithLatex(latexCode)); */\r\n\r\n\r\n    let latexCodeSent = ''; // Declare latexCodeSent outside the conditions\r\n\r\n    if (showChapterSummary) {\r\n        latexCodeSent = chapterSummary;\r\n    } else if (showTopicSummary) {\r\n        latexCodeSent = topicSummary;\r\n    } else if (showQuestionSolution) {\r\n        latexCodeSent = questionSolution;\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setResponse('');\r\n        setResponseEquations('');\r\n        try {\r\n            const res = await fetch('http://' + ipAddress + ':200/api/chatgpt', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    question: userQuestion,\r\n                    latexCode: latexCodeSent,\r\n                })\r\n            });\r\n            const data = await res.json();\r\n            setResponse(data.response);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const renderedresoponse = renderLatex(escapeBackslashes(response));\r\n    console.log('response from openai', response);\r\n    return (\r\n\r\n        <div style={styles.container}>\r\n            <div style={styles.left}>\r\n                <div>\r\n                    <h1 style={{\r\n                        color: 'white',            // Use camelCase for CSS properties\r\n                        fontSize: '32px',         // font-size becomes fontSize\r\n                        textAlign: 'center',      // text-align becomes textAlign\r\n                        fontFamily: 'Segoe UI, sans-serif',  // font-family becomes fontFamily\r\n                        fontWeight: 'lighter',        // Bold text\r\n                        fontStyle: 'normal',       // Italic text\r\n                    }}>\r\n                        Select a Chapter you are interested in\r\n                    </h1>\r\n\r\n                    {/* <select value={selectedSubject} onChange={e => setSelectedSubject(e.target.value)}>\r\n                        <option value=\"\">Select a subject</option>\r\n                        {subjects.map(subject => (\r\n                            <option key={subject.id} value={subject.id}>{subject.name}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select value={selectedTextbook} onChange={e => setSelectedTextbook(e.target.value)} disabled={!selectedSubject}>\r\n                        <option value=\"\">Select a textbook</option>\r\n                        {textbooks.map(textbook => (\r\n                            <option key={textbook.id} value={textbook.id}>{textbook.name}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select value={selectedChapter} onChange={e => setSelectedChapter(e.target.value)} disabled={!selectedTextbook}>\r\n                        <option value=\"\">Select a chapter</option>\r\n                        {chapters.map(chapter => (\r\n                            <option key={chapter.id} value={chapter.id}>{chapter.title}</option>\r\n                        ))}\r\n                    </select> */}\r\n\r\n\r\n                    {/* Subject Select */}\r\n                    <select className=\"custom-select-modern\" value={selectedSubject} onChange={(e) => handleSubjectChange(e.target.value)}>\r\n                        <option value=\"\">Select Subject</option>\r\n                        {subjects.map((subject) => (\r\n                            <option key={subject.id} value={subject.id}>\r\n                                {subject.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    {/* Textbook Select */}\r\n                    <select className=\"custom-select-modern\" value={selectedTextbook} onChange={(e) => handleTextbookChange(e.target.value)} disabled={!selectedSubject}>\r\n                        <option value=\"\">Select Textbook</option>\r\n                        {textbooks.map((textbook) => (\r\n                            <option key={textbook.id} value={textbook.id}>\r\n                                {textbook.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <div>\r\n                        {/* Chapter Select */}\r\n                        <select className=\"custom-select-modern\" value={selectedChapter} onChange={(e) => handleChapterChange(e.target.value)} disabled={!selectedTextbook}>\r\n                            <option value=\"\">Select Chapter</option>\r\n                            {chapters.map((chapter) => (\r\n                                <option key={chapter.id} value={chapter.id}>\r\n                                    {chapter.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                        {/* Show Chapter Summary Button */}\r\n                        <button className=\"custom-button-modern\"\r\n                            onClick={() => {\r\n                                setShowChapterSummary(true)\r\n                                setShowTopicSummary(false);\r\n                                setShowQuestionSolution(false);\r\n                            }}\r\n\r\n                            disabled={!selectedChapter}\r\n                        >\r\n                            Show Chapter Summary\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        {/* Topic Select */}\r\n                        <select className=\"custom-select-modern\" value={selectedTopic} onChange={(e) => handleTopicChange(e.target.value)} disabled={!selectedChapter}>\r\n                            <option value=\"\">Select Topic</option>\r\n                            {topics.map((topic) => (\r\n                                <option key={topic.id} value={topic.id}>\r\n                                    {topic.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n\r\n                        {/* Show Topic Summary Button */}\r\n                        <button className=\"custom-button-modern\"\r\n                            onClick={() => {\r\n                                setShowChapterSummary(false)\r\n                                setShowTopicSummary(true);\r\n                                setShowQuestionSolution(false);\r\n                            }}\r\n                            disabled={!selectedTopic}\r\n                        >\r\n                            Show Topic Summary\r\n                        </button>\r\n                    </div>\r\n                    {/* Question Select */}\r\n                    <select className=\"custom-select-modern\" value={selectedQuestion} onChange={(e) => handleQuestionChange(e.target.value)} disabled={!selectedTopic}>\r\n                        <option value=\"\">Select Question</option>\r\n                        {questions.map((question) => (\r\n                            <option key={question.id} value={question.id}>\r\n                                {question.question}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    {/* Show Question and Solution Button */}\r\n                    <button className=\"custom-button-modern\"\r\n                        onClick={() => {\r\n                            setShowChapterSummary(false)\r\n                            setShowTopicSummary(false);\r\n                            setShowQuestionSolution(true);\r\n                        }}\r\n                        disabled={!selectedQuestion}\r\n                    >\r\n                        Show Question and Solution\r\n                    </button>\r\n\r\n                    {/* Display Chapter Summary */}\r\n                    {showChapterSummary && chapterSummary && (\r\n                        <div>\r\n                            <h1 style={{\r\n                                color: 'white',            // Use camelCase for CSS properties\r\n                                fontSize: '32px',         // font-size becomes fontSize\r\n                                textAlign: 'center',      // text-align becomes textAlign\r\n                                fontFamily: 'Segoe UI, sans-serif',  // font-family becomes fontFamily\r\n                                fontWeight: 'lighter',        // Bold text\r\n                                fontStyle: 'normal',       // Italic text\r\n                            }}>\r\n                                Chapter Summary\r\n                            </h1> <TypewriterRenderer content={chapterSummary} />\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Display Topic Summary */}\r\n                    {showTopicSummary && topicSummary && (\r\n                        <div>\r\n                            <h1 style={{\r\n                                color: 'white',            // Use camelCase for CSS properties\r\n                                fontSize: '32px',         // font-size becomes fontSize\r\n                                textAlign: 'center',      // text-align becomes textAlign\r\n                                fontFamily: 'Segoe UI, sans-serif',  // font-family becomes fontFamily\r\n                                fontWeight: 'lighter',        // Bold text\r\n                                fontStyle: 'normal',       // Italic text\r\n                            }}>\r\n                                Topic Summary\r\n                            </h1> <TypewriterRendererResponse content={topicSummary} />\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Display Question Solution */}\r\n                    {showQuestionSolution && questionSolution && (\r\n                        <div>\r\n                            <h1 style={{\r\n                                color: 'white',            // Use camelCase for CSS properties\r\n                                fontSize: '32px',         // font-size becomes fontSize\r\n                                textAlign: 'center',      // text-align becomes textAlign\r\n                                fontFamily: 'Segoe UI, sans-serif',  // font-family becomes fontFamily\r\n                                fontWeight: 'lighter',        // Bold text\r\n                                fontStyle: 'normal',       // Italic text\r\n                            }}>\r\n                                Question and Solution\r\n                            </h1> <TypewriterRendererExample content={questionSolution} />\r\n                        </div>\r\n                    )}\r\n                    <div></div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div style={styles.right}>\r\n                <h1 style={{\r\n                    color: 'white',            // Use camelCase for CSS properties\r\n                    fontSize: '32px',         // font-size becomes fontSize\r\n                    textAlign: 'center',      // text-align becomes textAlign\r\n                    fontFamily: 'Segoe UI, sans-serif',  // font-family becomes fontFamily\r\n                    fontWeight: 'lighter',        // Bold text\r\n                    fontStyle: 'normal',       // Italic text\r\n                }}>\r\n                    Ask your question about the content\r\n                </h1>\r\n                <div className=\"input-wrapper\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            {/*                         <label htmlFor=\"question\">Your Question:</label>\r\n */}                        <textarea className=\"custom-textarea\"\r\n                                id=\"question\"\r\n                                value={userQuestion}\r\n                                onChange={(e) => setUserQuestion(e.target.value)}\r\n                                rows=\"4\"\r\n                                cols=\"50\"\r\n                            />\r\n\r\n                            <button className=\"submit-button\" type=\"submit\">&#9658;</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n                {!response && !responseEquations && !responseExample && (\r\n                    <div\r\n                        id=\"loading-animation\"\r\n                        className=\"loading-animation\"\r\n                        style={{ display: response ? 'none' : 'inline-block' }} // Dynamically control visibility\r\n                    >\r\n                        <span className=\"dot\">.</span>\r\n                        <span className=\"dot\">.</span>\r\n                        <span className=\"dot\">.</span>\r\n                    </div>\r\n                )}\r\n                {response && (\r\n                    <div>\r\n                        <h1 style={{\r\n                            color: 'white',            // Use camelCase for CSS properties\r\n                            fontSize: '32px',         // font-size becomes fontSize\r\n                            textAlign: 'center',      // text-align becomes textAlign\r\n                            fontFamily: 'Segoe UI, sans-serif',  // font-family becomes fontFamily\r\n                            fontWeight: 'lighter',        // Bold text\r\n                            fontStyle: 'normal',       // Italic text\r\n                        }}>\r\n                            Response from Ai Solver\r\n                        </h1>\r\n                        <div>\r\n                            <TypewriterRenderer content={response} />\r\n                        </div>\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {responseEquations && (\r\n                    <div>\r\n                        <h1 style={{\r\n                            color: 'white',            // Use camelCase for CSS properties\r\n                            fontSize: '32px',         // font-size becomes fontSize\r\n                            textAlign: 'center',      // text-align becomes textAlign\r\n                            fontFamily: 'Segoe UI, sans-serif',  // font-family becomes fontFamily\r\n                            fontWeight: 'lighter',        // Bold text\r\n                            fontStyle: 'normal',       // Italic text\r\n                        }}>\r\n                            Response from Ai Solver\r\n                        </h1>\r\n                        <div>\r\n                            <TypewriterRendererResponse content={responseEquations} />\r\n                        </div>\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {responseExample && (\r\n                    <div>\r\n                        <h1 style={{\r\n                            color: 'white',            // Use camelCase for CSS properties\r\n                            fontSize: '32px',         // font-size becomes fontSize\r\n                            textAlign: 'center',      // text-align becomes textAlign\r\n                            fontFamily: 'Segoe UI, sans-serif',  // font-family becomes fontFamily\r\n                            fontWeight: 'lighter',        // Bold text\r\n                            fontStyle: 'normal',       // Italic text\r\n                        }}>\r\n                            Response from Ai Solver\r\n                        </h1>\r\n                        <div>\r\n                            <TypewriterRendererResponse content={responseExample} />\r\n                        </div>\r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',              // Enable Flexbox\r\n        height: '150vh',              // Full viewport height\r\n        justifyContent: 'space-between', // Space between the two sections\r\n        padding: '0px',              // Padding for the container\r\n        borderRadius: '20px',         // Rounded corners\r\n        overflow: 'auto',\r\n        border: '30px solid rgb(28, 38, 48)',\r\n        boxShadow: '0px 0px 10px 10px rgb(28, 38, 48, 0.9)',  /* Optional: Add shadow for better separation */\r\n        width: '93vw',\r\n    },\r\n    left: {\r\n        width: '50%',                 // Left section width\r\n        backgroundColor: '#36454F',   // Light gray background for the left section\r\n        padding: '0vw',\r\n        borderRadius: '0px',         // Rounded corners\r\n        overflow: 'auto',\r\n        border: '3px solid rgb(38, 48, 58)',\r\n        boxShadow: '0px 0px 0px 8px #36454F',  /* Optional: Add shadow for better separation */\r\n        margin: '3px',\r\n    },\r\n    right: {\r\n        width: '50%',                 // Right section width\r\n        backgroundColor: '#3f4043',   // Light gray background for the right section\r\n        padding: '0vw',\r\n        borderRadius: '0px',         // Rounded corners\r\n        textAlign: 'left',            // Left align text in the typewriter\r\n        overflow: 'auto',\r\n        border: '3px solid #2e2f31',\r\n        boxShadow: '0px 0px 0px 3px #3f4043',  /* Optional: Add shadow for better separation */\r\n        margin: '3px',\r\n    },\r\n};\r\nconst globalStyles = {\r\n    body: {\r\n        margin: 0,\r\n        padding: 0,\r\n        boxSizing: 'border-box', // Ensures consistent box model behavior\r\n    },\r\n};\r\n\r\n// Apply these styles globally (e.g., useEffect or directly in CSS):\r\ndocument.body.style.margin = '0';\r\ndocument.body.style.padding = '0';\r\ndocument.body.style.boxSizing = 'border-box';\r\n\r\nexport default TopicSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}