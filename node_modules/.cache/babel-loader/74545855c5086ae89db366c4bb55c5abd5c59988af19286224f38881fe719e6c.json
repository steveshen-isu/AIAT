{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { asechNumber } from '../../plain/number/index.js';\nvar name = 'asech';\nvar dependencies = ['typed', 'config', 'Complex', 'BigNumber'];\nexport var createAsech = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\r\n   * Calculate the hyperbolic arcsecant of a value,\r\n   * defined as `asech(x) = acosh(1/x) = ln(sqrt(1/x^2 - 1) + 1/x)`.\r\n   *\r\n   * To avoid confusion with the matrix hyperbolic arcsecant, this function\r\n   * does not apply to matrices.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.asech(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.asech(0.5)       // returns 1.3169578969248166\r\n   *\r\n   * See also:\r\n   *\r\n   *    acsch, acoth\r\n   *\r\n   * @param {number | BigNumber | Complex} x  Function input\r\n   * @return {number | BigNumber | Complex} Hyperbolic arcsecant of x\r\n   */\n  return typed(name, {\n    number: function number(x) {\n      if (x <= 1 && x >= -1 || config.predictable) {\n        var xInv = 1 / x;\n        if (xInv > 0 || config.predictable) {\n          return asechNumber(x);\n        }\n        var ret = Math.sqrt(xInv * xInv - 1);\n        return new Complex(Math.log(ret - xInv), Math.PI);\n      }\n      return new Complex(x, 0).asech();\n    },\n    Complex: function Complex(x) {\n      return x.asech();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).acosh();\n    }\n  });\n});","map":{"version":3,"names":["factory","asechNumber","name","dependencies","createAsech","_ref","typed","config","Complex","BigNumber","_BigNumber","number","x","predictable","xInv","ret","Math","sqrt","log","PI","asech","div","acosh"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/function/trigonometry/asech.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { asechNumber } from '../../plain/number/index.js';\r\nvar name = 'asech';\r\nvar dependencies = ['typed', 'config', 'Complex', 'BigNumber'];\r\nexport var createAsech = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    config,\r\n    Complex,\r\n    BigNumber: _BigNumber\r\n  } = _ref;\r\n  /**\r\n   * Calculate the hyperbolic arcsecant of a value,\r\n   * defined as `asech(x) = acosh(1/x) = ln(sqrt(1/x^2 - 1) + 1/x)`.\r\n   *\r\n   * To avoid confusion with the matrix hyperbolic arcsecant, this function\r\n   * does not apply to matrices.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.asech(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.asech(0.5)       // returns 1.3169578969248166\r\n   *\r\n   * See also:\r\n   *\r\n   *    acsch, acoth\r\n   *\r\n   * @param {number | BigNumber | Complex} x  Function input\r\n   * @return {number | BigNumber | Complex} Hyperbolic arcsecant of x\r\n   */\r\n  return typed(name, {\r\n    number: function number(x) {\r\n      if (x <= 1 && x >= -1 || config.predictable) {\r\n        var xInv = 1 / x;\r\n        if (xInv > 0 || config.predictable) {\r\n          return asechNumber(x);\r\n        }\r\n        var ret = Math.sqrt(xInv * xInv - 1);\r\n        return new Complex(Math.log(ret - xInv), Math.PI);\r\n      }\r\n      return new Complex(x, 0).asech();\r\n    },\r\n    Complex: function Complex(x) {\r\n      return x.asech();\r\n    },\r\n    BigNumber: function BigNumber(x) {\r\n      return new _BigNumber(1).div(x).acosh();\r\n    }\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,IAAIC,IAAI,GAAG,OAAO;AAClB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC;AAC9D,OAAO,IAAIC,WAAW,GAAG,eAAeJ,OAAO,CAACE,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EAC1E,IAAI;IACFC,KAAK;IACLC,MAAM;IACNC,OAAO;IACPC,SAAS,EAAEC;EACb,CAAC,GAAGL,IAAI;EACR;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,KAAK,CAACJ,IAAI,EAAE;IACjBS,MAAM,EAAE,SAASA,MAAMA,CAACC,CAAC,EAAE;MACzB,IAAIA,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAAC,CAAC,IAAIL,MAAM,CAACM,WAAW,EAAE;QAC3C,IAAIC,IAAI,GAAG,CAAC,GAAGF,CAAC;QAChB,IAAIE,IAAI,GAAG,CAAC,IAAIP,MAAM,CAACM,WAAW,EAAE;UAClC,OAAOZ,WAAW,CAACW,CAAC,CAAC;QACvB;QACA,IAAIG,GAAG,GAAGC,IAAI,CAACC,IAAI,CAACH,IAAI,GAAGA,IAAI,GAAG,CAAC,CAAC;QACpC,OAAO,IAAIN,OAAO,CAACQ,IAAI,CAACE,GAAG,CAACH,GAAG,GAAGD,IAAI,CAAC,EAAEE,IAAI,CAACG,EAAE,CAAC;MACnD;MACA,OAAO,IAAIX,OAAO,CAACI,CAAC,EAAE,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC;IAClC,CAAC;IACDZ,OAAO,EAAE,SAASA,OAAOA,CAACI,CAAC,EAAE;MAC3B,OAAOA,CAAC,CAACQ,KAAK,CAAC,CAAC;IAClB,CAAC;IACDX,SAAS,EAAE,SAASA,SAASA,CAACG,CAAC,EAAE;MAC/B,OAAO,IAAIF,UAAU,CAAC,CAAC,CAAC,CAACW,GAAG,CAACT,CAAC,CAAC,CAACU,KAAK,CAAC,CAAC;IACzC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}