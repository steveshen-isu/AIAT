{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\ui\\\\button.js\";\nimport React from 'react';\nimport clsx from 'clsx';\n\n// Define variants and sizes for the button\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variants = {\n  default: 'bg-blue-600 text-white hover:bg-blue-700',\n  outline: 'border border-blue-600 text-blue-600 hover:bg-blue-100',\n  ghost: 'bg-transparent text-blue-600 hover:bg-blue-50',\n  danger: 'bg-red-600 text-white hover:bg-red-700'\n};\nconst sizes = {\n  sm: 'px-3 py-1 text-sm',\n  md: 'px-4 py-2 text-base',\n  lg: 'px-5 py-3 text-lg'\n};\n\n/**\r\n * Button Component\r\n * @param {Object} props\r\n * @param {string} props.variant - Button style variant (default, outline, ghost, danger)\r\n * @param {string} props.size - Button size (sm, md, lg)\r\n * @param {boolean} props.disabled - Whether the button is disabled\r\n * @param {React.ReactNode} props.children - Button content\r\n * @param {function} props.onClick - Click event handler\r\n */\nconst Button = ({\n  variant = 'default',\n  size = 'md',\n  disabled = false,\n  children,\n  onClick,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: clsx('rounded-md font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2', variants[variant], sizes[size], {\n      'opacity-50 cursor-not-allowed': disabled\n    }),\n    disabled: disabled,\n    onClick: onClick,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","clsx","jsxDEV","_jsxDEV","variants","default","outline","ghost","danger","sizes","sm","md","lg","Button","variant","size","disabled","children","onClick","props","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/ui/button.js"],"sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\n// Define variants and sizes for the button\r\nconst variants = {\r\n  default: 'bg-blue-600 text-white hover:bg-blue-700',\r\n  outline: 'border border-blue-600 text-blue-600 hover:bg-blue-100',\r\n  ghost: 'bg-transparent text-blue-600 hover:bg-blue-50',\r\n  danger: 'bg-red-600 text-white hover:bg-red-700',\r\n};\r\n\r\nconst sizes = {\r\n  sm: 'px-3 py-1 text-sm',\r\n  md: 'px-4 py-2 text-base',\r\n  lg: 'px-5 py-3 text-lg',\r\n};\r\n\r\n/**\r\n * Button Component\r\n * @param {Object} props\r\n * @param {string} props.variant - Button style variant (default, outline, ghost, danger)\r\n * @param {string} props.size - Button size (sm, md, lg)\r\n * @param {boolean} props.disabled - Whether the button is disabled\r\n * @param {React.ReactNode} props.children - Button content\r\n * @param {function} props.onClick - Click event handler\r\n */\r\nconst Button = ({\r\n  variant = 'default',\r\n  size = 'md',\r\n  disabled = false,\r\n  children,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <button\r\n      className={clsx(\r\n        'rounded-md font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2',\r\n        variants[variant],\r\n        sizes[size],\r\n        { 'opacity-50 cursor-not-allowed': disabled }\r\n      )}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG;EACfC,OAAO,EAAE,0CAA0C;EACnDC,OAAO,EAAE,wDAAwD;EACjEC,KAAK,EAAE,+CAA+C;EACtDC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,KAAK,GAAG;EACZC,EAAE,EAAE,mBAAmB;EACvBC,EAAE,EAAE,qBAAqB;EACzBC,EAAE,EAAE;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGA,CAAC;EACdC,OAAO,GAAG,SAAS;EACnBC,IAAI,GAAG,IAAI;EACXC,QAAQ,GAAG,KAAK;EAChBC,QAAQ;EACRC,OAAO;EACP,GAAGC;AACL,CAAC,KAAK;EACJ,oBACEhB,OAAA;IACEiB,SAAS,EAAEnB,IAAI,CACb,+HAA+H,EAC/HG,QAAQ,CAACU,OAAO,CAAC,EACjBL,KAAK,CAACM,IAAI,CAAC,EACX;MAAE,+BAA+B,EAAEC;IAAS,CAC9C,CAAE;IACFA,QAAQ,EAAEA,QAAS;IACnBE,OAAO,EAAEA,OAAQ;IAAA,GACbC,KAAK;IAAAF,QAAA,EAERA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACC,EAAA,GAvBIZ,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}