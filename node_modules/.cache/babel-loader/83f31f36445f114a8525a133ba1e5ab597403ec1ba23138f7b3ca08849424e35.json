{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { sinhNumber } from '../../plain/number/index.js';\nvar name = 'sinh';\nvar dependencies = ['typed'];\nexport var createSinh = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\r\n   * Calculate the hyperbolic sine of a value,\r\n   * defined as `sinh(x) = 1/2 * (exp(x) - exp(-x))`.\r\n   *\r\n   * To avoid confusion with the matrix hyperbolic sine, this function does\r\n   * not apply to matrices.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.sinh(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.sinh(0.5)       // returns number 0.5210953054937474\r\n   *\r\n   * See also:\r\n   *\r\n   *    cosh, tanh\r\n   *\r\n   * @param {number | BigNumber | Complex} x  Function input\r\n   * @return {number | BigNumber | Complex} Hyperbolic sine of x\r\n   */\n  return typed(name, {\n    number: sinhNumber,\n    'Complex | BigNumber': x => x.sinh()\n  });\n});","map":{"version":3,"names":["factory","sinhNumber","name","dependencies","createSinh","_ref","typed","number","x","sinh"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/function/trigonometry/sinh.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { sinhNumber } from '../../plain/number/index.js';\r\nvar name = 'sinh';\r\nvar dependencies = ['typed'];\r\nexport var createSinh = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n  /**\r\n   * Calculate the hyperbolic sine of a value,\r\n   * defined as `sinh(x) = 1/2 * (exp(x) - exp(-x))`.\r\n   *\r\n   * To avoid confusion with the matrix hyperbolic sine, this function does\r\n   * not apply to matrices.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.sinh(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.sinh(0.5)       // returns number 0.5210953054937474\r\n   *\r\n   * See also:\r\n   *\r\n   *    cosh, tanh\r\n   *\r\n   * @param {number | BigNumber | Complex} x  Function input\r\n   * @return {number | BigNumber | Complex} Hyperbolic sine of x\r\n   */\r\n  return typed(name, {\r\n    number: sinhNumber,\r\n    'Complex | BigNumber': x => x.sinh()\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,IAAIC,IAAI,GAAG,MAAM;AACjB,IAAIC,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,OAAO,IAAIC,UAAU,GAAG,eAAeJ,OAAO,CAACE,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACzE,IAAI;IACFC;EACF,CAAC,GAAGD,IAAI;EACR;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,KAAK,CAACJ,IAAI,EAAE;IACjBK,MAAM,EAAEN,UAAU;IAClB,qBAAqB,EAAEO,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;EACrC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}