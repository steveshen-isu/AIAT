{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createStd } from '../../function/statistics/std.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'std';\nvar dependencies = ['typed', 'map', 'sqrt', 'variance'];\n\n/**\r\n * Attach a transform function to math.std\r\n * Adds a property transform containing the transform function.\r\n *\r\n * This transform changed the `dim` parameter of function std\r\n * from one-based to zero based\r\n */\nexport var createStdTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    map,\n    sqrt,\n    variance\n  } = _ref;\n  var std = createStd({\n    typed,\n    map,\n    sqrt,\n    variance\n  });\n  return typed('std', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n      try {\n        return std.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","createStd","errorTransform","lastDimToZeroBase","name","dependencies","createStdTransform","_ref","typed","map","sqrt","variance","std","any","args","apply","err","isTransformFunction"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/expression/transform/std.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { createStd } from '../../function/statistics/std.js';\r\nimport { errorTransform } from './utils/errorTransform.js';\r\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\r\nvar name = 'std';\r\nvar dependencies = ['typed', 'map', 'sqrt', 'variance'];\r\n\r\n/**\r\n * Attach a transform function to math.std\r\n * Adds a property transform containing the transform function.\r\n *\r\n * This transform changed the `dim` parameter of function std\r\n * from one-based to zero based\r\n */\r\nexport var createStdTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    map,\r\n    sqrt,\r\n    variance\r\n  } = _ref;\r\n  var std = createStd({\r\n    typed,\r\n    map,\r\n    sqrt,\r\n    variance\r\n  });\r\n  return typed('std', {\r\n    '...any': function any(args) {\r\n      args = lastDimToZeroBase(args);\r\n      try {\r\n        return std.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,SAAS,QAAQ,kCAAkC;AAC5D,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,IAAIC,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACjF,IAAI;IACFC,KAAK;IACLC,GAAG;IACHC,IAAI;IACJC;EACF,CAAC,GAAGJ,IAAI;EACR,IAAIK,GAAG,GAAGX,SAAS,CAAC;IAClBO,KAAK;IACLC,GAAG;IACHC,IAAI;IACJC;EACF,CAAC,CAAC;EACF,OAAOH,KAAK,CAAC,KAAK,EAAE;IAClB,QAAQ,EAAE,SAASK,GAAGA,CAACC,IAAI,EAAE;MAC3BA,IAAI,GAAGX,iBAAiB,CAACW,IAAI,CAAC;MAC9B,IAAI;QACF,OAAOF,GAAG,CAACG,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZ,MAAMd,cAAc,CAACc,GAAG,CAAC;MAC3B;IACF;EACF,CAAC,CAAC;AACJ,CAAC,EAAE;EACDC,mBAAmB,EAAE;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}