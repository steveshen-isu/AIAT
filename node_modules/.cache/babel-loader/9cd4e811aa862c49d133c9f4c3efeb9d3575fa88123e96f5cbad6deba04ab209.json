{"ast":null,"code":"import { flatten } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'setUnion';\nvar dependencies = ['typed', 'size', 'concat', 'subset', 'setIntersect', 'setSymDifference', 'Index'];\nexport var createSetUnion = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    concat,\n    subset,\n    setIntersect,\n    setSymDifference,\n    Index\n  } = _ref;\n  /**\r\n   * Create the union of two (multi)sets.\r\n   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.setUnion(set1, set2)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.setUnion([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2, 3, 4, 5, 6]\r\n   *    math.setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2, 3, 4, 5, 6]\r\n   *\r\n   * See also:\r\n   *\r\n   *    setIntersect, setDifference\r\n   *\r\n   * @param {Array | Matrix}    a1  A (multi)set\r\n   * @param {Array | Matrix}    a2  A (multi)set\r\n   * @return {Array | Matrix}    The union of two (multi)sets\r\n   */\n  return typed(name, {\n    'Array | Matrix, Array | Matrix': function Array__Matrix_Array__Matrix(a1, a2) {\n      if (subset(size(a1), new Index(0)) === 0) {\n        // if any of them is empty, return the other one\n        return flatten(a2);\n      } else if (subset(size(a2), new Index(0)) === 0) {\n        return flatten(a1);\n      }\n      var b1 = flatten(a1);\n      var b2 = flatten(a2);\n      return concat(setSymDifference(b1, b2), setIntersect(b1, b2));\n    }\n  });\n});","map":{"version":3,"names":["flatten","factory","name","dependencies","createSetUnion","_ref","typed","size","concat","subset","setIntersect","setSymDifference","Index","Array__Matrix_Array__Matrix","a1","a2","b1","b2"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/function/set/setUnion.js"],"sourcesContent":["import { flatten } from '../../utils/array.js';\r\nimport { factory } from '../../utils/factory.js';\r\nvar name = 'setUnion';\r\nvar dependencies = ['typed', 'size', 'concat', 'subset', 'setIntersect', 'setSymDifference', 'Index'];\r\nexport var createSetUnion = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    size,\r\n    concat,\r\n    subset,\r\n    setIntersect,\r\n    setSymDifference,\r\n    Index\r\n  } = _ref;\r\n  /**\r\n   * Create the union of two (multi)sets.\r\n   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.setUnion(set1, set2)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.setUnion([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2, 3, 4, 5, 6]\r\n   *    math.setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2, 3, 4, 5, 6]\r\n   *\r\n   * See also:\r\n   *\r\n   *    setIntersect, setDifference\r\n   *\r\n   * @param {Array | Matrix}    a1  A (multi)set\r\n   * @param {Array | Matrix}    a2  A (multi)set\r\n   * @return {Array | Matrix}    The union of two (multi)sets\r\n   */\r\n  return typed(name, {\r\n    'Array | Matrix, Array | Matrix': function Array__Matrix_Array__Matrix(a1, a2) {\r\n      if (subset(size(a1), new Index(0)) === 0) {\r\n        // if any of them is empty, return the other one\r\n        return flatten(a2);\r\n      } else if (subset(size(a2), new Index(0)) === 0) {\r\n        return flatten(a1);\r\n      }\r\n      var b1 = flatten(a1);\r\n      var b2 = flatten(a2);\r\n      return concat(setSymDifference(b1, b2), setIntersect(b1, b2));\r\n    }\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,IAAIC,IAAI,GAAG,UAAU;AACrB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,kBAAkB,EAAE,OAAO,CAAC;AACrG,OAAO,IAAIC,cAAc,GAAG,eAAeH,OAAO,CAACC,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EAC7E,IAAI;IACFC,KAAK;IACLC,IAAI;IACJC,MAAM;IACNC,MAAM;IACNC,YAAY;IACZC,gBAAgB;IAChBC;EACF,CAAC,GAAGP,IAAI;EACR;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,KAAK,CAACJ,IAAI,EAAE;IACjB,gCAAgC,EAAE,SAASW,2BAA2BA,CAACC,EAAE,EAAEC,EAAE,EAAE;MAC7E,IAAIN,MAAM,CAACF,IAAI,CAACO,EAAE,CAAC,EAAE,IAAIF,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QACxC;QACA,OAAOZ,OAAO,CAACe,EAAE,CAAC;MACpB,CAAC,MAAM,IAAIN,MAAM,CAACF,IAAI,CAACQ,EAAE,CAAC,EAAE,IAAIH,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC/C,OAAOZ,OAAO,CAACc,EAAE,CAAC;MACpB;MACA,IAAIE,EAAE,GAAGhB,OAAO,CAACc,EAAE,CAAC;MACpB,IAAIG,EAAE,GAAGjB,OAAO,CAACe,EAAE,CAAC;MACpB,OAAOP,MAAM,CAACG,gBAAgB,CAACK,EAAE,EAAEC,EAAE,CAAC,EAAEP,YAAY,CAACM,EAAE,EAAEC,EAAE,CAAC,CAAC;IAC/D;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}