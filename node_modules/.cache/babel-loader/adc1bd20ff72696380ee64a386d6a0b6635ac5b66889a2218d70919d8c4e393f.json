{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Typewriter from './Typewriter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentUrl = window.location.href;\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\nfunction ChatBox() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [responses, setResponses] = useState([]);\n  const [pastedImage, setPastedImage] = useState(null);\n  const [loading, setLoading] = useState(false); // Loading state for API calls\n\n  const sendMessage = async () => {\n    if (!message && !pastedImage) return;\n    setLoading(true); // Show loading indicator\n    try {\n      const requestBody = {\n        message,\n        image: pastedImage,\n        history: responses.map(r => ({\n          role: 'assistant',\n          content: r.response\n        }))\n      };\n      const response = await fetch('http://' + ipAddress + ':200/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      setResponses([...responses, {\n        query: message,\n        response: data.response,\n        image: data.image\n      }]);\n      setMessage('');\n      setPastedImage(null); // Clear the pasted image after submission\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n  const handlePaste = event => {\n    const items = event.clipboardData.items;\n    for (const item of items) {\n      if (item.type.startsWith('image/')) {\n        const file = item.getAsFile();\n        const reader = new FileReader();\n        reader.onload = e => {\n          setPastedImage(e.target.result); // Base64 encoded image\n        };\n        reader.readAsDataURL(file);\n        break; // Stop after the first image\n      }\n    }\n  };\n  const removeImage = () => {\n    setPastedImage(null); // Clear the pasted image\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Typewriter, {\n        text: \"Talk to me about your question or copy your image including your question\",\n        speed: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"custom-textarea\",\n      id: \"question\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onPaste: handlePaste,\n      rows: \"4\",\n      cols: \"50\",\n      placeholder: \"Type your message or paste an image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), pastedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          text: \"Pasted Image\",\n          speed: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pastedImage,\n        alt: \"Pasted content\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeImage,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Remove Pasted Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: loading,\n      style: {\n        marginTop: '10px'\n      },\n      children: loading ? 'Sending...' : 'Send'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responses.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 16\n          }, this), \" \", item.query]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"GPT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 16\n          }, this), \" \", item.response]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), item.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: \"Generated Visual\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"ftp0sRsK8+NLlqHVUSzIplEBqZE=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","Typewriter","jsxDEV","_jsxDEV","currentUrl","window","location","href","ipAddress","split","ChatBox","_s","message","setMessage","responses","setResponses","pastedImage","setPastedImage","loading","setLoading","sendMessage","requestBody","image","history","map","r","role","content","response","fetch","method","headers","body","JSON","stringify","data","json","query","error","console","handlePaste","event","items","clipboardData","item","type","startsWith","file","getAsFile","reader","FileReader","onload","e","target","result","readAsDataURL","removeImage","children","text","speed","fileName","_jsxFileName","lineNumber","columnNumber","className","id","value","onChange","onPaste","rows","cols","placeholder","src","alt","style","maxWidth","height","onClick","marginTop","disabled","index","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Typewriter from './Typewriter';\r\nconst currentUrl = window.location.href;\r\n\r\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\r\n\r\nfunction ChatBox() {\r\n  const [message, setMessage] = useState('');\r\n  const [responses, setResponses] = useState([]);\r\n  const [pastedImage, setPastedImage] = useState(null);\r\n  const [loading, setLoading] = useState(false); // Loading state for API calls\r\n\r\n  const sendMessage = async () => {\r\n    if (!message && !pastedImage) return;\r\n\r\n    setLoading(true); // Show loading indicator\r\n    try {\r\n      const requestBody = {\r\n        message,\r\n        image: pastedImage,\r\n        history: responses.map((r) => ({ role: 'assistant', content: r.response })),\r\n      };\r\n\r\n      const response = await fetch('http://' + ipAddress + ':200/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResponses([\r\n        ...responses,\r\n        { query: message, response: data.response, image: data.image },\r\n      ]);\r\n      setMessage('');\r\n      setPastedImage(null); // Clear the pasted image after submission\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false); // Hide loading indicator\r\n    }\r\n  };\r\n\r\n  const handlePaste = (event) => {\r\n    const items = event.clipboardData.items;\r\n    for (const item of items) {\r\n      if (item.type.startsWith('image/')) {\r\n        const file = item.getAsFile();\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n          setPastedImage(e.target.result); // Base64 encoded image\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n        break; // Stop after the first image\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setPastedImage(null); // Clear the pasted image\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <Typewriter text=\"Talk to me about your question or copy your image including your question\" speed={40} />\r\n      </h1>\r\n\r\n      <textarea\r\n        className=\"custom-textarea\"\r\n        id=\"question\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onPaste={handlePaste}\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        placeholder=\"Type your message or paste an image...\"\r\n      />\r\n\r\n      {pastedImage && (\r\n        <div>\r\n      <h1>\r\n        <Typewriter text=\"Pasted Image\" speed={30} />\r\n      </h1>\r\n          <img src={pastedImage} alt=\"Pasted content\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n          <button onClick={removeImage} style={{ marginTop: '10px' }}>Remove Pasted Image</button>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={sendMessage} disabled={loading} style={{ marginTop: '10px' }}>\r\n        {loading ? 'Sending...' : 'Send'}\r\n      </button>\r\n\r\n      <div>\r\n        {responses.map((item, index) => (\r\n          <div key={index} style={{ marginBottom: '20px' }}>\r\n            <p><b>You:</b> {item.query}</p>\r\n            <p><b>GPT:</b> {item.response}</p>\r\n            {item.image && (\r\n              <img\r\n                src={item.image}\r\n                alt=\"Generated Visual\"\r\n                style={{ maxWidth: '100%', height: 'auto' }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}