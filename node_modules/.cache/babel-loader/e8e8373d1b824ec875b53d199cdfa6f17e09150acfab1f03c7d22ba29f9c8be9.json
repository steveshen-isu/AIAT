{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Typewriter from './Typewriter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(false); // Loading state for API calls\n\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n    setLoading(true); // Show loading indicator\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message,\n          history: responses.map(r => ({\n            role: 'assistant',\n            content: r.response\n          }))\n        })\n      });\n      const data = await response.json();\n      setResponses([...responses, {\n        query: message,\n        response: data.response,\n        image: data.image\n      }]);\n      setMessage('');\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Typewriter, {\n        text: \"Talk to me about your question or copy your image including your question\",\n        speed: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"custom-textarea\",\n      id: \"question\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      rows: \"4\",\n      cols: \"50\",\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: loading,\n      children: loading ? 'Sending...' : 'Send'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responses.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }, this), \" \", item.query]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"GPT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 16\n          }, this), \" \", item.response]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), item.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: \"Generated Visual\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 28\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"Nz+5kPN0nhn7ZE41Q2HkTq7O1b0=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","Typewriter","jsxDEV","_jsxDEV","ChatBox","_s","message","setMessage","responses","setResponses","loading","setLoading","sendMessage","trim","response","fetch","method","headers","body","JSON","stringify","history","map","r","role","content","data","json","query","image","error","console","children","text","speed","fileName","_jsxFileName","lineNumber","columnNumber","className","id","value","onChange","e","target","rows","cols","placeholder","onClick","disabled","item","index","style","marginBottom","src","alt","maxWidth","height","_c","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Typewriter from './Typewriter';\r\n\r\nfunction ChatBox() {\r\n  const [message, setMessage] = useState('');\r\n  const [responses, setResponses] = useState([]);\r\n  const [loading, setLoading] = useState(false); // Loading state for API calls\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim()) return;\r\n    \r\n    setLoading(true); // Show loading indicator\r\n    try {\r\n      const response = await fetch('/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message, history: responses.map(r => ({ role: 'assistant', content: r.response })) }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      setResponses([...responses, { query: message, response: data.response, image: data.image }]);\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false); // Hide loading indicator\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <Typewriter text=\"Talk to me about your question or copy your image including your question\" speed={40} />\r\n      </h1>\r\n\r\n      <textarea\r\n        className=\"custom-textarea\"\r\n        id=\"question\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        placeholder=\"Type your message...\"\r\n      />\r\n      <button onClick={sendMessage} disabled={loading}>\r\n        {loading ? 'Sending...' : 'Send'}\r\n      </button>\r\n\r\n      <div>\r\n        {responses.map((item, index) => (\r\n          <div key={index} style={{ marginBottom: '20px' }}>\r\n            <p><b>You:</b> {item.query}</p>\r\n            <p><b>GPT:</b> {item.response}</p>\r\n            {item.image && <img src={item.image} alt=\"Generated Visual\" style={{ maxWidth: '100%', height: 'auto' }} />}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}