{"ast":null,"code":"/**\r\n * THIS FILE IS AUTO-GENERATED\r\n * DON'T MAKE CHANGES HERE\r\n */\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\nimport { combinationsDependencies } from './dependenciesCombinations.generated.js';\nimport { isIntegerDependencies } from './dependenciesIsInteger.generated.js';\nimport { isNegativeDependencies } from './dependenciesIsNegative.generated.js';\nimport { isPositiveDependencies } from './dependenciesIsPositive.generated.js';\nimport { largerDependencies } from './dependenciesLarger.generated.js';\nimport { typedDependencies } from './dependenciesTyped.generated.js';\nimport { createComposition } from '../../factoriesAny.js';\nexport var compositionDependencies = {\n  addScalarDependencies,\n  combinationsDependencies,\n  isIntegerDependencies,\n  isNegativeDependencies,\n  isPositiveDependencies,\n  largerDependencies,\n  typedDependencies,\n  createComposition\n};","map":{"version":3,"names":["addScalarDependencies","combinationsDependencies","isIntegerDependencies","isNegativeDependencies","isPositiveDependencies","largerDependencies","typedDependencies","createComposition","compositionDependencies"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/entry/dependenciesAny/dependenciesComposition.generated.js"],"sourcesContent":["/**\r\n * THIS FILE IS AUTO-GENERATED\r\n * DON'T MAKE CHANGES HERE\r\n */\r\nimport { addScalarDependencies } from './dependenciesAddScalar.generated.js';\r\nimport { combinationsDependencies } from './dependenciesCombinations.generated.js';\r\nimport { isIntegerDependencies } from './dependenciesIsInteger.generated.js';\r\nimport { isNegativeDependencies } from './dependenciesIsNegative.generated.js';\r\nimport { isPositiveDependencies } from './dependenciesIsPositive.generated.js';\r\nimport { largerDependencies } from './dependenciesLarger.generated.js';\r\nimport { typedDependencies } from './dependenciesTyped.generated.js';\r\nimport { createComposition } from '../../factoriesAny.js';\r\nexport var compositionDependencies = {\r\n  addScalarDependencies,\r\n  combinationsDependencies,\r\n  isIntegerDependencies,\r\n  isNegativeDependencies,\r\n  isPositiveDependencies,\r\n  largerDependencies,\r\n  typedDependencies,\r\n  createComposition\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,qBAAqB,QAAQ,sCAAsC;AAC5E,SAASC,wBAAwB,QAAQ,yCAAyC;AAClF,SAASC,qBAAqB,QAAQ,sCAAsC;AAC5E,SAASC,sBAAsB,QAAQ,uCAAuC;AAC9E,SAASC,sBAAsB,QAAQ,uCAAuC;AAC9E,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,OAAO,IAAIC,uBAAuB,GAAG;EACnCR,qBAAqB;EACrBC,wBAAwB;EACxBC,qBAAqB;EACrBC,sBAAsB;EACtBC,sBAAsB;EACtBC,kBAAkB;EAClBC,iBAAiB;EACjBC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}