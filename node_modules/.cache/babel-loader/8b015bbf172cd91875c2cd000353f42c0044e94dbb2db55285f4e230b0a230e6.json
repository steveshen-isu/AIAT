{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, memo } from 'react';\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\nimport katex from 'katex';\nimport Typewriter from './Typewriter';\nimport TypewriterResponse from './TypeWriterResponse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentUrl = window.location.href;\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\nfunction ChatBox() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [responses, setResponses] = useState([]);\n  const [pastedImage, setPastedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!message && !pastedImage) return;\n    setLoading(true);\n    try {\n      const fullConversation = [...responses.map(item => [{\n        role: 'user',\n        content: item.query\n      }, {\n        role: 'assistant',\n        content: item.response\n      }]).flat(), {\n        role: 'user',\n        content: message\n      }];\n      if (pastedImage) {\n        fullConversation.push({\n          role: 'user',\n          content: `<img src=\"${pastedImage}\" alt=\"Pasted Image\" class=\"max-w-xs mt-2\" />` // Add image to query as HTML string\n        });\n      }\n      const requestBody = {\n        conversation: fullConversation,\n        image: pastedImage\n      };\n      const response = await fetch('http://' + ipAddress + ':200/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      setResponses(prev => [...prev, {\n        query: message,\n        response: data.response\n      }]);\n      setMessage('');\n      setPastedImage(null);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePaste = event => {\n    const items = event.clipboardData.items;\n    for (const item of items) {\n      if (item.type.startsWith('image/')) {\n        const file = item.getAsFile();\n        const reader = new FileReader();\n        reader.onload = e => {\n          setPastedImage(e.target.result);\n        };\n        reader.readAsDataURL(file);\n        break;\n      }\n    }\n  };\n  const removeImage = () => {\n    setPastedImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-144 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 mb-4\",\n      children: responses.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 w-full max-w-6x1 flex-row-reverse justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-end justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-500 text-white p-2 rounded-lg max-w-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"You:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"prose\",\n                dangerouslySetInnerHTML: {\n                  __html: item.query\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), \"                                \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-4x1 bg-gray-600 p-4 rounded-lg shadow-lg text-right ml-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"GPT:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(TypewriterResponse, {\n                content: item.response\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), item.responseImage && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.responseImage,\n            alt: \"GPT response image\",\n            className: \"max-w-xs mt-2 rounded-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-4 p-4 border-t border-gray-300 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"!custom-textarea p-4 bg-white border border-gray-300 rounded-lg w-full max-w-3x1 resize-none !text-xs placeholder-gray-500\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onPaste: handlePaste,\n        rows: \"6\" // Increasing the rows for a larger box\n        ,\n        placeholder: \"Type your message or paste an image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading,\n        className: \"bg-blue-500 text-white p-3 rounded-full disabled:opacity-50\",\n        children: loading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), pastedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4 mt-4 ml-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-500 text-white p-2 rounded-lg max-w-xs\",\n            children: /*#__PURE__*/_jsxDEV(TypewriterResponse, {\n              content: \"Pasted Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pastedImage,\n            alt: \"Pasted content\",\n            className: \"max-w-xs mt-2 rounded-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPastedImage(null),\n            className: \"bg-red-500 text-white p-2 mt-2 rounded-lg\",\n            children: \"Remove Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatBox, \"ftp0sRsK8+NLlqHVUSzIplEBqZE=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","memo","katex","Typewriter","TypewriterResponse","jsxDEV","_jsxDEV","currentUrl","window","location","href","ipAddress","split","ChatBox","_s","message","setMessage","responses","setResponses","pastedImage","setPastedImage","loading","setLoading","sendMessage","fullConversation","map","item","role","content","query","response","flat","push","requestBody","conversation","image","fetch","method","headers","body","JSON","stringify","data","json","prev","error","console","handlePaste","event","items","clipboardData","type","startsWith","file","getAsFile","reader","FileReader","onload","e","target","result","readAsDataURL","removeImage","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","responseImage","src","alt","value","onChange","onPaste","rows","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/chatbox.js"],"sourcesContent":["import React, { useState, useEffect, memo } from 'react';\r\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\r\nimport katex from 'katex';\r\nimport Typewriter from './Typewriter';\r\nimport TypewriterResponse from './TypeWriterResponse';\r\nconst currentUrl = window.location.href;\r\n\r\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\r\nfunction ChatBox() {\r\n    const [message, setMessage] = useState('');\r\n    const [responses, setResponses] = useState([]);\r\n    const [pastedImage, setPastedImage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const sendMessage = async () => {\r\n        if (!message && !pastedImage) return;\r\n\r\n        setLoading(true);\r\n        try {\r\n            const fullConversation = [\r\n                ...responses.map((item) => [\r\n                    { role: 'user', content: item.query },\r\n                    { role: 'assistant', content: item.response },\r\n                ]).flat(),\r\n                { role: 'user', content: message },\r\n\r\n            ];\r\n            if (pastedImage) {\r\n                fullConversation.push({\r\n                    role: 'user',\r\n                    content: `<img src=\"${pastedImage}\" alt=\"Pasted Image\" class=\"max-w-xs mt-2\" />`, // Add image to query as HTML string\r\n                });\r\n            }\r\n            const requestBody = {\r\n                conversation: fullConversation,\r\n                image: pastedImage,\r\n            };\r\n\r\n            const response = await fetch('http://' + ipAddress + ':200/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n\r\n            const data = await response.json();\r\n            setResponses((prev) => [\r\n                ...prev,\r\n                { query: message, response: data.response },\r\n            ]);\r\n            setMessage('');\r\n            setPastedImage(null);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const handlePaste = (event) => {\r\n        const items = event.clipboardData.items;\r\n        for (const item of items) {\r\n            if (item.type.startsWith('image/')) {\r\n                const file = item.getAsFile();\r\n                const reader = new FileReader();\r\n\r\n                reader.onload = (e) => {\r\n                    setPastedImage(e.target.result);\r\n                };\r\n\r\n                reader.readAsDataURL(file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeImage = () => {\r\n        setPastedImage(null);\r\n    };\r\n    return (\r\n        <div className=\"flex flex-col h-144 bg-gray-100\">\r\n            {/* Chat container */}\r\n            <div className=\"flex-1 overflow-y-auto p-4 mb-4\">\r\n                {/* Displaying conversation */}\r\n                {responses.map((item, index) => (\r\n                    <div key={index} className=\"mb-4 w-full max-w-6x1 flex-row-reverse justify-start\">\r\n                        <div className=\"flex items-start space-x-4\">\r\n                            {/* User message */}\r\n                            <div className=\"flex flex-col items-end justify-end\" >\r\n                                <div className=\"bg-blue-500 text-white p-2 rounded-lg max-w-xs\">\r\n                                <p><b>You:</b></p>\r\n                <div \r\n                    className=\"prose\" \r\n                    dangerouslySetInnerHTML={{ __html: item.query }} \r\n                />                                </div>\r\n\r\n                            </div>\r\n\r\n                            {/* GPT response */}\r\n\r\n                            <div className=\"max-w-4x1 bg-gray-600 p-4 rounded-lg shadow-lg text-right ml-auto\">\r\n\r\n                                <p><b>GPT:</b>\r\n                                    <TypewriterResponse content={item.response} />\r\n                                </p>\r\n                            </div>\r\n                            {item.responseImage && (\r\n                                <img\r\n                                    src={item.responseImage}\r\n                                    alt=\"GPT response image\"\r\n                                    className=\"max-w-xs mt-2 rounded-lg\"\r\n                                />\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n                {/* Display pasted image (if any) */}\r\n\r\n            </div>\r\n\r\n            {/* Message input (always at the bottom) */}\r\n            <div className=\"flex items-center space-x-4 p-4 border-t border-gray-300 bg-white\">\r\n            <textarea\r\n    className=\"!custom-textarea p-4 bg-white border border-gray-300 rounded-lg w-full max-w-3x1 resize-none !text-xs placeholder-gray-500\"\r\n    value={message}\r\n    onChange={(e) => setMessage(e.target.value)}\r\n    onPaste={handlePaste}\r\n    rows=\"6\"  // Increasing the rows for a larger box\r\n    placeholder=\"Type your message or paste an image...\"\r\n />\r\n\r\n                <button\r\n                    onClick={sendMessage}\r\n                    disabled={loading}\r\n                    className=\"bg-blue-500 text-white p-3 rounded-full disabled:opacity-50\"\r\n                >\r\n                    {loading ? 'Sending...' : 'Send'}\r\n                </button>\r\n\r\n                {pastedImage && (\r\n                    <div className=\"flex items-center space-x-4 mt-4 ml-4\">\r\n                        <div className=\"flex flex-col items-end\">\r\n                            <div className=\"bg-blue-500 text-white p-2 rounded-lg max-w-xs\">\r\n                                <TypewriterResponse content=\"Pasted Image:\" />\r\n                            </div>\r\n                            <img\r\n                                src={pastedImage}\r\n                                alt=\"Pasted content\"\r\n                                className=\"max-w-xs mt-2 rounded-lg\"\r\n                            />\r\n                            <button\r\n                                onClick={() => setPastedImage(null)}\r\n                                className=\"bg-red-500 text-white p-2 mt-2 rounded-lg\"\r\n                            >\r\n                                Remove Image\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}