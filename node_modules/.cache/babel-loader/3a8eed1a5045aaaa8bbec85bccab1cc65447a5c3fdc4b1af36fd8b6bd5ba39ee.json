{"ast":null,"code":"// Copyright (c) 2006-2024, Timothy A. Davis, All Rights Reserved.\n// SPDX-License-Identifier: LGPL-2.1+\n// https://github.com/DrTimothyAldenDavis/SuiteSparse/tree/dev/CSparse/Source\nimport { csFlip } from './csFlip.js';\n\n/**\r\n * Flips the value if it is negative of returns the same value otherwise.\r\n *\r\n * @param {Number}  i               The value to flip\r\n */\nexport function csUnflip(i) {\n  // flip the value if it is negative\n  return i < 0 ? csFlip(i) : i;\n}","map":{"version":3,"names":["csFlip","csUnflip","i"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/function/algebra/sparse/csUnflip.js"],"sourcesContent":["// Copyright (c) 2006-2024, Timothy A. Davis, All Rights Reserved.\r\n// SPDX-License-Identifier: LGPL-2.1+\r\n// https://github.com/DrTimothyAldenDavis/SuiteSparse/tree/dev/CSparse/Source\r\nimport { csFlip } from './csFlip.js';\r\n\r\n/**\r\n * Flips the value if it is negative of returns the same value otherwise.\r\n *\r\n * @param {Number}  i               The value to flip\r\n */\r\nexport function csUnflip(i) {\r\n  // flip the value if it is negative\r\n  return i < 0 ? csFlip(i) : i;\r\n}"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,aAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,CAAC,EAAE;EAC1B;EACA,OAAOA,CAAC,GAAG,CAAC,GAAGF,MAAM,CAACE,CAAC,CAAC,GAAGA,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}