{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\TopicSelector.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\nimport katex from 'katex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderLatex(latex) {\n  try {\n    return katex.renderToString(latex, {\n      throwOnError: false,\n      displayMode: true,\n      strict: 'ignore' // Optionally, change strict mode to ignore warnings\n    });\n  } catch (e) {\n    console.error('Error rendering LaTeX:', e);\n    return `<span class=\"error\">Failed to render LaTeX</span>`;\n  }\n}\nfunction Typewriter({\n  text,\n  speed = 50\n}) {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  useEffect(() => {\n    let index = 0;\n    const timer = setInterval(() => {\n      if (index < text.length) {\n        setDisplayedText(prev => prev + text[index]);\n        index++;\n      } else {\n        clearInterval(timer);\n      }\n    }, speed);\n    return () => clearInterval(timer);\n  }, [text, speed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: displayedText\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n}\n_s(Typewriter, \"PLbRMeWiJa2NBtcoy3qeXvmWyJg=\");\n_c = Typewriter;\nfunction escapeBackslashes(str) {\n  return str.replace(/\\\\/g, '\\\\\\\\');\n}\nfunction TopicSelector() {\n  _s2();\n  const [subjects, setSubjects] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [chapters, setChapters] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTextbook, setSelectedTextbook] = useState('');\n  const [selectedChapter, setSelectedChapter] = useState('');\n  const [latexCode, setLatexCode] = useState('');\n  const [userQuestion, setUserQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  console.log('Fetching from URL:', '/api/subjects');\n\n  // Fetch subjects on component mount\n  useEffect(() => {\n    fetch('http://localhost:200/api/subjects').then(response => response.json()).then(data => setSubjects(data)).catch(error => console.error('Error fetching subjects:', error));\n  }, []);\n\n  // Fetch textbooks when a subject is selected\n  useEffect(() => {\n    if (selectedSubject) {\n      fetch(`http://localhost:200/api/textbooks?subjectId=${selectedSubject}`).then(response => response.json()).then(setTextbooks).catch(error => console.error('Error fetching textbooks:', error));\n    } else {\n      setTextbooks([]); // Clear textbooks when no subject is selected\n    }\n  }, [selectedSubject]);\n\n  // Fetch chapters when a textbook is selected\n  useEffect(() => {\n    if (selectedTextbook) {\n      fetch(`http://localhost:200/api/chapters?textbookId=${selectedTextbook}`).then(response => response.json()).then(setChapters).catch(error => console.error('Error fetching chapters:', error));\n    } else {\n      setChapters([]); // Clear chapters when no textbook is selected\n    }\n  }, [selectedTextbook]);\n\n  // Fetch LaTeX code when a chapter is selected\n  useEffect(() => {\n    if (selectedChapter) {\n      fetch(`http://localhost:200/api/latex-code?chapterId=${selectedChapter}`).then(response => response.json()).then(data => setLatexCode(data.latexCode)).catch(error => console.error('Error fetching LaTeX code:', error));\n    }\n  }, [selectedChapter]);\n\n  /* const latexCodetest = `\r\n  \\\\begin{equation}\r\n  x + y = z\r\n  \\\\end{equation}\r\n  \\\\begin{equation}\r\n  x + y = z\r\n  \\\\end{equation}\r\n  `; */\n  const escapedLatexCode = escapeBackslashes(latexCode);\n  console.log('Latex Code on render:', escapedLatexCode);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('http://localhost:200/api/chatgpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: userQuestion,\n          latexCode: escapedLatexCode\n        })\n      });\n      const data = await res.json();\n      setResponse(data.response);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select a Chapter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSubject,\n      onChange: e => setSelectedSubject(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: subject.id,\n        children: subject.name\n      }, subject.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTextbook,\n      onChange: e => setSelectedTextbook(e.target.value),\n      disabled: !selectedSubject,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a textbook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), textbooks.map(textbook => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: textbook.id,\n        children: textbook.name\n      }, textbook.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedChapter,\n      onChange: e => setSelectedChapter(e.target.value),\n      disabled: !selectedTextbook,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: chapter.id,\n        children: chapter.title\n      }, chapter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), latexCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: renderLatex(escapedLatexCode)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ask a Question with LaTeX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          children: \"Your Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"question\",\n          value: userQuestion,\n          onChange: e => setUserQuestion(e.target.value),\n          rows: \"4\",\n          cols: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response from ChatGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typewriter, {\n        text: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s2(TopicSelector, \"KdeWd+8v7GCzQadBY5GgbJ/ECv4=\");\n_c2 = TopicSelector;\nexport default TopicSelector;\nvar _c, _c2;\n$RefreshReg$(_c, \"Typewriter\");\n$RefreshReg$(_c2, \"TopicSelector\");","map":{"version":3,"names":["React","useState","useEffect","katex","jsxDEV","_jsxDEV","renderLatex","latex","renderToString","throwOnError","displayMode","strict","e","console","error","Typewriter","text","speed","_s","displayedText","setDisplayedText","index","timer","setInterval","length","prev","clearInterval","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","escapeBackslashes","str","replace","TopicSelector","_s2","subjects","setSubjects","textbooks","setTextbooks","chapters","setChapters","selectedSubject","setSelectedSubject","selectedTextbook","setSelectedTextbook","selectedChapter","setSelectedChapter","latexCode","setLatexCode","userQuestion","setUserQuestion","response","setResponse","log","fetch","then","json","data","catch","escapedLatexCode","handleSubmit","preventDefault","res","method","headers","body","JSON","stringify","question","children","value","onChange","target","map","subject","id","name","disabled","textbook","chapter","title","onSubmit","htmlFor","rows","cols","type","_c2","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/TopicSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\r\nimport katex from 'katex';\r\n\r\nfunction renderLatex(latex) {\r\n    try {\r\n        return katex.renderToString(latex, {\r\n            throwOnError: false,\r\n            displayMode: true,\r\n            strict: 'ignore',  // Optionally, change strict mode to ignore warnings\r\n        });\r\n    } catch (e) {\r\n        console.error('Error rendering LaTeX:', e);\r\n        return `<span class=\"error\">Failed to render LaTeX</span>`;\r\n    }\r\n}\r\n\r\nfunction Typewriter({ text, speed = 50 }) {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        let index = 0;\r\n        const timer = setInterval(() => {\r\n            if (index < text.length) {\r\n                setDisplayedText(prev => prev + text[index]);\r\n                index++;\r\n            } else {\r\n                clearInterval(timer);\r\n            }\r\n        }, speed);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [text, speed]);\r\n\r\n    return <span dangerouslySetInnerHTML={{ __html: displayedText }} />;\r\n}\r\n\r\nfunction escapeBackslashes(str) {\r\n    return str.replace(/\\\\/g, '\\\\\\\\');\r\n}\r\n\r\n\r\n\r\nfunction TopicSelector() {\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [textbooks, setTextbooks] = useState([]);\r\n    const [chapters, setChapters] = useState([]);\r\n    const [selectedSubject, setSelectedSubject] = useState('');\r\n    const [selectedTextbook, setSelectedTextbook] = useState('');\r\n    const [selectedChapter, setSelectedChapter] = useState('');\r\n    const [latexCode, setLatexCode] = useState('');\r\n    const [userQuestion, setUserQuestion] = useState('');\r\n    const [response, setResponse] = useState('');\r\n\r\n\r\n\r\n    console.log('Fetching from URL:', '/api/subjects');\r\n    \r\n    \r\n    // Fetch subjects on component mount\r\n    useEffect(() => {\r\n        fetch('http://localhost:200/api/subjects')\r\n            .then(response => response.json())\r\n            .then(data => setSubjects(data))\r\n            .catch(error => console.error('Error fetching subjects:', error));\r\n    }, []);\r\n\r\n    // Fetch textbooks when a subject is selected\r\n    useEffect(() => {\r\n        if (selectedSubject) {\r\n            fetch(`http://localhost:200/api/textbooks?subjectId=${selectedSubject}`)\r\n                .then(response => response.json())\r\n                .then(setTextbooks)\r\n                .catch(error => console.error('Error fetching textbooks:', error));\r\n        } else {\r\n            setTextbooks([]); // Clear textbooks when no subject is selected\r\n        }\r\n    }, [selectedSubject]);\r\n\r\n    // Fetch chapters when a textbook is selected\r\n    useEffect(() => {\r\n        if (selectedTextbook) {\r\n            fetch(`http://localhost:200/api/chapters?textbookId=${selectedTextbook}`)\r\n                .then(response => response.json())\r\n                .then(setChapters)\r\n                .catch(error => console.error('Error fetching chapters:', error));\r\n        } else {\r\n            setChapters([]); // Clear chapters when no textbook is selected\r\n        }\r\n    }, [selectedTextbook]);\r\n\r\n    // Fetch LaTeX code when a chapter is selected\r\n    useEffect(() => {\r\n        if (selectedChapter) {\r\n            fetch(`http://localhost:200/api/latex-code?chapterId=${selectedChapter}`)\r\n                .then(response => response.json())\r\n                .then(data => setLatexCode(data.latexCode))\r\n                .catch(error => console.error('Error fetching LaTeX code:', error));\r\n        }\r\n    }, [selectedChapter]);\r\n    \r\n    /* const latexCodetest = `\r\n\\\\begin{equation}\r\nx + y = z\r\n\\\\end{equation}\r\n\\\\begin{equation}\r\nx + y = z\r\n\\\\end{equation}\r\n`; */\r\n    const escapedLatexCode = escapeBackslashes(latexCode);\r\n\r\n    console.log('Latex Code on render:', escapedLatexCode);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            const res = await fetch('http://localhost:200/api/chatgpt', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    question: userQuestion,\r\n                    latexCode: escapedLatexCode\r\n                })\r\n            });\r\n            const data = await res.json();\r\n            setResponse(data.response);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>Select a Chapter</h1>\r\n            <select value={selectedSubject} onChange={e => setSelectedSubject(e.target.value)}>\r\n                <option value=\"\">Select a subject</option>\r\n                {subjects.map(subject => (\r\n                    <option key={subject.id} value={subject.id}>{subject.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={selectedTextbook} onChange={e => setSelectedTextbook(e.target.value)} disabled={!selectedSubject}>\r\n                <option value=\"\">Select a textbook</option>\r\n                {textbooks.map(textbook => (\r\n                    <option key={textbook.id} value={textbook.id}>{textbook.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={selectedChapter} onChange={e => setSelectedChapter(e.target.value)} disabled={!selectedTextbook}>\r\n                <option value=\"\">Select a chapter</option>\r\n                {chapters.map(chapter => (\r\n                    <option key={chapter.id} value={chapter.id}>{chapter.title}</option>\r\n                ))}\r\n            </select>\r\n            {latexCode && <div dangerouslySetInnerHTML={{__html: renderLatex(escapedLatexCode)}} />}\r\n           {/*  <span dangerouslySetInnerHTML={{ __html: renderLatex(escapedLatexCode) }} />\r\n            <span dangerouslySetInnerHTML={{ __html: renderLatex('\\\\theta') }} /> */}\r\n            \r\n     \r\n        <h1>Ask a Question with LaTeX</h1>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"question\">Your Question:</label>\r\n                <textarea\r\n                    id=\"question\"\r\n                    value={userQuestion}\r\n                    onChange={(e) => setUserQuestion(e.target.value)}\r\n                    rows=\"4\"\r\n                    cols=\"50\"\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    \r\n        {response && (\r\n            <div>\r\n                <h2>Response from ChatGPT</h2>\r\n                <Typewriter text={response} />\r\n            </div>\r\n        )}\r\n    </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TopicSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}