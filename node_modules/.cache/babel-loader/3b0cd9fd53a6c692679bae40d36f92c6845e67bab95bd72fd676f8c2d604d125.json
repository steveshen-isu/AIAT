{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nvar name = 'ResultSet';\nvar dependencies = [];\nexport var createResultSet = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\r\n   * A ResultSet contains a list or results\r\n   * @class ResultSet\r\n   * @param {Array} entries\r\n   * @constructor ResultSet\r\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n    this.entries = entries || [];\n  }\n\n  /**\r\n   * Attach type information\r\n   */\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n\n  /**\r\n   * Returns the array with results hold by this ResultSet\r\n   * @memberof ResultSet\r\n   * @returns {Array} entries\r\n   */\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n\n  /**\r\n   * Returns the stringified results of the ResultSet\r\n   * @memberof ResultSet\r\n   * @returns {string} string\r\n   */\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.map(String).join(', ') + ']';\n  };\n\n  /**\r\n   * Get a JSON representation of the ResultSet\r\n   * @memberof ResultSet\r\n   * @returns {Object} Returns a JSON object structured as:\r\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\r\n   */\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n\n  /**\r\n   * Instantiate a ResultSet from a JSON object\r\n   * @memberof ResultSet\r\n   * @param {Object} json  A JSON object structured as:\r\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\r\n   * @return {ResultSet}\r\n   */\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n  return ResultSet;\n}, {\n  isClass: true\n});","map":{"version":3,"names":["factory","name","dependencies","createResultSet","ResultSet","entries","SyntaxError","prototype","type","isResultSet","valueOf","toString","map","String","join","toJSON","mathjs","fromJSON","json","isClass"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/type/resultset/ResultSet.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nvar name = 'ResultSet';\r\nvar dependencies = [];\r\nexport var createResultSet = /* #__PURE__ */factory(name, dependencies, () => {\r\n  /**\r\n   * A ResultSet contains a list or results\r\n   * @class ResultSet\r\n   * @param {Array} entries\r\n   * @constructor ResultSet\r\n   */\r\n  function ResultSet(entries) {\r\n    if (!(this instanceof ResultSet)) {\r\n      throw new SyntaxError('Constructor must be called with the new operator');\r\n    }\r\n    this.entries = entries || [];\r\n  }\r\n\r\n  /**\r\n   * Attach type information\r\n   */\r\n  ResultSet.prototype.type = 'ResultSet';\r\n  ResultSet.prototype.isResultSet = true;\r\n\r\n  /**\r\n   * Returns the array with results hold by this ResultSet\r\n   * @memberof ResultSet\r\n   * @returns {Array} entries\r\n   */\r\n  ResultSet.prototype.valueOf = function () {\r\n    return this.entries;\r\n  };\r\n\r\n  /**\r\n   * Returns the stringified results of the ResultSet\r\n   * @memberof ResultSet\r\n   * @returns {string} string\r\n   */\r\n  ResultSet.prototype.toString = function () {\r\n    return '[' + this.entries.map(String).join(', ') + ']';\r\n  };\r\n\r\n  /**\r\n   * Get a JSON representation of the ResultSet\r\n   * @memberof ResultSet\r\n   * @returns {Object} Returns a JSON object structured as:\r\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\r\n   */\r\n  ResultSet.prototype.toJSON = function () {\r\n    return {\r\n      mathjs: 'ResultSet',\r\n      entries: this.entries\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Instantiate a ResultSet from a JSON object\r\n   * @memberof ResultSet\r\n   * @param {Object} json  A JSON object structured as:\r\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\r\n   * @return {ResultSet}\r\n   */\r\n  ResultSet.fromJSON = function (json) {\r\n    return new ResultSet(json.entries);\r\n  };\r\n  return ResultSet;\r\n}, {\r\n  isClass: true\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,IAAIC,IAAI,GAAG,WAAW;AACtB,IAAIC,YAAY,GAAG,EAAE;AACrB,OAAO,IAAIC,eAAe,GAAG,eAAeH,OAAO,CAACC,IAAI,EAAEC,YAAY,EAAE,MAAM;EAC5E;AACF;AACA;AACA;AACA;AACA;EACE,SAASE,SAASA,CAACC,OAAO,EAAE;IAC1B,IAAI,EAAE,IAAI,YAAYD,SAAS,CAAC,EAAE;MAChC,MAAM,IAAIE,WAAW,CAAC,kDAAkD,CAAC;IAC3E;IACA,IAAI,CAACD,OAAO,GAAGA,OAAO,IAAI,EAAE;EAC9B;;EAEA;AACF;AACA;EACED,SAAS,CAACG,SAAS,CAACC,IAAI,GAAG,WAAW;EACtCJ,SAAS,CAACG,SAAS,CAACE,WAAW,GAAG,IAAI;;EAEtC;AACF;AACA;AACA;AACA;EACEL,SAAS,CAACG,SAAS,CAACG,OAAO,GAAG,YAAY;IACxC,OAAO,IAAI,CAACL,OAAO;EACrB,CAAC;;EAED;AACF;AACA;AACA;AACA;EACED,SAAS,CAACG,SAAS,CAACI,QAAQ,GAAG,YAAY;IACzC,OAAO,GAAG,GAAG,IAAI,CAACN,OAAO,CAACO,GAAG,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG;EACxD,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACEV,SAAS,CAACG,SAAS,CAACQ,MAAM,GAAG,YAAY;IACvC,OAAO;MACLC,MAAM,EAAE,WAAW;MACnBX,OAAO,EAAE,IAAI,CAACA;IAChB,CAAC;EACH,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACED,SAAS,CAACa,QAAQ,GAAG,UAAUC,IAAI,EAAE;IACnC,OAAO,IAAId,SAAS,CAACc,IAAI,CAACb,OAAO,CAAC;EACpC,CAAC;EACD,OAAOD,SAAS;AAClB,CAAC,EAAE;EACDe,OAAO,EAAE;AACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}