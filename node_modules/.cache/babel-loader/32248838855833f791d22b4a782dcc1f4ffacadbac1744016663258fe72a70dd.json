{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createRange } from '../../function/matrix/range.js';\nvar name = 'range';\nvar dependencies = ['typed', 'config', '?matrix', '?bignumber', 'smaller', 'smallerEq', 'larger', 'largerEq', 'add', 'isPositive'];\nexport var createRangeTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    bignumber,\n    smaller,\n    smallerEq,\n    larger,\n    largerEq,\n    add,\n    isPositive\n  } = _ref;\n  var range = createRange({\n    typed,\n    config,\n    matrix,\n    bignumber,\n    smaller,\n    smallerEq,\n    larger,\n    largerEq,\n    add,\n    isPositive\n  });\n\n  /**\r\n   * Attach a transform function to math.range\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\n  return typed('range', {\n    '...any': function any(args) {\n      var lastIndex = args.length - 1;\n      var last = args[lastIndex];\n      if (typeof last !== 'boolean') {\n        // append a parameter includeEnd=true\n        args.push(true);\n      }\n      return range.apply(null, args);\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","createRange","name","dependencies","createRangeTransform","_ref","typed","config","matrix","bignumber","smaller","smallerEq","larger","largerEq","add","isPositive","range","any","args","lastIndex","length","last","push","apply","isTransformFunction"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/expression/transform/range.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { createRange } from '../../function/matrix/range.js';\r\nvar name = 'range';\r\nvar dependencies = ['typed', 'config', '?matrix', '?bignumber', 'smaller', 'smallerEq', 'larger', 'largerEq', 'add', 'isPositive'];\r\nexport var createRangeTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    config,\r\n    matrix,\r\n    bignumber,\r\n    smaller,\r\n    smallerEq,\r\n    larger,\r\n    largerEq,\r\n    add,\r\n    isPositive\r\n  } = _ref;\r\n  var range = createRange({\r\n    typed,\r\n    config,\r\n    matrix,\r\n    bignumber,\r\n    smaller,\r\n    smallerEq,\r\n    larger,\r\n    largerEq,\r\n    add,\r\n    isPositive\r\n  });\r\n\r\n  /**\r\n   * Attach a transform function to math.range\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\r\n  return typed('range', {\r\n    '...any': function any(args) {\r\n      var lastIndex = args.length - 1;\r\n      var last = args[lastIndex];\r\n      if (typeof last !== 'boolean') {\r\n        // append a parameter includeEnd=true\r\n        args.push(true);\r\n      }\r\n      return range.apply(null, args);\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,IAAIC,IAAI,GAAG,OAAO;AAClB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,CAAC;AAClI,OAAO,IAAIC,oBAAoB,GAAG,eAAeJ,OAAO,CAACE,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACnF,IAAI;IACFC,KAAK;IACLC,MAAM;IACNC,MAAM;IACNC,SAAS;IACTC,OAAO;IACPC,SAAS;IACTC,MAAM;IACNC,QAAQ;IACRC,GAAG;IACHC;EACF,CAAC,GAAGV,IAAI;EACR,IAAIW,KAAK,GAAGf,WAAW,CAAC;IACtBK,KAAK;IACLC,MAAM;IACNC,MAAM;IACNC,SAAS;IACTC,OAAO;IACPC,SAAS;IACTC,MAAM;IACNC,QAAQ;IACRC,GAAG;IACHC;EACF,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;EACE,OAAOT,KAAK,CAAC,OAAO,EAAE;IACpB,QAAQ,EAAE,SAASW,GAAGA,CAACC,IAAI,EAAE;MAC3B,IAAIC,SAAS,GAAGD,IAAI,CAACE,MAAM,GAAG,CAAC;MAC/B,IAAIC,IAAI,GAAGH,IAAI,CAACC,SAAS,CAAC;MAC1B,IAAI,OAAOE,IAAI,KAAK,SAAS,EAAE;QAC7B;QACAH,IAAI,CAACI,IAAI,CAAC,IAAI,CAAC;MACjB;MACA,OAAON,KAAK,CAACO,KAAK,CAAC,IAAI,EAAEL,IAAI,CAAC;IAChC;EACF,CAAC,CAAC;AACJ,CAAC,EAAE;EACDM,mBAAmB,EAAE;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}