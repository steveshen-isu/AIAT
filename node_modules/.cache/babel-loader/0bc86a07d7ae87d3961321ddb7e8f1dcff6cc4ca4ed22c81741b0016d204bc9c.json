{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createMatAlgo12xSfs } from '../../type/matrix/utils/matAlgo12xSfs.js';\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor', 'equalScalar', 'zeros', 'DenseMatrix'];\nexport var createFixNumber = /* #__PURE__ */factory(name, ['typed', 'ceil', 'floor'], _ref => {\n  var {\n    typed,\n    ceil,\n    floor\n  } = _ref;\n  return typed(name, {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number': function number_number(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    }\n  });\n});\nexport var createFix = /* #__PURE__ */factory(name, dependencies, _ref2 => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor,\n    equalScalar,\n    zeros,\n    DenseMatrix\n  } = _ref2;\n  var matAlgo12xSfs = createMatAlgo12xSfs({\n    typed,\n    DenseMatrix\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed\n  });\n  var fixNumber = createFixNumber({\n    typed,\n    ceil,\n    floor\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *    math.fix(x,n)\n   *    math.fix(unit, valuelessUnit)\n   *    math.fix(unit, n, valuelessUnit)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 -2.7i\n   *\n   *    const unit = math.unit('3.241 cm')\n   *    const cm = math.unit('cm')\n   *    const mm = math.unit('mm')\n   *    math.fix(unit, 1, cm)      // returns Unit 3.2 cm\n   *    math.fix(unit, 1, mm)      // returns Unit 32.4 mm\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x  Value to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @param  {Unit} [valuelessUnit]                                        A valueless unit\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Rounded value\n   */\n  return typed('fix', {\n    number: fixNumber.signatures.number,\n    'number, number | BigNumber': fixNumber.signatures['number,number'],\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number': function Complex_number(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    'Complex, BigNumber': function Complex_BigNumber(x, bn) {\n      var n = bn.toNumber();\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumber_number__BigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0n ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function Fraction_number__BigNumber(x, n) {\n      return x.s < 0n ? ceil(x, n) : floor(x, n);\n    },\n    'Unit, number, Unit': typed.referToSelf(self => function (x, n, unit) {\n      var valueless = x.toNumeric(unit);\n      return unit.multiply(self(valueless, n));\n    }),\n    'Unit, BigNumber, Unit': typed.referToSelf(self => (x, n, unit) => self(x, n.toNumber(), unit)),\n    'Array | Matrix, number | BigNumber, Unit': typed.referToSelf(self => (x, n, unit) => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, value => self(value, n, unit), true);\n    }),\n    'Array | Matrix | Unit, Unit': typed.referToSelf(self => (x, unit) => self(x, 0, unit)),\n    'Array | Matrix': typed.referToSelf(self => x => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, self, true);\n    }),\n    'Array | Matrix, number | BigNumber': typed.referToSelf(self => (x, n) => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, i => self(i, n), true);\n    }),\n    'number | Complex | Fraction | BigNumber, Array': typed.referToSelf(self => (x, y) => {\n      // use matrix implementation\n      return matAlgo14xDs(matrix(y), x, self, true).valueOf();\n    }),\n    'number | Complex | Fraction | BigNumber, Matrix': typed.referToSelf(self => (x, y) => {\n      if (equalScalar(x, 0)) return zeros(y.size(), y.storage());\n      if (y.storage() === 'dense') {\n        return matAlgo14xDs(y, x, self, true);\n      }\n      return matAlgo12xSfs(y, x, self, true);\n    })\n  });\n});","map":{"version":3,"names":["factory","deepMap","createMatAlgo12xSfs","createMatAlgo14xDs","name","dependencies","createFixNumber","_ref","typed","ceil","floor","number","x","number_number","n","createFix","_ref2","Complex","_Complex","matrix","equalScalar","zeros","DenseMatrix","matAlgo12xSfs","matAlgo14xDs","fixNumber","signatures","re","Math","im","Complex_number","Complex_BigNumber","bn","toNumber","BigNumber","isNegative","BigNumber_number__BigNumber","Fraction","s","Fraction_number__BigNumber","referToSelf","self","unit","valueless","toNumeric","multiply","value","i","y","valueOf","size","storage"],"sources":["C:/Users/ROG/ai-solver/node_modules/mathjs/lib/esm/function/arithmetic/fix.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createMatAlgo12xSfs } from '../../type/matrix/utils/matAlgo12xSfs.js';\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor', 'equalScalar', 'zeros', 'DenseMatrix'];\nexport var createFixNumber = /* #__PURE__ */factory(name, ['typed', 'ceil', 'floor'], _ref => {\n  var {\n    typed,\n    ceil,\n    floor\n  } = _ref;\n  return typed(name, {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number': function number_number(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    }\n  });\n});\nexport var createFix = /* #__PURE__ */factory(name, dependencies, _ref2 => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor,\n    equalScalar,\n    zeros,\n    DenseMatrix\n  } = _ref2;\n  var matAlgo12xSfs = createMatAlgo12xSfs({\n    typed,\n    DenseMatrix\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed\n  });\n  var fixNumber = createFixNumber({\n    typed,\n    ceil,\n    floor\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *    math.fix(x,n)\n   *    math.fix(unit, valuelessUnit)\n   *    math.fix(unit, n, valuelessUnit)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 -2.7i\n   *\n   *    const unit = math.unit('3.241 cm')\n   *    const cm = math.unit('cm')\n   *    const mm = math.unit('mm')\n   *    math.fix(unit, 1, cm)      // returns Unit 3.2 cm\n   *    math.fix(unit, 1, mm)      // returns Unit 32.4 mm\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x  Value to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @param  {Unit} [valuelessUnit]                                        A valueless unit\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Rounded value\n   */\n  return typed('fix', {\n    number: fixNumber.signatures.number,\n    'number, number | BigNumber': fixNumber.signatures['number,number'],\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number': function Complex_number(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    'Complex, BigNumber': function Complex_BigNumber(x, bn) {\n      var n = bn.toNumber();\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumber_number__BigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0n ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function Fraction_number__BigNumber(x, n) {\n      return x.s < 0n ? ceil(x, n) : floor(x, n);\n    },\n    'Unit, number, Unit': typed.referToSelf(self => function (x, n, unit) {\n      var valueless = x.toNumeric(unit);\n      return unit.multiply(self(valueless, n));\n    }),\n    'Unit, BigNumber, Unit': typed.referToSelf(self => (x, n, unit) => self(x, n.toNumber(), unit)),\n    'Array | Matrix, number | BigNumber, Unit': typed.referToSelf(self => (x, n, unit) => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, value => self(value, n, unit), true);\n    }),\n    'Array | Matrix | Unit, Unit': typed.referToSelf(self => (x, unit) => self(x, 0, unit)),\n    'Array | Matrix': typed.referToSelf(self => x => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, self, true);\n    }),\n    'Array | Matrix, number | BigNumber': typed.referToSelf(self => (x, n) => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, i => self(i, n), true);\n    }),\n    'number | Complex | Fraction | BigNumber, Array': typed.referToSelf(self => (x, y) => {\n      // use matrix implementation\n      return matAlgo14xDs(matrix(y), x, self, true).valueOf();\n    }),\n    'number | Complex | Fraction | BigNumber, Matrix': typed.referToSelf(self => (x, y) => {\n      if (equalScalar(x, 0)) return zeros(y.size(), y.storage());\n      if (y.storage() === 'dense') {\n        return matAlgo14xDs(y, x, self, true);\n      }\n      return matAlgo12xSfs(y, x, self, true);\n    })\n  });\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}