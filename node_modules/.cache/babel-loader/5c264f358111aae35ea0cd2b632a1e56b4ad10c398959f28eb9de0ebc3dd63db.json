{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\chatbox.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Typewriter from './Typewriter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentUrl = window.location.href;\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\nfunction ChatBox() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [message, setMessage] = useState('');\n  const [responses, setResponses] = useState([]);\n  const [pastedImage, setPastedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!message && !pastedImage) return;\n    setLoading(true);\n    try {\n      const requestBody = {\n        message,\n        image: pastedImage\n      };\n      const response = await fetch('http://' + ipAddress + ':200/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      setResponses([...responses, {\n        query: message,\n        response: data.response\n      }]);\n      setMessage('');\n      setPastedImage(null);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const typewriterEffectResponse = async (content, setDisplayContent) => {\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\['); // Replace \\[ with \\( and remove leading spaces\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]'); // Replace \\] with \\) and remove trailing spaces\n    console.log(content);\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[[\\s\\S]*?\\\\\\])|(\\\\begin\\{array\\}[\\s\\S]*?\\\\end\\{array\\})|(\\\\textit\\{.*?\\})|(\\\\textbf\\{.*?\\})/g;\n    const parts = content.split(regex).filter(part => part !== null && part !== undefined && part !== '');\n    let displayContent = '';\n    console.log(parts);\n    for (const part of parts) {\n      if (part.startsWith('\\\\(') || part.startsWith('\\\\[') || part.startsWith('\\\\begin') || part.startsWith('\\\\textit') || part.startsWith('\\\\textbf')) {\n        // Process LaTeX content\n\n        try {\n          const isDisplayMode = part.startsWith('\\\\[');\n          const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, ''); // Strip the delimiters\n          const renderedMath = katex.renderToString(mathContent, {\n            throwOnError: false,\n            displayMode: isDisplayMode\n          });\n\n          // Simulate typing the LaTeX\n          for (let i = 0; i < renderedMath.length; i++) {\n            displayContent += renderedMath[i];\n            setDisplayContent(displayContent);\n            /*                     await delayRandomTime(); \r\n             */\n          }\n        } catch (e) {\n          console.error('Error rendering LaTeX:', e);\n          displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n          setDisplayContent(displayContent);\n        }\n      } else {\n        // Process plain text content\n        for (let i = 0; i < part.length; i++) {\n          displayContent += part[i] === '\\n' ? '<br />' : part[i];\n          setDisplayContent(displayContent);\n          await textdelayRandomTime();\n        }\n      }\n    }\n  };\n  // Function to create random delay\n  /* const delayRandomTime = () => {\r\n      return new Promise(resolve => {\r\n          const randomDelay = Math.floor(Math.random() * 1) + 0; // Delay between 50ms to 250ms\r\n          setTimeout(resolve, randomDelay);\r\n      });\r\n  };  */\n\n  const textdelayRandomTime = () => {\n    return new Promise(resolve => {\n      const randomDelay = Math.floor(Math.random() * 20) + 5; // Delay between 50ms to 250ms\n      setTimeout(resolve, randomDelay);\n    });\n  };\n\n  // Main component to handle the content rendering\n  const TypewriterRenderer = ({\n    content\n  }) => {\n    _s();\n    const [displayContent, setDisplayContent] = useState('');\n    useEffect(() => {\n      // Start the typewriter effect when the component loads\n      typewriterEffect(content, setDisplayContent);\n    }, [content]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left',\n          // Align text to the left\n          width: '42vw',\n          margin: '0 auto',\n          // Center the div horizontally\n          padding: '10px',\n          // Add padding\n          maxWidth: '900px',\n          // Set a max width for the container\n          marginLeft: '1vw',\n          // Add some space from the left\n          border: '0px solid gray',\n          // Gray border\n          backgroundColor: 'black',\n          // Black background\n          color: 'white',\n          // White text color for contrast\n          fontFamily: 'Segoe UI, sans-serif',\n          // Font family\n          fontSize: '18px',\n          // Font size\n          fontWeight: 'lighter',\n          // Bold text\n          fontStyle: 'normal',\n          // Italic text\n          lineHeight: '1.6',\n          // Line height for readability\n          letterSpacing: '1px' // Space between letters\n        },\n        dangerouslySetInnerHTML: {\n          __html: displayContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this);\n  };\n  _s(TypewriterRenderer, \"CWF/jOCr/6dzKRDifOVVHM2M7Es=\");\n  const TypewriterRendererResponse = ({\n    content\n  }) => {\n    _s2();\n    const [displayContent, setDisplayContent] = useState('');\n    useEffect(() => {\n      // Start the typewriter effect when the component loads\n      typewriterEffectResponse(content, setDisplayContent);\n    }, [content]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left',\n          // Align text to the left\n          width: '42vw',\n          margin: '0 auto',\n          // Center the div horizontally\n          padding: '10px',\n          // Add padding\n          maxWidth: '900px',\n          // Set a max width for the container\n          marginLeft: '1vw',\n          // Add some space from the left\n          border: '0px solid gray',\n          // Gray border\n          backgroundColor: 'black',\n          // Black background\n          color: 'white',\n          // White text color for contrast\n          fontFamily: 'Segoe UI, sans-serif',\n          // Font family\n          fontSize: '18px',\n          // Font size\n          fontWeight: 'lighter',\n          // Bold text\n          fontStyle: 'normal',\n          // Italic text\n          lineHeight: '1.6',\n          // Line height for readability\n          letterSpacing: '1px' // Space between letters\n        },\n        dangerouslySetInnerHTML: {\n          __html: displayContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this);\n  };\n  _s2(TypewriterRendererResponse, \"CWF/jOCr/6dzKRDifOVVHM2M7Es=\");\n  const handlePaste = event => {\n    const items = event.clipboardData.items;\n    for (const item of items) {\n      if (item.type.startsWith('image/')) {\n        const file = item.getAsFile();\n        const reader = new FileReader();\n        reader.onload = e => {\n          setPastedImage(e.target.result);\n        };\n        reader.readAsDataURL(file);\n        break;\n      }\n    }\n  };\n  const removeImage = () => {\n    setPastedImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Typewriter, {\n        text: \"Talk to me about your question or copy your image including your question\",\n        speed: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"custom-textarea\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onPaste: handlePaste,\n      rows: \"4\",\n      cols: \"50\",\n      placeholder: \"Type your message or paste an image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), pastedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          text: \"pasted image:\",\n          speed: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pastedImage,\n        alt: \"Pasted content\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeImage,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Remove Pasted Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: loading,\n      style: {\n        marginTop: '10px'\n      },\n      children: loading ? 'Sending...' : 'Send'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responses.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 16\n          }, this), \"                         \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TypewriterRendererResponse, {\n              content: item.query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"GPT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 16\n          }, this), \"                         \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TypewriterRendererResponse, {\n              content: item.response\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s3(ChatBox, \"ftp0sRsK8+NLlqHVUSzIplEBqZE=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","Typewriter","jsxDEV","_jsxDEV","currentUrl","window","location","href","ipAddress","split","ChatBox","_s3","_s","$RefreshSig$","_s2","message","setMessage","responses","setResponses","pastedImage","setPastedImage","loading","setLoading","sendMessage","requestBody","image","response","fetch","method","headers","body","JSON","stringify","data","json","query","error","console","typewriterEffectResponse","content","setDisplayContent","replace","log","regex","parts","filter","part","undefined","displayContent","startsWith","isDisplayMode","mathContent","renderedMath","katex","renderToString","throwOnError","displayMode","i","length","e","textdelayRandomTime","Promise","resolve","randomDelay","Math","floor","random","setTimeout","TypewriterRenderer","useEffect","typewriterEffect","children","style","textAlign","width","margin","padding","maxWidth","marginLeft","border","backgroundColor","color","fontFamily","fontSize","fontWeight","fontStyle","lineHeight","letterSpacing","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","TypewriterRendererResponse","handlePaste","event","items","clipboardData","item","type","file","getAsFile","reader","FileReader","onload","target","result","readAsDataURL","removeImage","text","speed","className","value","onChange","onPaste","rows","cols","placeholder","src","alt","height","onClick","marginTop","disabled","map","index","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Typewriter from './Typewriter';\r\nconst currentUrl = window.location.href;\r\n\r\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\r\nfunction ChatBox() {\r\n  const [message, setMessage] = useState('');\r\n  const [responses, setResponses] = useState([]);\r\n  const [pastedImage, setPastedImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendMessage = async () => {\r\n    if (!message && !pastedImage) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const requestBody = {\r\n        message,\r\n        image: pastedImage,\r\n      };\r\n\r\n      const response = await fetch('http://' + ipAddress + ':200/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResponses([...responses, { query: message, response: data.response }]);\r\n      setMessage('');\r\n      setPastedImage(null);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const typewriterEffectResponse = async (content, setDisplayContent) => {\r\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\[');  // Replace \\[ with \\( and remove leading spaces\r\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]');  // Replace \\] with \\) and remove trailing spaces\r\n    console.log(content);\r\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[[\\s\\S]*?\\\\\\])|(\\\\begin\\{array\\}[\\s\\S]*?\\\\end\\{array\\})|(\\\\textit\\{.*?\\})|(\\\\textbf\\{.*?\\})/g;\r\n    const parts = content.split(regex).filter(part => part !== null && part !== undefined && part !== '');\r\n    let displayContent = '';\r\n    console.log(parts);\r\n    for (const part of parts) {\r\n        if (part.startsWith('\\\\(') || part.startsWith('\\\\[') || part.startsWith('\\\\begin') || part.startsWith('\\\\textit') || part.startsWith('\\\\textbf')) {\r\n            // Process LaTeX content\r\n\r\n            try {\r\n                const isDisplayMode = part.startsWith('\\\\[');\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');  // Strip the delimiters\r\n                const renderedMath = katex.renderToString(mathContent, { throwOnError: false, displayMode: isDisplayMode });\r\n\r\n                // Simulate typing the LaTeX\r\n                for (let i = 0; i < renderedMath.length; i++) {\r\n                    displayContent += renderedMath[i];\r\n\r\n\r\n                    setDisplayContent(displayContent);\r\n/*                     await delayRandomTime(); \r\n */                }\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                displayContent += `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n                setDisplayContent(displayContent);\r\n            }\r\n        } else {\r\n            // Process plain text content\r\n            for (let i = 0; i < part.length; i++) {\r\n                displayContent += part[i] === '\\n' ? '<br />' : part[i];\r\n                setDisplayContent(displayContent);\r\n                await textdelayRandomTime();\r\n            }\r\n        }\r\n    }\r\n};\r\n// Function to create random delay\r\n/* const delayRandomTime = () => {\r\n    return new Promise(resolve => {\r\n        const randomDelay = Math.floor(Math.random() * 1) + 0; // Delay between 50ms to 250ms\r\n        setTimeout(resolve, randomDelay);\r\n    });\r\n};  */\r\n\r\nconst textdelayRandomTime = () => {\r\n    return new Promise(resolve => {\r\n        const randomDelay = Math.floor(Math.random() * 20) + 5; // Delay between 50ms to 250ms\r\n        setTimeout(resolve, randomDelay);\r\n    });\r\n};\r\n\r\n// Main component to handle the content rendering\r\nconst TypewriterRenderer = ({ content }) => {\r\n    const [displayContent, setDisplayContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Start the typewriter effect when the component loads\r\n        typewriterEffect(content, setDisplayContent);\r\n    }, [content]);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    textAlign: 'left',         // Align text to the left\r\n                    width: '42vw',\r\n                    margin: '0 auto',          // Center the div horizontally\r\n                    padding: '10px',           // Add padding\r\n                    maxWidth: '900px',         // Set a max width for the container\r\n                    marginLeft: '1vw',        // Add some space from the left\r\n                    border: '0px solid gray',  // Gray border\r\n                    backgroundColor: 'black',  // Black background\r\n                    color: 'white',            // White text color for contrast\r\n                    fontFamily: 'Segoe UI, sans-serif',  // Font family\r\n                    fontSize: '18px',          // Font size\r\n                    fontWeight: 'lighter',        // Bold text\r\n                    fontStyle: 'normal',       // Italic text\r\n                    lineHeight: '1.6',         // Line height for readability\r\n                    letterSpacing: '1px'       // Space between letters\r\n                }}\r\n                dangerouslySetInnerHTML={{ __html: displayContent }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst TypewriterRendererResponse = ({ content }) => {\r\n    const [displayContent, setDisplayContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Start the typewriter effect when the component loads\r\n        typewriterEffectResponse(content, setDisplayContent);\r\n    }, [content]);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    textAlign: 'left',         // Align text to the left\r\n                    width: '42vw',\r\n                    margin: '0 auto',          // Center the div horizontally\r\n                    padding: '10px',           // Add padding\r\n                    maxWidth: '900px',         // Set a max width for the container\r\n                    marginLeft: '1vw',        // Add some space from the left\r\n                    border: '0px solid gray',  // Gray border\r\n                    backgroundColor: 'black',  // Black background\r\n                    color: 'white',            // White text color for contrast\r\n                    fontFamily: 'Segoe UI, sans-serif',  // Font family\r\n                    fontSize: '18px',          // Font size\r\n                    fontWeight: 'lighter',        // Bold text\r\n                    fontStyle: 'normal',       // Italic text\r\n                    lineHeight: '1.6',         // Line height for readability\r\n                    letterSpacing: '1px'       // Space between letters\r\n                }}\r\n                dangerouslySetInnerHTML={{ __html: displayContent }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n  const handlePaste = (event) => {\r\n    const items = event.clipboardData.items;\r\n    for (const item of items) {\r\n      if (item.type.startsWith('image/')) {\r\n        const file = item.getAsFile();\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n          setPastedImage(e.target.result);\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeImage = () => {\r\n    setPastedImage(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <Typewriter text=\"Talk to me about your question or copy your image including your question\" speed={40} />\r\n      </h1>\r\n\r\n      <textarea\r\n        className=\"custom-textarea\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onPaste={handlePaste}\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        placeholder=\"Type your message or paste an image...\"\r\n      />\r\n\r\n      {pastedImage && (\r\n        <div>\r\n            <h1>\r\n                <Typewriter text=\"pasted image:\" speed={40} />\r\n            </h1>\r\n          <img src={pastedImage} alt=\"Pasted content\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n          <button onClick={removeImage} style={{ marginTop: '10px' }}>Remove Pasted Image</button>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={sendMessage} disabled={loading} style={{ marginTop: '10px' }}>\r\n        {loading ? 'Sending...' : 'Send'}\r\n      </button>\r\n\r\n      <div>\r\n        {responses.map((item, index) => (\r\n          <div key={index} style={{ marginBottom: '20px' }}>\r\n            <p><b>You:</b>                         <div>\r\n                            <TypewriterRendererResponse content={item.query} />\r\n                        </div></p>\r\n            <p><b>GPT:</b>                         <div>\r\n                            <TypewriterRendererResponse content={item.response} />\r\n                        </div></p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}