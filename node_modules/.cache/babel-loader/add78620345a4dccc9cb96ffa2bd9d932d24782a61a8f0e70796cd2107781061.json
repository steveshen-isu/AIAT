{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\TopicSelector.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\nimport katex from 'katex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderLatex(latex) {\n  try {\n    const sanitizedLatex = latex.replace(/\\\\\\(|\\\\\\)|\\\\\\[|\\\\\\]/g, '');\n    const lines = sanitizedLatex.split('\\n');\n    return katex.renderToString(latex, {\n      throwOnError: false,\n      displayMode: true\n    });\n  } catch (e) {\n    return `<span class=\"error\">Error rendering LaTeX: ${e.message}</span>`;\n  }\n}\n\n/* const renderContentWithLatex = (content) => {\r\n    const regex = /\\\\\\((.+?)\\\\\\)|\\\\\\[(.+?)\\\\\\]/g;  // Regex to match \\( ... \\) or \\[ ... \\]\r\n    \r\n    // Split content into plain text and LaTeX parts\r\n    const parts = content.split(regex);\r\n\r\n    return parts.map((part, index) => {\r\n        if (part === undefined) return null;  // Skip undefined parts\r\n\r\n        // Check if the part is a LaTeX expression\r\n        if (part.startsWith('(') || part.startsWith('[')) {\r\n            try {\r\n                // Render LaTeX using KaTeX\r\n                const isDisplayMode = part.startsWith('[');  // Check if it should be display mode\r\n                return (\r\n                    <span key={index} dangerouslySetInnerHTML={{ __html: katex.renderToString(part, { throwOnError: false, displayMode: isDisplayMode }) }} />\r\n                );\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                return <span key={index} className=\"error\">Failed to render LaTeX: {part}</span>;\r\n            }\r\n        } else {\r\n            // Render plain text, converting newlines to <br> tags\r\n            const lines = part.split('\\n').map((line, lineIndex) => (\r\n                <React.Fragment key={lineIndex}>\r\n                    {line}\r\n                    <br />\r\n                </React.Fragment>\r\n            ));\r\n\r\n            return <span key={index}>{lines}</span>;\r\n        }\r\n    });\r\n}; */\n\nfunction escapeBackslashes(str) {\n  return str.replace(/\\\\/g, '\\\\\\\\');\n}\nconst renderContentWithLatex = content => {\n  // Regular expression to match LaTeX math mode delimiters \\( ... \\) or \\[ ... \\]\n  content = content.replace(/\\\\\\[\\s*/g, '\\\\['); // Replace \\[ with \\( and remove leading spaces\n  content = content.replace(/\\s*\\\\\\]/g, '\\\\]'); // Replace \\] with \\) and remove trailing spaces\n\n  const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[.*?\\\\\\])|(\\\\\\[\\\\\\n.*?\\\\\\]\\\\\\n)/g;\n\n  // Split content into plain text and LaTeX parts\n  const parts = content.split(regex).filter(Boolean);\n  console.log('parts in rendercontent function', parts);\n\n  // Process each part and return a string of HTML\n  const htmlContent = parts.map((part, index) => {\n    if (!part) return ''; // Skip undefined or empty parts\n\n    // If part starts with a LaTeX delimiter, render it with KaTeX\n    if (part.startsWith('\\\\(') || part.startsWith('\\\\[')) {\n      try {\n        const isDisplayMode = part.startsWith('['); // Use display mode for \\[ \\]\n        const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '');\n        return katex.renderToString(mathContent, {\n          delimiters: [{\n            left: '$$',\n            right: '$$',\n            display: true\n          }, {\n            left: '$',\n            right: '$',\n            display: false\n          }, {\n            left: '\\\\(',\n            right: '\\\\)',\n            display: false\n          }, {\n            left: '\\\\[',\n            right: '\\\\]',\n            display: true\n          }],\n          throwOnError: false,\n          displayMode: isDisplayMode\n        });\n      } catch (e) {\n        console.error('Error rendering LaTeX:', e);\n        return `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\n      }\n    } else {\n      // Render plain text, replacing newlines with <br> tags for line breaks\n      return part.replace(/\\n/g, '<br />');\n    }\n  });\n\n  // Join all parts into a single HTML string and return it\n  return htmlContent.join('');\n};\nfunction Typewriter({\n  text,\n  speed = 50\n}) {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  useEffect(() => {\n    let index = 0;\n    const timer = setInterval(() => {\n      if (index < text.length) {\n        setDisplayedText(prev => prev + text[index]);\n        index++;\n      } else {\n        clearInterval(timer);\n      }\n    }, speed);\n    return () => clearInterval(timer);\n  }, [text, speed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: displayedText\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 12\n  }, this);\n}\n_s(Typewriter, \"PLbRMeWiJa2NBtcoy3qeXvmWyJg=\");\n_c = Typewriter;\nfunction TopicSelector() {\n  _s2();\n  const [subjects, setSubjects] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [chapters, setChapters] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTextbook, setSelectedTextbook] = useState('');\n  const [selectedChapter, setSelectedChapter] = useState('');\n  const [latexCode, setLatexCode] = useState('');\n  const [userQuestion, setUserQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  console.log('Fetching from URL:', '/api/subjects');\n\n  // Fetch subjects on component mount\n  useEffect(() => {\n    fetch('http://localhost:200/api/subjects').then(response => response.json()).then(data => setSubjects(data)).catch(error => console.error('Error fetching subjects:', error));\n  }, []);\n\n  // Fetch textbooks when a subject is selected\n  useEffect(() => {\n    if (selectedSubject) {\n      fetch(`http://localhost:200/api/textbooks?subjectId=${selectedSubject}`).then(response => response.json()).then(setTextbooks).catch(error => console.error('Error fetching textbooks:', error));\n    } else {\n      setTextbooks([]); // Clear textbooks when no subject is selected\n    }\n  }, [selectedSubject]);\n\n  // Fetch chapters when a textbook is selected\n  useEffect(() => {\n    if (selectedTextbook) {\n      fetch(`http://localhost:200/api/chapters?textbookId=${selectedTextbook}`).then(response => response.json()).then(setChapters).catch(error => console.error('Error fetching chapters:', error));\n    } else {\n      setChapters([]); // Clear chapters when no textbook is selected\n    }\n  }, [selectedTextbook]);\n\n  // Fetch LaTeX code when a chapter is selected\n  useEffect(() => {\n    if (selectedChapter) {\n      fetch(`http://localhost:200/api/latex-code?chapterId=${selectedChapter}`).then(response => response.json()).then(data => setLatexCode(data.latexCode)).catch(error => console.error('Error fetching LaTeX code:', error));\n    }\n  }, [selectedChapter]);\n\n  /* const latexCodetest = `\r\n  \\\\begin{equation}\r\n  x + y = z\r\n  \\\\end{equation}\r\n  \\\\begin{equation}\r\n  x + y = z\r\n  \\\\end{equation}\r\n  `; */\n  /* const escapedLatexCode = escapeBackslashes(latexCode); */\n\n  console.log('Latex Code on render:', latexCode);\n  console.log('html on render:', renderContentWithLatex(latexCode));\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('http://localhost:200/api/chatgpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: userQuestion,\n          latexCode: latexCode\n        })\n      });\n      const data = await res.json();\n      setResponse(data.response);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const renderedresoponse = renderLatex(escapeBackslashes(response));\n  console.log('response from openai', response);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select a Chapter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSubject,\n      onChange: e => setSelectedSubject(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: subject.id,\n        children: subject.name\n      }, subject.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTextbook,\n      onChange: e => setSelectedTextbook(e.target.value),\n      disabled: !selectedSubject,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a textbook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), textbooks.map(textbook => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: textbook.id,\n        children: textbook.name\n      }, textbook.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedChapter,\n      onChange: e => setSelectedChapter(e.target.value),\n      disabled: !selectedTextbook,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: chapter.id,\n        children: chapter.title\n      }, chapter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: renderContentWithLatex(latexCode)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ask a Question about the content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          children: \"Your Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"question\",\n          value: userQuestion,\n          onChange: e => setUserQuestion(e.target.value),\n          rows: \"4\",\n          cols: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response from Aisolver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          text: renderContentWithLatex(response),\n          speed: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n}\n_s2(TopicSelector, \"KdeWd+8v7GCzQadBY5GgbJ/ECv4=\");\n_c2 = TopicSelector;\nexport default TopicSelector;\nvar _c, _c2;\n$RefreshReg$(_c, \"Typewriter\");\n$RefreshReg$(_c2, \"TopicSelector\");","map":{"version":3,"names":["React","useState","useEffect","katex","jsxDEV","_jsxDEV","renderLatex","latex","sanitizedLatex","replace","lines","split","renderToString","throwOnError","displayMode","e","message","escapeBackslashes","str","renderContentWithLatex","content","regex","parts","filter","Boolean","console","log","htmlContent","map","part","index","startsWith","isDisplayMode","mathContent","delimiters","left","right","display","error","join","Typewriter","text","speed","_s","displayedText","setDisplayedText","timer","setInterval","length","prev","clearInterval","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","TopicSelector","_s2","subjects","setSubjects","textbooks","setTextbooks","chapters","setChapters","selectedSubject","setSelectedSubject","selectedTextbook","setSelectedTextbook","selectedChapter","setSelectedChapter","latexCode","setLatexCode","userQuestion","setUserQuestion","response","setResponse","fetch","then","json","data","catch","handleSubmit","preventDefault","res","method","headers","body","JSON","stringify","question","renderedresoponse","children","value","onChange","target","subject","id","name","disabled","textbook","chapter","title","onSubmit","htmlFor","rows","cols","type","_c2","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/TopicSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\r\nimport katex from 'katex';\r\n\r\nfunction renderLatex(latex) {\r\n    try {\r\n        const sanitizedLatex = latex.replace(/\\\\\\(|\\\\\\)|\\\\\\[|\\\\\\]/g, '');\r\n        const lines = sanitizedLatex.split('\\n');\r\n        return katex.renderToString(latex, {\r\n            throwOnError: false,\r\n            displayMode: true \r\n        });\r\n    } catch (e) {\r\n        return `<span class=\"error\">Error rendering LaTeX: ${e.message}</span>`;\r\n    }\r\n}\r\n\r\n/* const renderContentWithLatex = (content) => {\r\n    const regex = /\\\\\\((.+?)\\\\\\)|\\\\\\[(.+?)\\\\\\]/g;  // Regex to match \\( ... \\) or \\[ ... \\]\r\n    \r\n    // Split content into plain text and LaTeX parts\r\n    const parts = content.split(regex);\r\n\r\n    return parts.map((part, index) => {\r\n        if (part === undefined) return null;  // Skip undefined parts\r\n\r\n        // Check if the part is a LaTeX expression\r\n        if (part.startsWith('(') || part.startsWith('[')) {\r\n            try {\r\n                // Render LaTeX using KaTeX\r\n                const isDisplayMode = part.startsWith('[');  // Check if it should be display mode\r\n                return (\r\n                    <span key={index} dangerouslySetInnerHTML={{ __html: katex.renderToString(part, { throwOnError: false, displayMode: isDisplayMode }) }} />\r\n                );\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                return <span key={index} className=\"error\">Failed to render LaTeX: {part}</span>;\r\n            }\r\n        } else {\r\n            // Render plain text, converting newlines to <br> tags\r\n            const lines = part.split('\\n').map((line, lineIndex) => (\r\n                <React.Fragment key={lineIndex}>\r\n                    {line}\r\n                    <br />\r\n                </React.Fragment>\r\n            ));\r\n\r\n            return <span key={index}>{lines}</span>;\r\n        }\r\n    });\r\n}; */\r\n\r\nfunction escapeBackslashes(str) {\r\n    return str.replace(/\\\\/g, '\\\\\\\\');\r\n}\r\n\r\nconst renderContentWithLatex = (content) => {\r\n    // Regular expression to match LaTeX math mode delimiters \\( ... \\) or \\[ ... \\]\r\n    content = content.replace(/\\\\\\[\\s*/g, '\\\\[');  // Replace \\[ with \\( and remove leading spaces\r\n    content = content.replace(/\\s*\\\\\\]/g, '\\\\]');  // Replace \\] with \\) and remove trailing spaces\r\n    \r\n    const regex = /(\\\\\\(.*?\\\\\\))|(\\\\\\[.*?\\\\\\])|(\\\\\\[\\\\\\n.*?\\\\\\]\\\\\\n)/g;\r\n    \r\n    // Split content into plain text and LaTeX parts\r\n    const parts = content.split(regex).filter(Boolean);\r\n\r\n    console.log('parts in rendercontent function', parts);\r\n    \r\n    // Process each part and return a string of HTML\r\n    const htmlContent = parts.map((part, index) => {\r\n        if (!part) return '';  // Skip undefined or empty parts\r\n\r\n\r\n        // If part starts with a LaTeX delimiter, render it with KaTeX\r\n        if (part.startsWith('\\\\(') || part.startsWith('\\\\[')) {\r\n            try {\r\n                const isDisplayMode = part.startsWith('[');  // Use display mode for \\[ \\]\r\n                const mathContent = part.replace(/\\\\[\\(\\[\\)\\]]/g, '')\r\n                return katex.renderToString(mathContent, {delimiters: [\r\n              {left: '$$', right: '$$', display: true},\r\n              {left: '$', right: '$', display: false},\r\n              {left: '\\\\(', right: '\\\\)', display: false},\r\n              {left: '\\\\[', right: '\\\\]', display: true}\r\n          ], throwOnError: false, displayMode: isDisplayMode });\r\n            } catch (e) {\r\n                console.error('Error rendering LaTeX:', e);\r\n                return `<span class=\"error\">Failed to render LaTeX: ${part}</span>`;\r\n            }\r\n        } else {\r\n            // Render plain text, replacing newlines with <br> tags for line breaks\r\n            return part.replace(/\\n/g, '<br />');\r\n        }\r\n    });\r\n\r\n    // Join all parts into a single HTML string and return it\r\n    return htmlContent.join('');\r\n};\r\n\r\nfunction Typewriter({ text, speed = 50 }) {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        let index = 0;\r\n        const timer = setInterval(() => {\r\n            if (index < text.length) {\r\n                setDisplayedText(prev => prev + text[index]);\r\n                index++;\r\n            } else {\r\n                clearInterval(timer);\r\n            }\r\n        }, speed);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [text, speed]);\r\n\r\n    return <span dangerouslySetInnerHTML={{ __html: displayedText }} />;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction TopicSelector() {\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [textbooks, setTextbooks] = useState([]);\r\n    const [chapters, setChapters] = useState([]);\r\n    const [selectedSubject, setSelectedSubject] = useState('');\r\n    const [selectedTextbook, setSelectedTextbook] = useState('');\r\n    const [selectedChapter, setSelectedChapter] = useState('');\r\n    const [latexCode, setLatexCode] = useState('');\r\n    const [userQuestion, setUserQuestion] = useState('');\r\n    const [response, setResponse] = useState('');\r\n\r\n\r\n\r\n    console.log('Fetching from URL:', '/api/subjects');\r\n    \r\n    \r\n    // Fetch subjects on component mount\r\n    useEffect(() => {\r\n        fetch('http://localhost:200/api/subjects')\r\n            .then(response => response.json())\r\n            .then(data => setSubjects(data))\r\n            .catch(error => console.error('Error fetching subjects:', error));\r\n    }, []);\r\n\r\n    // Fetch textbooks when a subject is selected\r\n    useEffect(() => {\r\n        if (selectedSubject) {\r\n            fetch(`http://localhost:200/api/textbooks?subjectId=${selectedSubject}`)\r\n                .then(response => response.json())\r\n                .then(setTextbooks)\r\n                .catch(error => console.error('Error fetching textbooks:', error));\r\n        } else {\r\n            setTextbooks([]); // Clear textbooks when no subject is selected\r\n        }\r\n    }, [selectedSubject]);\r\n\r\n    // Fetch chapters when a textbook is selected\r\n    useEffect(() => {\r\n        if (selectedTextbook) {\r\n            fetch(`http://localhost:200/api/chapters?textbookId=${selectedTextbook}`)\r\n                .then(response => response.json())\r\n                .then(setChapters)\r\n                .catch(error => console.error('Error fetching chapters:', error));\r\n        } else {\r\n            setChapters([]); // Clear chapters when no textbook is selected\r\n        }\r\n    }, [selectedTextbook]);\r\n\r\n    // Fetch LaTeX code when a chapter is selected\r\n    useEffect(() => {\r\n        if (selectedChapter) {\r\n            fetch(`http://localhost:200/api/latex-code?chapterId=${selectedChapter}`)\r\n                .then(response => response.json())\r\n                .then(data => setLatexCode(data.latexCode))\r\n                .catch(error => console.error('Error fetching LaTeX code:', error));\r\n        }\r\n    }, [selectedChapter]);\r\n    \r\n    /* const latexCodetest = `\r\n\\\\begin{equation}\r\nx + y = z\r\n\\\\end{equation}\r\n\\\\begin{equation}\r\nx + y = z\r\n\\\\end{equation}\r\n`; */\r\n    /* const escapedLatexCode = escapeBackslashes(latexCode); */\r\n\r\n    console.log('Latex Code on render:', latexCode);\r\n    console.log('html on render:', renderContentWithLatex(latexCode));\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            const res = await fetch('http://localhost:200/api/chatgpt', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    question: userQuestion,\r\n                    latexCode: latexCode\r\n                })\r\n            });\r\n            const data = await res.json();\r\n            setResponse(data.response);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const renderedresoponse = renderLatex(escapeBackslashes(response));\r\n    console.log('response from openai', response);\r\n    return (\r\n        <div>\r\n            <h1>Select a Chapter</h1>\r\n            <select value={selectedSubject} onChange={e => setSelectedSubject(e.target.value)}>\r\n                <option value=\"\">Select a subject</option>\r\n                {subjects.map(subject => (\r\n                    <option key={subject.id} value={subject.id}>{subject.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={selectedTextbook} onChange={e => setSelectedTextbook(e.target.value)} disabled={!selectedSubject}>\r\n                <option value=\"\">Select a textbook</option>\r\n                {textbooks.map(textbook => (\r\n                    <option key={textbook.id} value={textbook.id}>{textbook.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={selectedChapter} onChange={e => setSelectedChapter(e.target.value)} disabled={!selectedTextbook}>\r\n                <option value=\"\">Select a chapter</option>\r\n                {chapters.map(chapter => (\r\n                    <option key={chapter.id} value={chapter.id}>{chapter.title}</option>\r\n                ))}\r\n            </select>\r\n            <div>\r\n            <div\r\n                        dangerouslySetInnerHTML={{ __html: renderContentWithLatex(latexCode) }}\r\n                    />\r\n            </div>\r\n            {/* {latexCode && <div dangerouslySetInnerHTML={{__html: renderLatex(latexCode)}} />} */}\r\n           {/*  <span dangerouslySetInnerHTML={{ __html: renderLatex(escapedLatexCode) }} />\r\n            <span dangerouslySetInnerHTML={{ __html: renderLatex('\\\\theta') }} /> */}\r\n            \r\n     \r\n        <h1>Ask a Question about the content</h1>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"question\">Your Question:</label>\r\n                <textarea\r\n                    id=\"question\"\r\n                    value={userQuestion}\r\n                    onChange={(e) => setUserQuestion(e.target.value)}\r\n                    rows=\"4\"\r\n                    cols=\"50\"\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    \r\n    \r\n        {response && (\r\n            <div>\r\n                <h2>Response from Aisolver</h2>\r\n                <div>\r\n        <Typewriter text={renderContentWithLatex(response)} speed={150} />\r\n    </div>\r\n            </div>\r\n            \r\n        )}\r\n    </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TopicSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}