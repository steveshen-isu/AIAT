{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, memo } from 'react';\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\nimport katex from 'katex';\nimport Typewriter from './Typewriter';\nimport TypewriterResponse from './TypeWriterResponse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentUrl = window.location.href;\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\nfunction ChatBox() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [responses, setResponses] = useState([]);\n  const [pastedImage, setPastedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!message && !pastedImage) return;\n    setLoading(true);\n    try {\n      const fullConversation = [...responses.map(item => [{\n        role: 'user',\n        content: item.query\n      }, {\n        role: 'assistant',\n        content: item.response\n      }]).flat(), {\n        role: 'user',\n        content: message\n      } // Add the current message as the latest user input\n      ];\n      const requestBody = {\n        conversation: fullConversation,\n        image: pastedImage\n      };\n      const response = await fetch('http://' + ipAddress + ':200/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      setResponses(prev => [...prev, {\n        query: message,\n        response: data.response\n      }]);\n      setMessage('');\n      setPastedImage(null);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePaste = event => {\n    const items = event.clipboardData.items;\n    for (const item of items) {\n      if (item.type.startsWith('image/')) {\n        const file = item.getAsFile();\n        const reader = new FileReader();\n        reader.onload = e => {\n          setPastedImage(e.target.result);\n        };\n        reader.readAsDataURL(file);\n        break;\n      }\n    }\n  };\n  const removeImage = () => {\n    setPastedImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Typewriter, {\n        text: \"Talk to me about your question or copy your image including your question\",\n        speed: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"custom-textarea\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onPaste: handlePaste,\n      rows: \"4\",\n      cols: \"50\",\n      placeholder: \"Type your message or paste an image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), pastedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          text: \"pasted image:\",\n          speed: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pastedImage,\n        alt: \"Pasted content\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeImage,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Remove Pasted Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: loading,\n      style: {\n        marginTop: '10px'\n      },\n      children: loading ? 'Sending...' : 'Send'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responses.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(TypewriterResponse, {\n            content: item.query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"GPT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 28\n          }, this), \"                         \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TypewriterResponse, {\n              content: item.response\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatBox, \"ftp0sRsK8+NLlqHVUSzIplEBqZE=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","memo","katex","Typewriter","TypewriterResponse","jsxDEV","_jsxDEV","currentUrl","window","location","href","ipAddress","split","ChatBox","_s","message","setMessage","responses","setResponses","pastedImage","setPastedImage","loading","setLoading","sendMessage","fullConversation","map","item","role","content","query","response","flat","requestBody","conversation","image","fetch","method","headers","body","JSON","stringify","data","json","prev","error","console","handlePaste","event","items","clipboardData","type","startsWith","file","getAsFile","reader","FileReader","onload","e","target","result","readAsDataURL","removeImage","children","text","speed","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","onPaste","rows","cols","placeholder","src","alt","style","maxWidth","height","onClick","marginTop","disabled","index","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/chatbox.js"],"sourcesContent":["import React, { useState, useEffect, memo } from 'react';\r\nimport 'C:/Users/ROG/node_modules/katex/dist/katex.min.css';\r\nimport katex from 'katex';\r\nimport Typewriter from './Typewriter';\r\nimport TypewriterResponse from './TypeWriterResponse';\r\nconst currentUrl = window.location.href;\r\n\r\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\r\nfunction ChatBox() {\r\n    const [message, setMessage] = useState('');\r\n    const [responses, setResponses] = useState([]);\r\n    const [pastedImage, setPastedImage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const sendMessage = async () => {\r\n        if (!message && !pastedImage) return;\r\n\r\n        setLoading(true);\r\n        try {\r\n            const fullConversation = [\r\n                ...responses.map((item) => [\r\n                  { role: 'user', content: item.query },\r\n                  { role: 'assistant', content: item.response },\r\n                ]).flat(),\r\n                { role: 'user', content: message }, // Add the current message as the latest user input\r\n              ];\r\n              const requestBody = {\r\n                conversation: fullConversation,\r\n                image: pastedImage,\r\n              };\r\n\r\n            const response = await fetch('http://' + ipAddress + ':200/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n\r\n            const data = await response.json();\r\n            setResponses((prev) => [\r\n                ...prev,\r\n                { query: message, response: data.response },\r\n            ]);\r\n            setMessage('');\r\n            setPastedImage(null);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handlePaste = (event) => {\r\n        const items = event.clipboardData.items;\r\n        for (const item of items) {\r\n            if (item.type.startsWith('image/')) {\r\n                const file = item.getAsFile();\r\n                const reader = new FileReader();\r\n\r\n                reader.onload = (e) => {\r\n                    setPastedImage(e.target.result);\r\n                };\r\n\r\n                reader.readAsDataURL(file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeImage = () => {\r\n        setPastedImage(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                <Typewriter text=\"Talk to me about your question or copy your image including your question\" speed={20} />\r\n            </h1>\r\n\r\n            <textarea\r\n                className=\"custom-textarea\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                onPaste={handlePaste}\r\n                rows=\"4\"\r\n                cols=\"50\"\r\n                placeholder=\"Type your message or paste an image...\"\r\n            />\r\n\r\n            {pastedImage && (\r\n                <div>\r\n                    <h1>\r\n                        <Typewriter text=\"pasted image:\" speed={20} />\r\n                    </h1>\r\n                    <img src={pastedImage} alt=\"Pasted content\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n                    <button onClick={removeImage} style={{ marginTop: '10px' }}>Remove Pasted Image</button>\r\n                </div>\r\n            )}\r\n\r\n            <button onClick={sendMessage} disabled={loading} style={{ marginTop: '10px' }}>\r\n                {loading ? 'Sending...' : 'Send'}\r\n            </button>\r\n\r\n            <div>\r\n                {responses.map((item, index) => (\r\n                    <div key={index} style={{ marginBottom: '20px' }}>\r\n                        <p><b>You:</b>\r\n                            <TypewriterResponse content={item.query} />\r\n                        </p>\r\n                        <p><b>GPT:</b>                         <div>\r\n                            <TypewriterResponse content={item.response} />\r\n                        </div></p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}