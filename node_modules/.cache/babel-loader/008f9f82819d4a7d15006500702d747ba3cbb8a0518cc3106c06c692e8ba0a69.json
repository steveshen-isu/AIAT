{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\ExamGrader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExamGrader() {\n  _s();\n  const [questionImage, setQuestionImage] = useState('');\n  const [markSchemeImage, setMarkSchemeImage] = useState('');\n  const [studentSolutionImage, setStudentSolutionImage] = useState('');\n  const [result, setResult] = useState({\n    score: '',\n    reason: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const handlePaste = (event, setImage) => {\n    const items = event.clipboardData.items;\n    for (const item of items) {\n      if (item.type.startsWith('image/')) {\n        const file = item.getAsFile();\n        const reader = new FileReader();\n        reader.onload = e => setImage(e.target.result);\n        reader.readAsDataURL(file);\n        break;\n      }\n    }\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/grade', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          questionImage,\n          markSchemeImage,\n          studentSolutionImage\n        })\n      });\n      const data = await response.json();\n      setResult({\n        score: data.score,\n        reason: data.reason\n      });\n    } catch (error) {\n      console.error('Error grading:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Paste Question Image Here\",\n      onPaste: e => handlePaste(e, setQuestionImage),\n      style: {\n        width: '30%',\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Paste Mark Scheme Image Here\",\n      onPaste: e => handlePaste(e, setMarkSchemeImage),\n      style: {\n        width: '30%',\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Paste Student Solution Image Here\",\n      onPaste: e => handlePaste(e, setStudentSolutionImage),\n      style: {\n        width: '30%',\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: loading,\n      children: loading ? 'Grading...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }, this), \" \", result.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Reason:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }, this), \" \", result.reason]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ExamGrader, \"6hFx4ydahUCizYjlCCBn30VlcWE=\");\n_c = ExamGrader;\nexport default ExamGrader;\nvar _c;\n$RefreshReg$(_c, \"ExamGrader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExamGrader","_s","questionImage","setQuestionImage","markSchemeImage","setMarkSchemeImage","studentSolutionImage","setStudentSolutionImage","result","setResult","score","reason","loading","setLoading","handlePaste","event","setImage","items","clipboardData","item","type","startsWith","file","getAsFile","reader","FileReader","onload","e","target","readAsDataURL","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","style","display","flexDirection","marginBottom","children","placeholder","onPaste","width","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/ExamGrader.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ExamGrader() {\r\n  const [questionImage, setQuestionImage] = useState('');\r\n  const [markSchemeImage, setMarkSchemeImage] = useState('');\r\n  const [studentSolutionImage, setStudentSolutionImage] = useState('');\r\n  const [result, setResult] = useState({ score: '', reason: '' });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePaste = (event, setImage) => {\r\n    const items = event.clipboardData.items;\r\n    for (const item of items) {\r\n      if (item.type.startsWith('image/')) {\r\n        const file = item.getAsFile();\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => setImage(e.target.result);\r\n        reader.readAsDataURL(file);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/grade', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          questionImage,\r\n          markSchemeImage,\r\n          studentSolutionImage,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResult({ score: data.score, reason: data.reason });\r\n    } catch (error) {\r\n      console.error('Error grading:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'row', marginBottom: '20px' }}>\r\n      <textarea\r\n        placeholder=\"Paste Question Image Here\"\r\n        onPaste={(e) => handlePaste(e, setQuestionImage)}\r\n        style={{ width: '30%', marginRight: '10px' }}\r\n      />\r\n      <textarea\r\n        placeholder=\"Paste Mark Scheme Image Here\"\r\n        onPaste={(e) => handlePaste(e, setMarkSchemeImage)}\r\n        style={{ width: '30%', marginRight: '10px' }}\r\n      />\r\n      <textarea\r\n        placeholder=\"Paste Student Solution Image Here\"\r\n        onPaste={(e) => handlePaste(e, setStudentSolutionImage)}\r\n        style={{ width: '30%', marginRight: '10px' }}\r\n      />\r\n      <button onClick={handleSubmit} disabled={loading}>\r\n        {loading ? 'Grading...' : 'Submit'}\r\n      </button>\r\n\r\n      <div style={{ marginLeft: '20px' }}>\r\n        <div><b>Score:</b> {result.score}</div>\r\n        <div><b>Reason:</b> {result.reason}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExamGrader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}