{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\ai-solver\\\\src\\\\components\\\\PlotGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport Plot from 'react-plotly.js';\nimport Typewriter from './Typewriter';\nimport Button from \"@/components/ui/button\"; // Import Button from shadcn\nimport Input from \"@/components/ui/input\"; // Import Input from shadcn\nimport Textarea from \"@/components/ui/textarea\"; // Import Textarea from shadcn\nimport Loader from \"@/components/ui/loader\"; // Loader for animations\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\"; // Cards for layout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentUrl = window.location.href;\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\nfunction PlotGenerator() {\n  _s();\n  const [mathFunction, setMathFunction] = useState('');\n  const [plotCode, setPlotCode] = useState('1'); // Store code from the backend\n  const [plotUrl, setPlotUrl] = useState(''); // URL of the generated plot image\n  const [ButtonDisabled, setButtonDisabled] = useState(false);\n  const [d3ButtonDisabled, setD3ButtonDisabled] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage(null);\n    setButtonDisabled(true);\n    // Send the user's math function request to the backend\n    try {\n      const res = await fetch('http://' + ipAddress + ':200/api/generate-plot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mathFunction: mathFunction,\n          ipAddress: ipAddress\n        })\n      });\n      const data = await res.json();\n      setPlotCode(data.plotCode); // Generated code from OpenAI\n      setPlotUrl(data.plotUrl);\n    } catch (error) {\n      console.error('API Error:', error);\n      if (error.response && error.response.data) {\n        // Backend returned an error response\n        setErrorMessage(error.response.data.message || 'An error occurred on the server.');\n      } else {\n        // Network or client-side error\n        setErrorMessage('Failed to connect to the server. Please try again.');\n      }\n    }\n    setButtonDisabled(false);\n  };\n  console.log(plotCode);\n  console.log(plotUrl);\n  const [dataD3Plot, setDataD3plot] = useState('');\n  const handleD3Submit = async e => {\n    e.preventDefault();\n    setErrorMessage(null);\n    setD3ButtonDisabled(true);\n    try {\n      // Send request to backend with function name\n      const res = await fetch('http://' + ipAddress + ':200/api/generate-d3plot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mathFunction: mathFunction,\n          ipAddress: ipAddress\n        })\n      });\n      const result = await res.json();\n      setDataD3plot(result.plotdata); // Receive dataset and store it in state\n    } catch (error) {\n      console.error('API Error:', error);\n      if (error.response && error.response.data) {\n        // Backend returned an error response\n        setErrorMessage(error.response.data.message || 'An error occurred on the server.');\n      } else {\n        // Network or client-side error\n        setErrorMessage('Failed to connect to the server. Please try again.');\n      }\n    }\n    setD3ButtonDisabled(false);\n  };\n  console.log('interactive plot data:', dataD3Plot);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center text-3xl font-semibold\",\n      children: /*#__PURE__*/_jsxDEV(Typewriter, {\n        text: \"Type in the function you are interested in to plot it\",\n        speed: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-lg text-gray-700\",\n          children: \"Enter a mathematical function\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(Textarea, {\n            className: \"custom-textarea\",\n            placeholder: \"e.g., sin(x), x^2, or cos(x)*tan(x)\",\n            value: mathFunction,\n            onChange: e => setMathFunction(e.target.value),\n            rows: \"4\",\n            disabled: ButtonDisabled || d3ButtonDisabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"w-full\",\n            onClick: () => {\n              setPlotCode(null);\n              setPlotUrl(null);\n              setDataD3plot(null);\n            },\n            disabled: ButtonDisabled || d3ButtonDisabled,\n            children: \"Generate Plot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-xl shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleD3Submit,\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"w-full bg-green-500 hover:bg-green-600\",\n            onClick: () => {\n              setPlotCode(null);\n              setPlotUrl(null);\n              setDataD3plot(null);\n            },\n            disabled: ButtonDisabled || d3ButtonDisabled,\n            children: \"Not Just a Graph!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), !plotCode && !dataD3Plot && !errorMessage( /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loading-animation\",\n      className: \"flex items-center justify-center space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        className: \"text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Generating Plot...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this)), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-2 bg-red-100 text-red-700 border border-red-400 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), \" \", errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this), dataD3Plot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plot-container shadow-lg border rounded-lg p-4\",\n      children: /*#__PURE__*/_jsxDEV(Plot, {\n        data: dataD3Plot.data,\n        layout: dataD3Plot.layout,\n        config: {\n          responsive: true,\n          displayModeBar: true,\n          scrollZoom: true,\n          staticPlot: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this), plotCode && plotUrl && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-2xl shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          children: /*#__PURE__*/_jsxDEV(Typewriter, {\n            text: \"Generated Plot\",\n            speed: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${plotUrl}?rand=${Math.random()}`,\n          alt: \"Generated plot\",\n          className: \"rounded-lg shadow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"text-center text-sm text-gray-500 mt-8\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Test version 1.0.0. \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Powered by \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"@openai\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(PlotGenerator, \"dYfSownokL+D44WILs2m8JUhiuk=\");\n_c = PlotGenerator;\nexport default PlotGenerator;\nvar _c;\n$RefreshReg$(_c, \"PlotGenerator\");","map":{"version":3,"names":["React","useState","useEffect","d3","Plot","Typewriter","Button","Input","Textarea","Loader","Card","CardHeader","CardTitle","CardContent","jsxDEV","_jsxDEV","currentUrl","window","location","href","ipAddress","split","PlotGenerator","_s","mathFunction","setMathFunction","plotCode","setPlotCode","plotUrl","setPlotUrl","ButtonDisabled","setButtonDisabled","d3ButtonDisabled","setD3ButtonDisabled","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","error","console","response","message","log","dataD3Plot","setDataD3plot","handleD3Submit","result","plotdata","className","children","text","speed","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","rows","disabled","type","onClick","id","layout","config","responsive","displayModeBar","scrollZoom","staticPlot","src","Math","random","alt","_c","$RefreshReg$"],"sources":["C:/Users/ROG/ai-solver/src/components/PlotGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport Plot from 'react-plotly.js';\r\nimport Typewriter from './Typewriter';\r\nimport Button from \"@/components/ui/button\"; // Import Button from shadcn\r\nimport Input from \"@/components/ui/input\"; // Import Input from shadcn\r\nimport Textarea from \"@/components/ui/textarea\"; // Import Textarea from shadcn\r\nimport Loader from \"@/components/ui/loader\"; // Loader for animations\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\"; // Cards for layout\r\nconst currentUrl = window.location.href;\r\n\r\nconst ipAddress = currentUrl.split(':')[1].split('/')[2];\r\n\r\n\r\n\r\nfunction PlotGenerator() {\r\n    const [mathFunction, setMathFunction] = useState('');\r\n    const [plotCode, setPlotCode] = useState('1'); // Store code from the backend\r\n    const [plotUrl, setPlotUrl] = useState('');   // URL of the generated plot image\r\n    const [ButtonDisabled, setButtonDisabled] = useState(false);\r\n    const [d3ButtonDisabled, setD3ButtonDisabled] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage(null)\r\n        setButtonDisabled(true)\r\n        // Send the user's math function request to the backend\r\n        try {\r\n            const res = await fetch('http://' + ipAddress + ':200/api/generate-plot', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    mathFunction: mathFunction,\r\n                    ipAddress: ipAddress,\r\n                }),\r\n            });\r\n\r\n            const data = await res.json();\r\n            setPlotCode(data.plotCode);  // Generated code from OpenAI\r\n            setPlotUrl(data.plotUrl);\r\n        } catch (error) {\r\n            console.error('API Error:', error);\r\n        \r\n            if (error.response && error.response.data) {\r\n              // Backend returned an error response\r\n              setErrorMessage(error.response.data.message || 'An error occurred on the server.');\r\n            } else {\r\n              // Network or client-side error\r\n              setErrorMessage('Failed to connect to the server. Please try again.');\r\n            }\r\n          }\r\n        setButtonDisabled(false)\r\n    };\r\n    console.log(plotCode);\r\n    console.log(plotUrl);\r\n\r\n    const [dataD3Plot, setDataD3plot] = useState('');\r\n\r\n    const handleD3Submit = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage(null)\r\n        setD3ButtonDisabled(true)\r\n        try {\r\n            // Send request to backend with function name\r\n            const res = await fetch('http://' + ipAddress + ':200/api/generate-d3plot', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    mathFunction: mathFunction,\r\n                    ipAddress: ipAddress,\r\n                }),\r\n            });\r\n            const result = await res.json();\r\n            setDataD3plot(result.plotdata);  // Receive dataset and store it in state\r\n        } catch (error) {\r\n            console.error('API Error:', error);\r\n        \r\n            if (error.response && error.response.data) {\r\n              // Backend returned an error response\r\n              setErrorMessage(error.response.data.message || 'An error occurred on the server.');\r\n            } else {\r\n              // Network or client-side error\r\n              setErrorMessage('Failed to connect to the server. Please try again.');\r\n            }\r\n          }\r\n        setD3ButtonDisabled(false)\r\n    };\r\n\r\n    console.log('interactive plot data:', dataD3Plot)\r\n\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center p-6 space-y-6\">\r\n            {/* Title with Typewriter */}\r\n            <h1 className=\"text-center text-3xl font-semibold\">\r\n                <Typewriter\r\n                    text=\"Type in the function you are interested in to plot it\"\r\n                    speed={20}\r\n                />\r\n            </h1>\r\n\r\n            {/* Input Card */}\r\n            <Card className=\"w-full max-w-2xl shadow-md\">\r\n                <CardHeader>\r\n                    <CardTitle className=\"text-lg text-gray-700\">\r\n                        Enter a mathematical function\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                        <Textarea\r\n                            className=\"custom-textarea\"\r\n                            placeholder=\"e.g., sin(x), x^2, or cos(x)*tan(x)\"\r\n                            value={mathFunction}\r\n                            onChange={(e) => setMathFunction(e.target.value)}\r\n                            rows=\"4\"\r\n                            disabled={ButtonDisabled || d3ButtonDisabled}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            className=\"w-full\"\r\n                            onClick={() => {\r\n                                setPlotCode(null);\r\n                                setPlotUrl(null);\r\n                                setDataD3plot(null);\r\n                            }}\r\n                            disabled={ButtonDisabled || d3ButtonDisabled}\r\n                        >\r\n                            Generate Plot\r\n                        </Button>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* D3 Plot Button */}\r\n            <Card className=\"w-full max-w-xl shadow-md\">\r\n                <CardContent>\r\n                    <form onSubmit={handleD3Submit} className=\"space-y-4\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            className=\"w-full bg-green-500 hover:bg-green-600\"\r\n                            onClick={() => {\r\n                                setPlotCode(null);\r\n                                setPlotUrl(null);\r\n                                setDataD3plot(null);\r\n                            }}\r\n                            disabled={ButtonDisabled || d3ButtonDisabled}\r\n                        >\r\n                            Not Just a Graph!\r\n                        </Button>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Loading Animation */}\r\n            {!plotCode && !dataD3Plot && !errorMessage (\r\n                <div\r\n                    id=\"loading-animation\"\r\n                    className=\"flex items-center justify-center space-x-2\"\r\n                >\r\n                    <Loader className=\"text-blue-500\" /> {/* Shadcn loader */}\r\n                    <span>Generating Plot...</span>\r\n                </div>\r\n            )}\r\n            {errorMessage && (\r\n                <div className=\"mt-4 p-2 bg-red-100 text-red-700 border border-red-400 rounded\">\r\n                    <strong>Error:</strong> {errorMessage}\r\n                </div>\r\n            )}\r\n            {/* Plotly Plot */}\r\n            {dataD3Plot && (\r\n                <div className=\"plot-container shadow-lg border rounded-lg p-4\">\r\n                    <Plot\r\n                        data={dataD3Plot.data}\r\n                        layout={dataD3Plot.layout}\r\n                        config={{\r\n                            responsive: true,\r\n                            displayModeBar: true,\r\n                            scrollZoom: true,\r\n                            staticPlot: false,\r\n                        }}\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            {/* Generated Plot with URL */}\r\n            {plotCode && plotUrl && (\r\n                <Card className=\"w-full max-w-2xl shadow-md\">\r\n                    <CardHeader>\r\n                        <CardTitle>\r\n                            <Typewriter text=\"Generated Plot\" speed={40} />\r\n                        </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <img\r\n                            src={`${plotUrl}?rand=${Math.random()}`}\r\n                            alt=\"Generated plot\"\r\n                            className=\"rounded-lg shadow\"\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n\r\n            {/* Footer */}\r\n            <footer className=\"text-center text-sm text-gray-500 mt-8\">\r\n                <p>\r\n                    Test version 1.0.0. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    Powered by <span className=\"font-semibold\">@openai</span>\r\n                </p>\r\n            </footer>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default PlotGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}